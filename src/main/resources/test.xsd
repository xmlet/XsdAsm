<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="http://schemas.microsoft.com/client/2007"
           elementFormDefault="qualified"
           xmlns="http://schemas.microsoft.com/client/2007"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <xsd:element name="personInfoElementContainer">
        <xsd:complexType>
            <xsd:group>
                <xsd:all>
                    <xs:element name="personInfo">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="firstName" type="xs:string"/>
                                <xs:element name="lastName" type="xs:string"/>
                                <xs:element name="personAddress" type="xs:string"/>
                                <xs:element name="city" type="xs:string"/>
                                <xs:element name="country" type="xs:string"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xsd:all>
            </xsd:group>
        </xsd:complexType>
    </xsd:element>

    <!-- **************************************************************** -->

    <xs:element name="aName">
        <xs:complexType>
            <xs:group name="groupWSequence">
                <xs:sequence>
                    <xs:element name="elem1" type="xs:string"/>
                    <xs:element name="elem2" type="xs:string"/>
                </xs:sequence>
            </xs:group>
        </xs:complexType>
    </xs:element>

    <!-- **************************************************************** -->

    <xs:element name="studentGrades">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="firstName" type="xs:string"/>
                <xs:element name="lastName" type="xs:string"/>
                <xs:group>
                    <xsd:all>
                        <xs:element name="gradeNumeric"/>
                        <xs:element name="gradeQualitative"/>
                    </xsd:all>
                </xs:group>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- **************************************************************** -->

    <xsd:element name="intvalues">
        <xsd:complexType>
            <xsd:attribute name="intlist" type="valuelist"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:simpleType name="valuelist">
        <xsd:restriction>
            <xsd:maxLength value="5"/>
            <xsd:minLength value="1"/>
        </xsd:restriction>
        <xsd:list itemType="xsd:int"/>
    </xsd:simpleType>

    <!-- **************************************************************** -->

    <xsd:annotation>
        <xsd:documentation>
            Microsoft Visual Studio schema for HTML 5
        </xsd:documentation>
    </xsd:annotation>

    <xsd:include schemaLocation="I18Languages.xsd"/>

    <xsd:attributeGroup name="coreServerAttributeGroup" vs:nonbrowseable="true">
        <!-- Attributes -->
        <xsd:attribute name="EnableTheming" type="xsd:boolean" vs:nonbrowseable="true" vs:category="ASP.NET"
                       vs:disallowedonmobilepages="true" default="true" vs:serverattribute="true"/>
        <xsd:attribute name="EnableViewState" type="xsd:boolean" vs:category="ASP.NET" default="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="SkinID" type="xsd:string" vs:nonbrowseable="true" vs:category="ASP.NET"
                       vs:nonfilterable="true" vs:disallowedonmobilepages="true" default="" vs:serverattribute="true"/>
        <xsd:attribute name="Visible" type="xsd:boolean" vs:category="ASP.NET" default="true"
                       vs:serverattribute="true"/>
        <!-- Events -->
        <xsd:attribute name="OnDataBinding" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnDisposed" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnInit" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnLoad" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnPreRender" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnUnload" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="aServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="OnServerClick" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="buttonServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="CausesValidation" type="xsd:boolean" vs:category="ASP.NET" default="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="ValidationGroup" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnServerClick" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="formServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="DefaultButton" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="DefaultFocus" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="SubmitDisabledControls" type="xsd:boolean" vs:category="ASP.NET" default="false"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="inputServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="CausesValidation" type="xsd:boolean" vs:inputtype="button image submit"
                       vs:category="ASP.NET" vs:serverattribute="true"/>
        <xsd:attribute name="OnServerClick" vs:omtype="event" vs:inputtype="button image submit" vs:category="ASP.NET"
                       vs:nonfilterable="true" vs:serverattribute="true"/>
        <xsd:attribute name="OnServerChange" vs:omtype="event" vs:inputtype="checkbox hidden radio text"
                       vs:category="ASP.NET" vs:nonfilterable="true" vs:serverattribute="true"/>
        <xsd:attribute name="ValidationGroup" type="xsd:string" vs:inputtype="button image submit" vs:category="ASP.NET"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="selectServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="DataSourceID" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="DataTextField" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="DataValueField" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnServerChange" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="textareaServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="OnServerChange" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="classAttributeGroup">
        <xsd:attribute name="class" type="xsd:string"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="coreAttributeGroup" vs:nonbrowseable="true">
        <xsd:attributeGroup ref="classAttributeGroup"/>
        <xsd:attribute name="runat" vs:readonly="true" vs:nonfilterable="true" vs:serverattribute="true">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="server"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="accesskey"/>
        <xsd:attribute name="contenteditable" vs:standalone="true">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="true"/>
                    <xsd:enumeration value="false"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="contextmenu"/>
        <xsd:attribute name="data-FolderName"/>
        <xsd:attribute name="data-MsgId"/>
        <xsd:attribute name="dir" default="ltr">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="ltr"/>
                    <xsd:enumeration value="rtl"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="draggable" vs:standalone="true">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="true"/>
                    <xsd:enumeration value="false"/>
                    <xsd:enumeration value="auto"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="id" vs:renametype="classmember"/>
        <xsd:attribute name="item" vs:standalone="true"/>
        <xsd:attribute name="hidden" vs:standalone="true">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="hidden"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="lang" type="i18LanguageCode"/>
        <xsd:attribute name="itemprop"/>
        <xsd:attribute name="role"/>
        <xsd:attribute name="spellcheck" vs:standalone="true">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="true"/>
                    <xsd:enumeration value="false"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="style" vs:builder="style"/>
        <xsd:attribute name="subject"/>
        <xsd:attribute name="tabIndex"/>
        <xsd:attribute name="title"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="commonEventsGroup" vs:nonbrowseable="true">
        <xsd:attribute name="onabort" vs:omtype="event"/>
        <xsd:attribute name="onblur" vs:omtype="event"/>
        <xsd:attribute name="oncanplay" vs:omtype="event"/>
        <xsd:attribute name="oncanplaythrough" vs:omtype="event"/>
        <xsd:attribute name="onchange" vs:omtype="event"/>
        <xsd:attribute name="onclick" vs:omtype="event"/>
        <xsd:attribute name="oncontextmenu" vs:omtype="event"/>
        <xsd:attribute name="ondblclick" vs:omtype="event"/>
        <xsd:attribute name="ondrag" vs:omtype="event"/>
        <xsd:attribute name="ondragenter" vs:omtype="event"/>
        <xsd:attribute name="ondragleave" vs:omtype="event"/>
        <xsd:attribute name="ondragover" vs:omtype="event"/>
        <xsd:attribute name="ondragstart" vs:omtype="event"/>
        <xsd:attribute name="ondrop" vs:omtype="event"/>
        <xsd:attribute name="ondurationchange" vs:omtype="event"/>
        <xsd:attribute name="onemptied" vs:omtype="event"/>
        <xsd:attribute name="onended" vs:omtype="event"/>
        <xsd:attribute name="onerror" vs:omtype="event"/>
        <xsd:attribute name="onfocus" vs:omtype="event"/>
        <xsd:attribute name="onformchange" vs:omtype="event"/>
        <xsd:attribute name="onforminput" vs:omtype="event"/>
        <xsd:attribute name="oninput" vs:omtype="event"/>
        <xsd:attribute name="oninvalid" vs:omtype="event"/>
        <xsd:attribute name="onkeydown" vs:omtype="event"/>
        <xsd:attribute name="onkeypress" vs:omtype="event"/>
        <xsd:attribute name="onkeyup" vs:omtype="event"/>
        <xsd:attribute name="onload" vs:omtype="event"/>
        <xsd:attribute name="onloadeddata" vs:omtype="event"/>
        <xsd:attribute name="onloadedmetadata" vs:omtype="event"/>
        <xsd:attribute name="onloadstart" vs:omtype="event"/>
        <xsd:attribute name="onmousedown" vs:omtype="event"/>
        <xsd:attribute name="onmousemove" vs:omtype="event"/>
        <xsd:attribute name="onmouseout" vs:omtype="event"/>
        <xsd:attribute name="onmouseover" vs:omtype="event"/>
        <xsd:attribute name="onmouseup" vs:omtype="event"/>
        <xsd:attribute name="onmousewheel" vs:omtype="event"/>
        <xsd:attribute name="onpause" vs:omtype="event"/>
        <xsd:attribute name="onplay" vs:omtype="event"/>
        <xsd:attribute name="onplaying" vs:omtype="event"/>
        <xsd:attribute name="onprogress" vs:omtype="event"/>
        <xsd:attribute name="onratechange" vs:omtype="event"/>
        <xsd:attribute name="onreadystatechange" vs:omtype="event"/>
        <xsd:attribute name="onscroll" vs:omtype="event"/>
        <xsd:attribute name="onseeked" vs:omtype="event"/>
        <xsd:attribute name="onseeking" vs:omtype="event"/>
        <xsd:attribute name="onselect" vs:omtype="event"/>
        <xsd:attribute name="onshow" vs:omtype="event"/>
        <xsd:attribute name="onstalled" vs:omtype="event"/>
        <xsd:attribute name="onsubmit" vs:omtype="event"/>
        <xsd:attribute name="onsuspend" vs:omtype="event"/>
        <xsd:attribute name="ontimeupdate" vs:omtype="event"/>
        <xsd:attribute name="onvolumenchange" vs:omtype="event"/>
        <xsd:attribute name="onwaiting" vs:omtype="event"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="commonAttributeGroup" vs:nonbrowseable="true">
        <xsd:attributeGroup ref="coreAttributeGroup"/>
        <xsd:attributeGroup ref="commonEventsGroup"/>
        <xsd:attributeGroup ref="coreServerAttributeGroup"/>
    </xsd:attributeGroup>

    <xsd:group name="metadataContent" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="base"/>
            <xsd:element ref="command"/>
            <xsd:element ref="link"/>
            <xsd:element ref="meta"/>
            <xsd:element ref="noscript"/>
            <xsd:element ref="script"/>
            <xsd:element ref="style"/>
            <xsd:element ref="title" minOccurs="1" maxOccurs="1"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="flowContent" vs:nonbrowseable="true">
        <xsd:choice>

            <xsd:element ref="a"/>
            <xsd:element ref="abbr"/>
            <xsd:element ref="area" vs:requiredascendant="map"/>
            <xsd:element ref="address"/>
            <xsd:element ref="article"/>
            <xsd:element ref="aside"/>
            <xsd:element ref="audio"/>

            <xsd:element ref="b"/>
            <xsd:element ref="bdo"/>
            <xsd:element ref="blockquote"/>
            <xsd:element ref="br"/>
            <xsd:element ref="button"/>

            <xsd:element ref="canvas"/>
            <xsd:element ref="cite"/>
            <xsd:element ref="code"/>
            <xsd:element ref="command"/>

            <xsd:element ref="datalist"/>
            <xsd:element ref="del"/>
            <xsd:element ref="details"/>
            <xsd:element ref="dfn"/>
            <xsd:element ref="dialog"/>
            <xsd:element ref="div"/>
            <xsd:element ref="dl"/>

            <xsd:element ref="em"/>
            <xsd:element ref="embed"/>

            <xsd:element ref="fieldset"/>
            <xsd:element ref="figure"/>
            <xsd:element ref="footer"/>
            <xsd:element ref="form"/>

            <xsd:element ref="h1"/>
            <xsd:element ref="h2"/>
            <xsd:element ref="h3"/>
            <xsd:element ref="h4"/>
            <xsd:element ref="h5"/>
            <xsd:element ref="h6"/>
            <xsd:element ref="header"/>
            <xsd:element ref="hgroup"/>
            <xsd:element ref="hr"/>

            <xsd:element ref="i"/>
            <xsd:element ref="iframe"/>
            <xsd:element ref="img"/>
            <xsd:element ref="input"/>
            <xsd:element ref="ins"/>

            <xsd:element ref="kbd"/>
            <xsd:element ref="keygen"/>

            <xsd:element ref="label"/>
            <xsd:element ref="link" vs:requiredattribute="itemprop"/>

            <xsd:element ref="map"/>
            <xsd:element ref="mark"/>
            <xsd:element ref="math"/>
            <xsd:element ref="menu" vs:requiredattribute="itemprop"/>
            <xsd:element ref="meta"/>
            <xsd:element ref="meter"/>

            <xsd:element ref="nav"/>
            <xsd:element ref="noscript"/>

            <xsd:element ref="ol"/>
            <xsd:element ref="object"/>
            <xsd:element ref="output"/>

            <xsd:element ref="p"/>
            <xsd:element ref="pre"/>
            <xsd:element ref="progress"/>

            <xsd:element ref="q"/>

            <xsd:element ref="ruby"/>

            <xsd:element ref="samp"/>
            <xsd:element ref="script"/>
            <xsd:element ref="section"/>
            <xsd:element ref="select"/>
            <xsd:element ref="small"/>
            <xsd:element ref="span"/>
            <xsd:element ref="strong"/>
            <xsd:element ref="style" vs:requiredattribute="scoped"/>
            <xsd:element ref="sub"/>
            <xsd:element ref="sup"/>
            <xsd:element ref="svg"/>

            <xsd:element ref="table"/>
            <xsd:element ref="textarea"/>
            <xsd:element ref="time"/>

            <xsd:element ref="ul"/>

            <xsd:element ref="var"/>
            <xsd:element ref="video"/>

        </xsd:choice>
    </xsd:group>

    <xsd:group name="headingContent" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="h1"/>
            <xsd:element ref="h2"/>
            <xsd:element ref="h3"/>
            <xsd:element ref="h4"/>
            <xsd:element ref="h5"/>
            <xsd:element ref="h6"/>
            <xsd:element ref="hgroup"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="sectioningContent" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="article"/>
            <xsd:element ref="aside"/>
            <xsd:element ref="nav"/>
            <xsd:element ref="section"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="phrasingContent" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="a" vs:requiredcontent="phrasingContent"/>
            <xsd:element ref="abbr"/>
            <xsd:element ref="area" vs:requiredascendant="map"/>
            <xsd:element ref="audio"/>

            <xsd:element ref="b"/>
            <xsd:element ref="bdo"/>
            <xsd:element ref="br"/>
            <xsd:element ref="button"/>

            <xsd:element ref="canvas"/>
            <xsd:element ref="cite"/>
            <xsd:element ref="code"/>
            <xsd:element ref="command"/>

            <xsd:element ref="datalist"/>
            <xsd:element ref="del" vs:requiredcontent="phrasingContent"/>
            <xsd:element ref="dfn"/>

            <xsd:element ref="em"/>
            <xsd:element ref="embed"/>

            <xsd:element ref="i"/>
            <xsd:element ref="iframe"/>
            <xsd:element ref="img"/>
            <xsd:element ref="input"/>
            <xsd:element ref="ins" vs:requiredcontent="phrasingContent"/>

            <xsd:element ref="kbd"/>
            <xsd:element ref="keygen"/>

            <xsd:element ref="label"/>
            <xsd:element ref="link" vs:requiredattribute="itemprop"/>

            <xsd:element ref="map" vs:requiredcontent="phrasingContent"/>
            <xsd:element ref="mark"/>
            <xsd:element ref="math"/>
            <xsd:element ref="meta" vs:requiredattribute="itemprop"/>
            <xsd:element ref="meter"/>

            <xsd:element ref="noscript"/>

            <xsd:element ref="object"/>
            <xsd:element ref="output"/>
            <xsd:element ref="progress"/>

            <xsd:element ref="q"/>

            <xsd:element ref="ruby"/>

            <xsd:element ref="samp"/>
            <xsd:element ref="script"/>
            <xsd:element ref="select"/>
            <xsd:element ref="small"/>
            <xsd:element ref="span"/>
            <xsd:element ref="strong"/>
            <xsd:element ref="sub"/>
            <xsd:element ref="sup"/>
            <xsd:element ref="svg"/>

            <xsd:element ref="textarea"/>
            <xsd:element ref="time"/>

            <xsd:element ref="var"/>
            <xsd:element ref="video"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="formElements" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="button"/>
            <xsd:element ref="fieldset"/>
            <xsd:element ref="input"/>
            <xsd:element ref="keygen"/>
            <xsd:element ref="label"/>
            <xsd:element ref="object"/>
            <xsd:element ref="output"/>
            <xsd:element ref="select"/>
            <xsd:element ref="textarea"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="labelElements" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="button"/>
            <xsd:element ref="input"/>
            <xsd:element ref="keygen"/>
            <xsd:element ref="select"/>
            <xsd:element ref="textarea"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="interactiveContent" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="a"/>
            <xsd:element ref="audio" vs:requiredattribute="controls"/>
            <xsd:element ref="button"/>
            <xsd:element ref="details"/>
            <xsd:element ref="embed"/>
            <xsd:element ref="iframe"/>
            <xsd:element ref="img" vs:requiredattribute="usemap"/>
            <xsd:element ref="input" vs:requiredattribute="type!=hidden"/>
            <xsd:element ref="keygen"/>
            <xsd:element ref="label"/>
            <xsd:element ref="menu" vs:requiredattribute="type==toolbar"/>
            <xsd:element ref="object" vs:requiredattribute="usemap"/>
            <xsd:element ref="select"/>
            <xsd:element ref="textarea"/>
            <xsd:element ref="video" vs:requiredattribute="controls"/>
        </xsd:choice>
    </xsd:group>


    <!-- End of group definitions -->

    <!--================ Document Structure ==================================-->

    <!-- This element must be the first one in the file! -->
    <xs:element name="html">
        <xs:complexType>
            <xs:choice>
                <xs:element ref="body" minOccurs="1" maxOccurs="1"/>
                <xs:element ref="head" minOccurs="0" maxOccurs="1"/>
            </xs:choice>
            <xs:attributeGroup ref="commonAttributeGroup"/>
            <xs:attribute name="manifest" type="xsd:anyURI"/>
        </xs:complexType>
    </xs:element>

    <!--================ Document Head =======================================-->

    <xsd:element name="head">
        <xsd:complexType>
            <xsd:choice>
                <xsd:group ref="metadataContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="title">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <!-- document base URI -->
    <xsd:element name="base">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="href" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="target" type="browsingContext"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="link">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="href" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="hreflang" type="i18LanguageCode"/>
            <xsd:attribute name="rel" type="linkType"/>
            <xsd:attribute name="media" type="mediaType" default="screen"/>
            <xsd:attribute name="type" type="contentType" vs:readonly="true"/>
            <xsd:attribute name="sizes"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="meta">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="http-equiv">
                <xsd:simpleType>
                    <xsd:union>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                                <xsd:enumeration value="content-language"/>
                                <xsd:enumeration value="content-type"/>
                                <xsd:enumeration value="default-style"/>
                                <xsd:enumeration value="refresh"/>
                            </xsd:restriction>
                        </xsd:simpleType>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string"/>
                        </xsd:simpleType>
                    </xsd:union>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="name"/>
            <xsd:attribute name="content"/>
            <xsd:attribute name="charset"/>
        </xsd:complexType>
    </xsd:element>

    <!-- style info, which may include CDATA sections -->

    <xsd:element name="style">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="type" vs:readonly="true">
                <xsd:simpleType>
                    <xsd:union>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                                <xsd:enumeration value="text/css"/>
                            </xsd:restriction>
                        </xsd:simpleType>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string"/>
                        </xsd:simpleType>
                    </xsd:union>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="media" type="mediaType" default="screen"/>
            <xsd:attribute name="scoped" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="scoped"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <!-- script statements, which may include CDATA sections -->

    <xsd:element name="script">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="coreAttributeGroup"/>
            <xsd:attribute name="charset" type="xsd:string"/>
            <xsd:attribute name="type" vs:readonly="true" use="required">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="text/ecmascript"/>
                        <xsd:enumeration value="text/javascript"/>
                        <xsd:enumeration value="text/javascript1.0"/>
                        <xsd:enumeration value="text/javascript1.1"/>
                        <xsd:enumeration value="text/javascript1.2"/>
                        <xsd:enumeration value="text/javascript1.3"/>
                        <xsd:enumeration value="text/javascript1.4"/>
                        <xsd:enumeration value="text/javascript1.5"/>
                        <xsd:enumeration value="text/jscript"/>
                        <xsd:enumeration value="text/x-javascript"/>
                        <xsd:enumeration value="text/x-ecmascript"/>
                        <xsd:enumeration value="text/vbscript"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="src" type="xsd:anyURI"/>
            <xsd:attribute name="defer" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="defer"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="async" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="async"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <!-- alternate Content container for non script-based rendering -->

    <xsd:element name="noscript">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <!--=================== Document Body ====================================-->

    <xsd:element name="body">
        <xsd:complexType>
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="onafterprint" vs:omtype="event"/>
            <xsd:attribute name="onbeforeprint" vs:omtype="event"/>
            <xsd:attribute name="onbeforeunload" vs:omtype="event"/>
            <xsd:attribute name="onhashchange" vs:omtype="event"/>
            <xsd:attribute name="onmessage" vs:omtype="event"/>
            <xsd:attribute name="onoffline" vs:omtype="event"/>
            <xsd:attribute name="ononline" vs:omtype="event"/>
            <xsd:attribute name="onpopstate" vs:omtype="event"/>
            <xsd:attribute name="onredo" vs:omtype="event"/>
            <xsd:attribute name="onresize" vs:omtype="event"/>
            <xsd:attribute name="onstorage" vs:omtype="event"/>
            <xsd:attribute name="onundo" vs:omtype="event"/>
            <xsd:attribute name="onunload" vs:omtype="event"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="section" type="simpleFlowContentElement" vs:disallowedancestor="address"/>

    <xsd:element name="nav" type="simpleFlowContentElement" vs:disallowedancestor="address"/>

    <xsd:element name="article" vs:disallowedancestor="address">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="Pubdate"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="aside" type="simpleFlowContentElement" vs:disallowedancestor="address"/>

    <xsd:element name="h1" type="simplePhrasingContentElement"/>

    <xsd:element name="h2" type="simplePhrasingContentElement"/>

    <xsd:element name="h3" type="simplePhrasingContentElement"/>

    <xsd:element name="h4" type="simplePhrasingContentElement"/>

    <xsd:element name="h5" type="simplePhrasingContentElement"/>

    <xsd:element name="h6" type="simplePhrasingContentElement"/>

    <xsd:element name="hgroup">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="h1"/>
                <xsd:element ref="h2"/>
                <xsd:element ref="h3"/>
                <xsd:element ref="h4"/>
                <xsd:element ref="h5"/>
                <xsd:element ref="h6"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="header" vs:disallowedancestor="header footer address" type="simpleFlowContentElement"/>

    <xsd:element name="footer" vs:disallowedancestor="header footer address" type="simpleFlowContentElement"/>

    <xsd:element name="address" vs:disallowedancestor="address" type="simpleFlowContentElement"/>

    <xsd:element name="p" type="simplePhrasingContentElement" vs:implicitclosure="true"/>

    <xsd:element name="br">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="pre" type="simplePhrasingContentElement"/>

    <xsd:element name="dialog">
        <xsd:complexType>
            <!--
            <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                <xsd:element ref="dd" />
                <xsd:element ref="dt" />
            </xsd:sequence>
             -->
            <xsd:choice>
                <xsd:element ref="dd"/>
                <xsd:element ref="dt"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="blockquote">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent" vs:excludeelements="blockquote"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="cite" type="xsd:anyURI"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="ol">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="li"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="start"/>
            <xsd:attribute name="reversed" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="reversed"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="ul">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="li"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="li" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="value" vs:requiredparent="ol"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dl">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="dd"/>
                <xsd:element ref="dt"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dt" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dd" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <!--================== The Anchor Element ================================-->

    <xsd:element name="a" vs:disallowedancestor="a button" vs:contentmodel="transparent">
        <xsd:complexType mixed="true">
            <!-- Content Model -->
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <!-- Attributes -->
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="href" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="target" type="browsingContext" vs:requiredattribute="href"/>
            <xsd:attribute name="ping" vs:requiredattribute="href"/>
            <xsd:attribute name="rel" type="linkType" vs:requiredattribute="href"/>
            <xsd:attribute name="media" vs:requiredattribute="href"/>
            <xsd:attribute name="hreflang" type="i18LanguageCode" vs:requiredattribute="href"/>
            <xsd:attribute name="type" type="simpleContentType" vs:requiredattribute="href"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="em" type="simplePhrasingContentElement"/>

    <xsd:element name="strong" type="simplePhrasingContentElement"/>

    <xsd:element name="small" type="simplePhrasingContentElement"/>

    <xsd:element name="cite" type="simplePhrasingContentElement"/>

    <xsd:element name="q">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="cite" type="xsd:anyURI"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dfn" type="simplePhrasingContentElement" vs:disallowedancestor="dfn"/>

    <xsd:element name="abbr" type="simplePhrasingContentElement"/>

    <xsd:element name="code" type="simplePhrasingContentElement"/>

    <xsd:element name="var" type="simplePhrasingContentElement"/>

    <xsd:element name="samp" type="simplePhrasingContentElement"/>

    <xsd:element name="kbd" type="simplePhrasingContentElement"/>

    <xsd:element name="sub" type="simplePhrasingContentElement"/>

    <xsd:element name="sup" type="simplePhrasingContentElement"/>

    <xsd:element name="i" type="simplePhrasingContentElement"/>

    <xsd:element name="b" type="simplePhrasingContentElement"/>

    <xsd:element name="mark" type="simplePhrasingContentElement"/>

    <xsd:element name="progress">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="value" type="xsd:float"/>
            <xsd:attribute name="max" type="xsd:float"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="meter">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="value" type="xsd:float"/>
            <xsd:attribute name="min" type="xsd:float"/>
            <xsd:attribute name="max" type="xsd:float"/>
            <xsd:attribute name="low" type="xsd:float"/>
            <xsd:attribute name="high" type="xsd:float"/>
            <xsd:attribute name="optimum" type="xsd:float"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="time" vs:contenttype="xsd:dateTime">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="datetime" type="xsd:dateTime"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="ruby">
        <xsd:complexType mixed="true">
            <!--
            <xsd:sequence minOccurs="1" maxOccurs="unbounded">
                    <xsd:group ref="phrasingContent" />
                <xsd:choice>
                    <xsd:element ref="rt" minOccurs="1" maxOccurs="1" />
                    <xsd:element ref="rp" minOccurs="1" maxOccurs="1" />
                </xsd:choice>
            </xsd:sequence>
             -->
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
                <xsd:element ref="rt"/>
                <xsd:element ref="rp"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="rt" type="simplePhrasingContentElement"/>

    <xsd:element name="rp" type="simplePhrasingContentElement"/>

    <xsd:element name="bdo" type="simplePhrasingContentElement"/>

    <xsd:element name="span" type="simplePhrasingContentElement"/>

    <!--=================== Inserted/Deleted Text ============================-->

    <xsd:element name="ins" vs:contentmodel="transparent">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="cite" type="xsd:anyURI"/>
            <xsd:attribute name="datetime" type="xsd:dateTime"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="del" vs:contentmodel="transparent">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="cite" type="xsd:anyURI"/>
            <xsd:attribute name="datetime" type="xsd:dateTime"/>
        </xsd:complexType>
    </xsd:element>

    <!--==================== Embedded content ======================================-->

    <xsd:element name="figure" vs:disallowedancestor="legend">
        <xsd:complexType mixed="true">
            <!--
            <xsd:choice minOccurs="1" maxOccurs="1">
                <xsd:sequence minOccurs="1" maxOccurs="1">
                    <xsd:element ref="legend" />
                    <xsd:group ref="flowContent" />
                </xsd:sequence>
                <xsd:sequence minOccurs="1" maxOccurs="1">
                    <xsd:group ref="flowContent" />
                    <xsd:element ref="legend" />
                </xsd:sequence>
                <xsd:group ref="flowContent" />
            </xsd:choice>
             -->
            <xsd:choice>
                <xsd:group ref="flowContent"/>
                <xsd:element ref="legend" minOccurs="0" maxOccurs="1" vs:firstchild="true" vs:lastchild="true"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="img">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="alt" use="required"/>
            <xsd:attribute name="src" type="xsd:anyURI" use="required"
                           vs:preferredextensions=".jpg;.jpeg;.gif;.bmp;.jpe;.png;.dib;.tif;.wmf;.ras;.eps;.pcx;.pcd;.tga;.ashx;.asix"/>
            <xsd:attribute name="height"/>
            <xsd:attribute name="width"/>
            <xsd:attribute name="usemap" type="xsd:anyURI"/>
            <xsd:attribute name="ismap" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="ismap"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="iframe" vs:disallowedancestor="button">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="name" type="browsingContext"/>
            <xsd:attribute name="src" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="height"/>
            <xsd:attribute name="width"/>
            <xsd:attribute name="sandbox">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="allow-same-origin"/>
                        <xsd:enumeration value="allow-forms"/>
                        <xsd:enumeration value="allow-scripts"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="seamless" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="seamless"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="embed" vs:disallowedancestor="button">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="src" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="height"/>
            <xsd:attribute name="width"/>
            <xsd:attribute name="type"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="object" vs:clientom="__object" vs:contentmodel="transparent">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:element ref="param" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="data" type="xsd:anyURI"/>
            <xsd:attribute name="type"/>
            <xsd:attribute name="height"/>
            <xsd:attribute name="width"/>
            <xsd:attribute name="usemap" type="xsd:anyURI"/>
            <xsd:attribute name="name" type="browsingContext"/>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="classid"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="param">
        <xsd:complexType>
            <xsd:attributeGroup ref="coreAttributeGroup"/>
            <xsd:attribute name="name" use="required"/>
            <xsd:attribute name="value" use="required"/>
        </xsd:complexType>
    </xsd:element>

    <!--=================== Interactive content =======================================-->

    <xsd:element name="details" vs:disallowedancestor="button">
        <xsd:complexType mixed="true">
            <!--
            <xsd:sequence minOccurs="1" maxOccurs="1">
                <xsd:element ref="legend" />
                <xsd:group ref="flowContent" />
            </xsd:sequence>
             -->
            <xsd:choice>
                <xsd:element ref="legend" minOccurs="1" maxOccurs="1" vs:firstchild="true"/>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="open" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="open"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="command">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="type">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="command"/>
                        <xsd:enumeration value="checkbox"/>
                        <xsd:enumeration value="radio"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="label"/>
            <xsd:attribute name="icon"/>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="checked" vs:requiredattribute="type=radio|checkbox" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="checked"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="radiogroup" vs:requiredattribute="type=radio"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="menu" vs:disallowedancestor="button">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="li"/>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="type">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="context"/>
                        <xsd:enumeration value="toolbar"/>
                        <xsd:enumeration value="list"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="label"/>
        </xsd:complexType>
    </xsd:element>

    <!--=================== Miscellaneous elements =======================================-->

    <xsd:element name="legend">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent" vs:requiredparent="figure"/>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="div" type="simpleFlowContentElement"/>

    <!--=================== Interactive content =======================================-->

    <xsd:element name="source">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="src" type="xsd:anyURI"/>
            <xsd:attribute name="type"/>
            <xsd:attribute name="media"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="audio" vs:contentmodel="transparent" vs:disallowedancestor="audio video button">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:element ref="source" vs:requiredattribute="src"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="src" type="xsd:anyURI"/>
            <xsd:attribute name="autobuffer" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autobuffer"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="autoplay" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autoplay"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="loop" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="loop"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="controls" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="controls"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="video" vs:contentmodel="transparent" vs:disallowedancestor="audio video button">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:element ref="source" vs:requiredattribute="src"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="src" type="xsd:anyURI"/>
            <xsd:attribute name="autobuffer" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autobuffer"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="autoplay" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autoplay"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="loop" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="loop"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="controls" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="controls"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="width"/>
            <xsd:attribute name="height"/>
            <xsd:attribute name="poster"/>
        </xsd:complexType>
    </xsd:element>

    <!--=================== Horizontal Rule ==================================-->

    <xsd:element name="hr">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>


    <!--================ Forms ===============================================-->

    <xsd:element name="form" vs:disallowedancestor="form">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="accept-charset"/>
            <xsd:attribute name="action" type="xsd:anyURI" use="required"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="autocomplete">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="on"/>
                        <xsd:enumeration value="off"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="enctype">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="multipart/form-data"/>
                        <xsd:enumeration value="application/x-www-form-urlencoded"/>
                        <xsd:enumeration value="text/plain"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="method" default="get">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="get"/>
                        <xsd:enumeration value="post"/>
                        <xsd:enumeration value="put"/>
                        <xsd:enumeration value="delete"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="name"/>
            <xsd:attribute name="novalidate" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="novalidate"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="target" type="browsingContext"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="fieldset">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:element ref="legend" minOccurs="1" maxOccurs="1" vs:firstchild="true"/>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="disabled" vs:standalone="true"/>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="name"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="label" vs:disallowedancestor="button">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="for"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="input" vs:disallowedancestor="button">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="type" vs:readonly="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="button"/>
                        <xsd:enumeration value="checkbox"/>
                        <xsd:enumeration value="color"/>
                        <xsd:enumeration value="date"/>
                        <xsd:enumeration value="datetime"/>
                        <xsd:enumeration value="datetime-local"/>
                        <xsd:enumeration value="email"/>
                        <xsd:enumeration value="file"/>
                        <xsd:enumeration value="hidden"/>
                        <xsd:enumeration value="image"/>
                        <xsd:enumeration value="month"/>
                        <xsd:enumeration value="number"/>
                        <xsd:enumeration value="password"/>
                        <xsd:enumeration value="radio"/>
                        <xsd:enumeration value="range"/>
                        <xsd:enumeration value="reset"/>
                        <xsd:enumeration value="search"/>
                        <xsd:enumeration value="submit"/>
                        <xsd:enumeration value="text"/>
                        <xsd:enumeration value="tel"/>
                        <xsd:enumeration value="time"/>
                        <xsd:enumeration value="url"/>
                        <xsd:enumeration value="week"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="accept" vs:inputtype="file"/>
            <xsd:attribute name="alt" vs:inputtype="image"/>
            <xsd:attribute name="autocomplete"
                           vs:inputtype="color date datetime datetime-local email month number password range search tel text time url week"/>
            <xsd:attribute name="checked" vs:standalone="true" vs:inputtype="checkbox radio">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="checked"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="formaction" vs:inputtype="submit image"/>
            <xsd:attribute name="formenctype" vs:inputtype="submit image">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="multipart/form-data"/>
                        <xsd:enumeration value="application/x-www-form-urlencoded"/>
                        <xsd:enumeration value="text/plain"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formmethod" default="get" vs:inputtype="submit image">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="get"/>
                        <xsd:enumeration value="post"/>
                        <xsd:enumeration value="put"/>
                        <xsd:enumeration value="delete"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formnovalidate" vs:inputtype="submit image" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="formnovalidate"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formtarget" type="browsingContext" vs:inputtype="submit image"/>
            <xsd:attribute name="height" vs:inputtype="image"/>
            <xsd:attribute name="list"
                           vs:inputtype="color date datetime datetime-local email month number range search tel text time url week"/>
            <xsd:attribute name="max" vs:inputtype="date datetime datetime-local month number range search time week"/>
            <xsd:attribute name="maxlength" vs:inputtype="email password search tel text time url"/>
            <xsd:attribute name="min" vs:inputtype="date datetime datetime-local month number range search time week"/>
            <xsd:attribute name="multiple" vs:inputtype="email file"/>
            <xsd:attribute name="pattern" vs:inputtype="email password search tel text time url"
                           vs:requiredattribute="title"/>
            <xsd:attribute name="placeholder" vs:inputtype="email password search tel text time url"/>
            <xsd:attribute name="readonly"
                           vs:inputtype="date datetime datetime-local email month number password search tel text time url week"/>
            <xsd:attribute name="required"
                           vs:inputtype="checkbox date datetime datetime-local email file month number password radio search tel text time url week"/>
            <xsd:attribute name="size" vs:inputtype="email password search tel text time url"/>
            <xsd:attribute name="src" type="xsd:anyURI" vs:inputtype="image"/>
            <xsd:attribute name="step" vs:inputtype="date datetime datetime-local month number range search time week"/>
            <xsd:attribute name="width" vs:inputtype="image"/>
            <xsd:attribute name="files" vs:inputtype="file"/>
            <xsd:attribute name="value"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="button" vs:disallowedancestor="a button">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attributeGroup ref="buttonServerAttributeGroup"/>
            <xsd:attribute name="autofocus" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="formaction" vs:inputtype="submit image"/>
            <xsd:attribute name="formenctype" vs:inputtype="submit image">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="multipart/form-data"/>
                        <xsd:enumeration value="application/x-www-form-urlencoded"/>
                        <xsd:enumeration value="text/plain"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formmethod" default="get" vs:inputtype="submit image">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="get"/>
                        <xsd:enumeration value="post"/>
                        <xsd:enumeration value="put"/>
                        <xsd:enumeration value="delete"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formnovalidate" vs:inputtype="submit image" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="formnovalidate"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formtarget" type="browsingContext" vs:inputtype="submit image"/>

            <xsd:attribute name="name"/>
            <xsd:attribute name="value"/>
            <xsd:attribute name="type" default="submit" vs:readonly="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="button"/>
                        <xsd:enumeration value="reset"/>
                        <xsd:enumeration value="submit"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="select" vs:disallowedancestor="a button">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="option"/>
                <xsd:element ref="optgroup"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="autofocus" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="multiple" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="multiple"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="name"/>
            <xsd:attribute name="size" type="ui4"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="datalist">
        <xsd:complexType>
            <xsd:choice vs:exclusive="true">
                <xsd:element ref="option"/>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="optgroup">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="option"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="label" use="required"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="option" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="selected" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="selected"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="label"/>
            <xsd:attribute name="value"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="textarea" vs:disallowedancestor="a button">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="autofocus" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="maxlength"/>
            <xsd:attribute name="name"/>
            <xsd:attribute name="placeholder"/>
            <xsd:attribute name="readonly" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="readonly"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="required" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="required"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="rows" type="xsd:integer" use="required"/>
            <xsd:attribute name="cols" type="xsd:integer" use="required"/>
            <xsd:attribute name="wrap">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="hard" vs:requiredattribute="cols"/>
                        <xsd:enumeration value="soft"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="keygen" vs:disallowedancestor="a button">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="autofocus" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="challenge"/>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="keytype">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="rsa"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="name"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="output" vs:disallowedancestor="a button">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="for"/>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="name"/>
        </xsd:complexType>
    </xsd:element>

    <!--================== Canvas ============================-->

    <xsd:element name="canvas" vs:contentmodel="transparent">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="width"/>
            <xsd:attribute name="height"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="map" vs:contentmodel="transparent">
        <xsd:complexType>
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="name" use="required"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="area">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="Shape" default="rect">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="rect"/>
                        <xsd:enumeration value="circle"/>
                        <xsd:enumeration value="poly"/>
                        <xsd:enumeration value="default"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="coords"/>
            <xsd:attribute name="href" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="hreflang" type="i18LanguageCode"/>
            <xsd:attribute name="alt" use="required" vs:requiredattribute="href"/>
            <xsd:attribute name="target" type="browsingContext"/>
            <xsd:attribute name="media"/>
            <xsd:attribute name="rel" type="linkType"/>
            <xsd:attribute name="ping"/>
            <xsd:attribute name="type"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="mathml">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="svg">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <!--======================= Tables =======================================-->

    <xsd:element name="table" vs:disallowedancestor="caption">
        <xsd:complexType>
            <!--
                In this order: optionally a caption element, followed by either zero or more colgroup elements,
                followed optionally by a thead element, followed optionally by a tfoot element,
                followed by either zero or more tbody elements or one or more tr elements, followed optionally
                by a tfoot element (but there can only be one tfoot element child in total).
            -->
            <xsd:choice>
                <xsd:element ref="caption" minOccurs="0" maxOccurs="1"/>
                <xsd:element ref="colgroup"/>
                <xsd:element ref="thead" minOccurs="0" maxOccurs="1"/>
                <xsd:element ref="tfoot" minOccurs="0" maxOccurs="1"/>
                <xsd:element ref="tbody"/>
                <xsd:element ref="tr"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="summary"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="caption" type="simpleFlowContentElement"/>

    <xsd:element name="colgroup">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="col"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="span" type="xsd:integer" default="1"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="col">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="span" type="xsd:integer" default="1"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="thead" vs:implicitclosure="true">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="tr"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="tfoot" vs:implicitclosure="true">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="tr"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="tbody" vs:implicitclosure="true">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="tr"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="tr" vs:implicitclosure="true">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="th" vs:disallowedancestor="tbody tfoot"/>
                <xsd:element ref="td"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="th" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="headers"/>
            <xsd:attribute name="rowspan" default="1" type="positiveInteger"/>
            <xsd:attribute name="colspan" default="1" type="positiveInteger"/>
            <xsd:attribute name="scope">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="col"/>
                        <xsd:enumeration value="colgroup"/>
                        <xsd:enumeration value="row"/>
                        <xsd:enumeration value="rowgroup"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="td" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="headers"/>
            <xsd:attribute name="rowspan" default="1" type="positiveInteger"/>
            <xsd:attribute name="colspan" default="1" type="positiveInteger"/>
        </xsd:complexType>
    </xsd:element>

    <!-- XDR datatype derivations -->

    <xsd:simpleType name="mediaType">
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="screen"/>
                    <xsd:enumeration value="print"/>
                    <xsd:enumeration value="tty"/>
                    <xsd:enumeration value="tv"/>
                    <xsd:enumeration value="projection"/>
                    <xsd:enumeration value="handheld"/>
                    <xsd:enumeration value="braille"/>
                    <xsd:enumeration value="aural"/>
                    <xsd:enumeration value="all"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:simpleType name="linkType">
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="Alternate"/>
                    <xsd:enumeration value="Appendix"/>
                    <xsd:enumeration value="Bookmark"/>
                    <xsd:enumeration value="Chapter"/>
                    <xsd:enumeration value="Contents"/>
                    <xsd:enumeration value="Copyright"/>
                    <xsd:enumeration value="Glossary"/>
                    <xsd:enumeration value="Help"/>
                    <xsd:enumeration value="Index"/>
                    <xsd:enumeration value="Next"/>
                    <xsd:enumeration value="Prev"/>
                    <xsd:enumeration value="Section"/>
                    <xsd:enumeration value="Start"/>
                    <xsd:enumeration value="Stylesheet"/>
                    <xsd:enumeration value="Subsection"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:simpleType name="browsingContext">
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="_blank"/>
                    <xsd:enumeration value="_parent"/>
                    <xsd:enumeration value="_self"/>
                    <xsd:enumeration value="_top"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:simpleType name="contentType">
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="text/asp"/>
                    <xsd:enumeration value="text/asa"/>
                    <xsd:enumeration value="text/css"/>
                    <xsd:enumeration value="text/html"/>
                    <xsd:enumeration value="text/javascript"/>
                    <xsd:enumeration value="text/plain"/>
                    <xsd:enumeration value="text/scriptlet"/>
                    <xsd:enumeration value="text/x-component"/>
                    <xsd:enumeration value="text/x-html-insertion"/>
                    <xsd:enumeration value="text/xml"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:simpleType name="simpleContentType">
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="text/asp"/>
                    <xsd:enumeration value="text/asa"/>
                    <xsd:enumeration value="text/html"/>
                    <xsd:enumeration value="text/plain"/>
                    <xsd:enumeration value="text/xml"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:complexType mixed="true" name="simpleFlowContentElement">
        <xsd:choice>
            <xsd:group ref="flowContent"/>
        </xsd:choice>
        <xsd:attributeGroup ref="commonAttributeGroup"/>
    </xsd:complexType>

    <xsd:complexType mixed="true" name="simplePhrasingContentElement">
        <xsd:choice>
            <xsd:group ref="phrasingContent"/>
        </xsd:choice>
        <xsd:attributeGroup ref="commonAttributeGroup"/>
    </xsd:complexType>

    <!-- ****************************** WPFE ********************************** -->

    <xs:element name="TransformGroup" type="dTransformGroup"/>
    <xs:element name="RotateTransform" type="dRotateTransform"/>
    <xs:element name="ScaleTransform" type="dScaleTransform"/>
    <xs:element name="SkewTransform" type="dSkewTransform"/>
    <xs:element name="TranslateTransform" type="dTranslateTransform"/>
    <xs:element name="LineSegment" type="dLineSegment"/>
    <xs:element name="BezierSegment" type="dBezierSegment"/>
    <xs:element name="QuadraticBezierSegment" type="dQuadraticBezierSegment"/>
    <xs:element name="ArcSegment" type="dArcSegment"/>
    <xs:element name="PolyLineSegment" type="dPolyLineSegment"/>
    <xs:element name="PolyBezierSegment" type="dPolyBezierSegment"/>
    <xs:element name="PolyQuadraticBezierSegment" type="dPolyQuadraticBezierSegment"/>
    <xs:element name="PathFigure" type="dPathFigure"/>
    <xs:element name="PathGeometry" type="dPathGeometry"/>
    <xs:element name="GeometryGroup" type="dGeometryGroup"/>
    <xs:element name="SolidColorBrush" type="dSolidColorBrush"/>
    <xs:element name="GradientStop" type="dGradientStop"/>
    <xs:element name="LinearGradientBrush" type="dLinearGradientBrush"/>
    <xs:element name="RadialGradientBrush" type="dRadialGradientBrush"/>
    <xs:element name="Canvas" type="dCanvas"/>
    <xs:element name="TimelineCollection" type="dTimelineCollection"/>
    <xs:element name="Path" type="dPath"/>
    <xs:element name="BeginStoryboard" type="dBeginStoryboard"/>
    <xs:element name="Storyboard" type="dStoryboard"/>
    <xs:element name="DoubleAnimation" type="dDoubleAnimation"/>
    <xs:element name="EventTrigger" type="dEventTrigger"/>
    <xs:element name="TriggerCollection" type="dTriggerCollection"/>
    <xs:element name="TransformCollection" type="dTransformCollection"/>
    <xs:element name="PathSegmentCollection" type="dPathSegmentCollection"/>
    <xs:element name="PathFigureCollection" type="dPathFigureCollection"/>
    <xs:element name="GeometryCollection" type="dGeometryCollection"/>
    <xs:element name="GradientStopCollection" type="dGradientStopCollection"/>
    <xs:element name="TriggerActionCollection" type="dTriggerActionCollection"/>
    <xs:element name="ColorAnimation" type="dColorAnimation"/>
    <xs:element name="Glyphs" type="dGlyphs"/>
    <xs:element name="KeyTime" type="dKeyTime"/>
    <xs:element name="KeySpline" type="dKeySpline"/>
    <xs:element name="KeyFrameCollection" type="dKeyFrameCollection"/>
    <xs:element name="DoubleAnimationUsingKeyFrames" type="dDoubleAnimationUsingKeyFrames"/>
    <xs:element name="DiscreteDoubleKeyFrame" type="dDiscreteDoubleKeyFrame"/>
    <xs:element name="LinearDoubleKeyFrame" type="dLinearDoubleKeyFrame"/>
    <xs:element name="SplineDoubleKeyFrame" type="dSplineDoubleKeyFrame"/>
    <xs:element name="ColorAnimationUsingKeyFrames" type="dColorAnimationUsingKeyFrames"/>
    <xs:element name="DiscreteColorKeyFrame" type="dDiscreteColorKeyFrame"/>
    <xs:element name="LinearColorKeyFrame" type="dLinearColorKeyFrame"/>
    <xs:element name="SplineColorKeyFrame" type="dSplineColorKeyFrame"/>
    <xs:element name="PointAnimationUsingKeyFrames" type="dPointAnimationUsingKeyFrames"/>
    <xs:element name="DiscretePointKeyFrame" type="dDiscretePointKeyFrame"/>
    <xs:element name="LinearPointKeyFrame" type="dLinearPointKeyFrame"/>
    <xs:element name="SplinePointKeyFrame" type="dSplinePointKeyFrame"/>
    <xs:element name="PointAnimation" type="dPointAnimation"/>
    <xs:element name="Ellipse" type="dEllipse"/>
    <xs:element name="Line" type="dLine"/>
    <xs:element name="Polygon" type="dPolygon"/>
    <xs:element name="Polyline" type="dPolyline"/>
    <xs:element name="Rectangle" type="dRectangle"/>
    <xs:element name="EllipseGeometry" type="dEllipseGeometry"/>
    <xs:element name="RectangleGeometry" type="dRectangleGeometry"/>
    <xs:element name="LineGeometry" type="dLineGeometry"/>
    <xs:element name="Matrix" type="dMatrix"/>
    <xs:element name="MatrixTransform" type="dMatrixTransform"/>
    <xs:element name="ImageBrush" type="dImageBrush"/>
    <xs:element name="MouseEventArgs" type="dMouseEventArgs"/>
    <xs:element name="TextBlock" type="dTextBlock"/>
    <xs:element name="Run" type="dRun"/>
    <xs:element name="LineBreak" type="dLineBreak"/>
    <xs:element name="FontFamily" type="dFontFamily"/>
    <xs:element name="MediaElement" type="dMediaElement"/>
    <xs:element name="Image" type="dImage"/>
    <xs:element name="EventArgs" type="dEventArgs"/>
    <xs:element name="VisualCollection" type="dVisualCollection"/>
    <xs:element name="Inlines" type="dInlines"/>
    <xs:element name="KeyboardEventArgs" type="dKeyboardEventArgs"/>
    <xs:element name="Downloader" type="dDownloader"/>
    <xs:element name="VideoBrush" type="dVideoBrush"/>
    <xs:element name="InkPresenter" type="dInkPresenter"/>
    <xs:element name="Stroke" type="dStroke"/>
    <xs:element name="StrokeCollection" type="dStrokeCollection"/>
    <xs:element name="StylusPoint" type="dStylusPoint"/>
    <xs:element name="StylusPointCollection" type="dStylusPointCollection"/>
    <xs:element name="StylusInfo" type="dStylusInfo"/>
    <xs:element name="DrawingAttributes" type="dDrawingAttributes"/>
    <xs:element name="ErrorEventArgs" type="dErrorEventArgs"/>
    <xs:element name="ParserErrorEventArgs" type="dParserErrorEventArgs"/>
    <xs:element name="RuntimeErrorEventArgs" type="dRuntimeErrorEventArgs"/>
    <xs:element name="TimelineMarker" type="dTimelineMarker"/>
    <xs:element name="TimelineMarkerCollection" type="dTimelineMarkerCollection"/>
    <xs:element name="TimelineMarkerEventArgs" type="dTimelineMarkerEventArgs"/>
    <xs:element name="ResourceCollection" type="dResourceCollection"/>
    <xs:complexType name="dTransformGroup">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peTransformGroup" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gTransform" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Children" type="StringToTransformCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dRotateTransform">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="CenterX" type="StringToDoubleConverter"/>
        <xs:attribute name="CenterY" type="StringToDoubleConverter"/>
        <xs:attribute name="Angle" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dScaleTransform">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="CenterX" type="StringToDoubleConverter"/>
        <xs:attribute name="CenterY" type="StringToDoubleConverter"/>
        <xs:attribute name="ScaleX" type="StringToDoubleConverter"/>
        <xs:attribute name="ScaleY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dSkewTransform">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="CenterX" type="StringToDoubleConverter"/>
        <xs:attribute name="CenterY" type="StringToDoubleConverter"/>
        <xs:attribute name="AngleX" type="StringToDoubleConverter"/>
        <xs:attribute name="AngleY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dTranslateTransform">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="X" type="StringToDoubleConverter"/>
        <xs:attribute name="Y" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dLineSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Point" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dBezierSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Point1" type="StringToPointConverter"/>
        <xs:attribute name="Point2" type="StringToPointConverter"/>
        <xs:attribute name="Point3" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dQuadraticBezierSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Point1" type="StringToPointConverter"/>
        <xs:attribute name="Point2" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dArcSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Point" type="StringToPointConverter"/>
        <xs:attribute name="Size" type="StringToPointConverter"/>
        <xs:attribute name="RotationAngle" type="StringToDoubleConverter"/>
        <xs:attribute name="IsLargeArc" type="StringToBooleanConverter"/>
        <xs:attribute name="SweepDirection" type="StringToSweepDirectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dPolyLineSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Points" type="StringToPointsConverter"/>
    </xs:complexType>
    <xs:complexType name="dPolyBezierSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Points" type="StringToPointsConverter"/>
    </xs:complexType>
    <xs:complexType name="dPolyQuadraticBezierSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Points" type="StringToPointsConverter"/>
    </xs:complexType>
    <xs:complexType name="dPathFigure">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="pePathFigure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gPathSegment" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Segments" type="StringToPathSegmentCollectionConverter"/>
        <xs:attribute name="StartPoint" type="StringToPointConverter"/>
        <xs:attribute name="IsClosed" type="StringToBooleanConverter"/>
        <xs:attribute name="IsFilled" type="StringToBooleanConverter"/>
    </xs:complexType>
    <xs:complexType name="dPathGeometry">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="pePathGeometry" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gPathFigure" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="Figures" type="StringToPathFigureCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dGeometryGroup">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peGeometryGroup" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gGeometry" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="Children" type="StringToGeometryCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dSolidColorBrush">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="SolidColorBrush.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="SolidColorBrush.RelativeTransform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="RelativeTransform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="Color" type="StringToColorConverter"/>
    </xs:complexType>
    <xs:complexType name="dGradientStop">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Color" type="StringToColorConverter"/>
        <xs:attribute name="Offset" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dLinearGradientBrush">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peLinearGradientBrush" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gGradientStop" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="RelativeTransform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="SpreadMethod" type="StringToGradientSpreadMethodConverter"/>
        <xs:attribute name="MappingMode" type="StringToBrushMappingModeConverter"/>
        <xs:attribute name="ColorInterpolationMode" type="StringToColorInterpolationModeConverter"/>
        <xs:attribute name="GradientStops" type="StringToGradientStopCollectionConverter"/>
        <xs:attribute name="StartPoint" type="StringToPointConverter"/>
        <xs:attribute name="EndPoint" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dRadialGradientBrush">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peRadialGradientBrush" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gGradientStop" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="RelativeTransform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="SpreadMethod" type="StringToGradientSpreadMethodConverter"/>
        <xs:attribute name="MappingMode" type="StringToBrushMappingModeConverter"/>
        <xs:attribute name="ColorInterpolationMode" type="StringToColorInterpolationModeConverter"/>
        <xs:attribute name="GradientStops" type="StringToGradientStopCollectionConverter"/>
        <xs:attribute name="Center" type="StringToPointConverter"/>
        <xs:attribute name="GradientOrigin" type="StringToPointConverter"/>
        <xs:attribute name="RadiusX" type="StringToDoubleConverter"/>
        <xs:attribute name="RadiusY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dCanvas">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:element ref="x:Code" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="peCanvas" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gUIElement" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="Children" type="StringToVisualCollectionConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Background" type="StringToBrushConverter"/>
    </xs:complexType>
    <xs:complexType name="dTimelineCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dPath">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Path.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.Data" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="Data" type="StringToGeometryConverter"/>
    </xs:complexType>
    <xs:complexType name="dBeginStoryboard">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peBeginStoryboard" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Storyboard" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Storyboard" type="StringToStoryboardConverter"/>
    </xs:complexType>
    <xs:complexType name="dStoryboard">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peStoryboard" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gTimeline" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="Children" type="StringToTimelineCollectionConverter"/>
        <xs:attribute name="Completed" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dDoubleAnimation">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToDoubleConverter"/>
        <xs:attribute name="To" type="StringToDoubleConverter"/>
        <xs:attribute name="By" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dEventTrigger">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peEventTrigger" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gBeginStoryboard" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="RoutedEvent" type="StringToStringConverter"/>
        <xs:attribute name="Actions" type="StringToTriggerActionCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dTriggerCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dTransformCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dPathSegmentCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dPathFigureCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dGeometryCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dGradientStopCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dTriggerActionCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dColorAnimation">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToColorConverter"/>
        <xs:attribute name="To" type="StringToColorConverter"/>
        <xs:attribute name="By" type="StringToColorConverter"/>
    </xs:complexType>
    <xs:complexType name="dGlyphs">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Glyphs.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Glyphs.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Glyphs.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Glyphs.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Glyphs.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Glyphs.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="UnicodeString" type="StringToStringConverter"/>
        <xs:attribute name="Indices" type="StringToStringConverter"/>
        <xs:attribute name="FontUri" type="StringToStringConverter"/>
        <xs:attribute name="StyleSimulations" type="StringToStringConverter"/>
        <xs:attribute name="FontRenderingEmSize" type="StringToDoubleConverter"/>
        <xs:attribute name="OriginX" type="StringToDoubleConverter"/>
        <xs:attribute name="OriginY" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
    </xs:complexType>
    <xs:complexType name="dKeyTime">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Seconds" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dKeySpline">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
    </xs:complexType>
    <xs:complexType name="dKeyFrameCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dDoubleAnimationUsingKeyFrames">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peDoubleAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gKeyFrame" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToDoubleConverter"/>
        <xs:attribute name="To" type="StringToDoubleConverter"/>
        <xs:attribute name="By" type="StringToDoubleConverter"/>
        <xs:attribute name="KeyFrames" type="StringToKeyFrameCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dDiscreteDoubleKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dLinearDoubleKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dSplineDoubleKeyFrame">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="SplineDoubleKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToDoubleConverter"/>
        <xs:attribute name="KeySpline" type="StringToKeySplineConverter"/>
    </xs:complexType>
    <xs:complexType name="dColorAnimationUsingKeyFrames">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peColorAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gKeyFrame" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToColorConverter"/>
        <xs:attribute name="To" type="StringToColorConverter"/>
        <xs:attribute name="By" type="StringToColorConverter"/>
        <xs:attribute name="KeyFrames" type="StringToKeyFrameCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dDiscreteColorKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToColorConverter"/>
    </xs:complexType>
    <xs:complexType name="dLinearColorKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToColorConverter"/>
    </xs:complexType>
    <xs:complexType name="dSplineColorKeyFrame">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="SplineColorKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToColorConverter"/>
        <xs:attribute name="KeySpline" type="StringToKeySplineConverter"/>
    </xs:complexType>
    <xs:complexType name="dPointAnimationUsingKeyFrames">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="pePointAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gKeyFrame" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToPointConverter"/>
        <xs:attribute name="To" type="StringToPointConverter"/>
        <xs:attribute name="By" type="StringToPointConverter"/>
        <xs:attribute name="KeyFrames" type="StringToKeyFrameCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dDiscretePointKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dLinearPointKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dSplinePointKeyFrame">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="SplinePointKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToPointConverter"/>
        <xs:attribute name="KeySpline" type="StringToKeySplineConverter"/>
    </xs:complexType>
    <xs:complexType name="dPointAnimation">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToPointConverter"/>
        <xs:attribute name="To" type="StringToPointConverter"/>
        <xs:attribute name="By" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dEllipse">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Ellipse.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
    </xs:complexType>
    <xs:complexType name="dLine">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Line.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="X1" type="StringToDoubleConverter"/>
        <xs:attribute name="Y1" type="StringToDoubleConverter"/>
        <xs:attribute name="X2" type="StringToDoubleConverter"/>
        <xs:attribute name="Y2" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dPolygon">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Polygon.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Points" type="StringToPointsConverter"/>
    </xs:complexType>
    <xs:complexType name="dPolyline">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Polyline.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Points" type="StringToPointsConverter"/>
    </xs:complexType>
    <xs:complexType name="dRectangle">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Rectangle.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="RadiusX" type="StringToDoubleConverter"/>
        <xs:attribute name="RadiusY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dEllipseGeometry">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="EllipseGeometry.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="Center" type="StringToPointConverter"/>
        <xs:attribute name="RadiusX" type="StringToDoubleConverter"/>
        <xs:attribute name="RadiusY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dRectangleGeometry">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="RectangleGeometry.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="Rect" type="StringToRectConverter"/>
        <xs:attribute name="RadiusX" type="StringToDoubleConverter"/>
        <xs:attribute name="RadiusY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dLineGeometry">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="LineGeometry.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="StartPoint" type="StringToPointConverter"/>
        <xs:attribute name="EndPoint" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dMatrix">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="M11" type="StringToDoubleConverter"/>
        <xs:attribute name="M12" type="StringToDoubleConverter"/>
        <xs:attribute name="M21" type="StringToDoubleConverter"/>
        <xs:attribute name="M22" type="StringToDoubleConverter"/>
        <xs:attribute name="OffsetX" type="StringToDoubleConverter"/>
        <xs:attribute name="OffsetY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dMatrixTransform">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="MatrixTransform.Matrix" type="dMatrixContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Matrix" type="StringToMatrixConverter"/>
    </xs:complexType>
    <xs:complexType name="dImageBrush">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="ImageBrush.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="ImageBrush.RelativeTransform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="RelativeTransform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="AlignmentX" type="StringToAlignmentXConverter"/>
        <xs:attribute name="AlignmentY" type="StringToAlignmentYConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="ImageFailed" type="StringToStringConverter"/>
        <xs:attribute name="ImageSource" type="StringToStringConverter"/>
        <xs:attribute name="DownloadProgress" type="StringToDoubleConverter"/>
        <xs:attribute name="DownloadProgressChanged" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dMouseEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Shift" type="StringToBooleanConverter"/>
        <xs:attribute name="Ctrl" type="StringToBooleanConverter"/>
    </xs:complexType>
    <xs:complexType name="dTextBlock">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peTextBlock" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gInline" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="FontSize" type="StringToDoubleConverter"/>
        <xs:attribute name="FontFamily" type="StringToFontFamilyConverter"/>
        <xs:attribute name="FontWeight" type="StringToFontWeightsConverter"/>
        <xs:attribute name="FontStyle" type="StringToFontStylesConverter"/>
        <xs:attribute name="FontStretch" type="StringToFontStretchesConverter"/>
        <xs:attribute name="TextDecorations" type="StringToTextDecorationsConverter"/>
        <xs:attribute name="Foreground" type="StringToBrushConverter"/>
        <xs:attribute name="TextWrapping" type="StringToTextWrappingConverter"/>
        <xs:attribute name="Text" type="StringToStringConverter"/>
        <xs:attribute name="Inlines" type="StringToInlinesConverter"/>
    </xs:complexType>
    <xs:complexType name="dRun">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Run.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Run.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FontSize" type="StringToDoubleConverter"/>
        <xs:attribute name="FontFamily" type="StringToFontFamilyConverter"/>
        <xs:attribute name="FontWeight" type="StringToFontWeightsConverter"/>
        <xs:attribute name="FontStyle" type="StringToFontStylesConverter"/>
        <xs:attribute name="FontStretch" type="StringToFontStretchesConverter"/>
        <xs:attribute name="TextDecorations" type="StringToTextDecorationsConverter"/>
        <xs:attribute name="Foreground" type="StringToBrushConverter"/>
        <xs:attribute name="Text" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dLineBreak">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="LineBreak.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="LineBreak.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FontSize" type="StringToDoubleConverter"/>
        <xs:attribute name="FontFamily" type="StringToFontFamilyConverter"/>
        <xs:attribute name="FontWeight" type="StringToFontWeightsConverter"/>
        <xs:attribute name="FontStyle" type="StringToFontStylesConverter"/>
        <xs:attribute name="FontStretch" type="StringToFontStretchesConverter"/>
        <xs:attribute name="TextDecorations" type="StringToTextDecorationsConverter"/>
        <xs:attribute name="Foreground" type="StringToBrushConverter"/>
    </xs:complexType>
    <xs:complexType name="dFontFamily">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
    </xs:complexType>
    <xs:complexType name="dMediaElement">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="MediaElement.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="MediaElement.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="MediaElement.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="MediaElement.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="MediaElement.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="MediaElement.Markers" type="dTimelineMarkerCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="MediaElement.Attributes" type="dMediaAttributeCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Source" type="StringToStringConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="MediaOpened" type="StringToStringConverter"/>
        <xs:attribute name="MediaEnded" type="StringToStringConverter"/>
        <xs:attribute name="MediaFailed" type="StringToStringConverter"/>
        <xs:attribute name="IsMuted" type="StringToBooleanConverter"/>
        <xs:attribute name="AutoPlay" type="StringToBooleanConverter"/>
        <xs:attribute name="Volume" type="StringToDoubleConverter"/>
        <xs:attribute name="Balance" type="StringToDoubleConverter"/>
        <xs:attribute name="Position" type="StringToTimeSpanConverter"/>
        <xs:attribute name="DownloadProgressChanged" type="StringToStringConverter"/>
        <xs:attribute name="BufferingProgressChanged" type="StringToStringConverter"/>
        <xs:attribute name="CurrentStateChanged" type="StringToStringConverter"/>
        <xs:attribute name="BufferingTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Markers" type="StringToTimelineMarkerCollectionConverter"/>
        <xs:attribute name="MarkerReached" type="StringToStringConverter"/>
        <xs:attribute name="Attributes" type="StringToMediaAttributeCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dImage">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Image.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Image.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Image.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Image.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Image.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="ImageFailed" type="StringToStringConverter"/>
        <xs:attribute name="DownloadProgressChanged" type="StringToStringConverter"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Source" type="StringToStringConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
    </xs:complexType>
    <xs:complexType name="dEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
    </xs:complexType>
    <xs:complexType name="dVisualCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dInlines">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dKeyboardEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Key" type="StringToDoubleConverter"/>
        <xs:attribute name="PlatformKeyCode" type="StringToDoubleConverter"/>
        <xs:attribute name="Shift" type="StringToBooleanConverter"/>
        <xs:attribute name="Ctrl" type="StringToBooleanConverter"/>
    </xs:complexType>
    <xs:complexType name="dDownloader">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="DownloadProgress" type="StringToDoubleConverter"/>
        <xs:attribute name="ResponseText" type="StringToStringConverter"/>
        <xs:attribute name="Status" type="StringToInt32Converter"/>
        <xs:attribute name="StatusText" type="StringToStringConverter"/>
        <xs:attribute name="URI" type="StringToStringConverter"/>
        <xs:attribute name="DownloadProgressChanged" type="StringToStringConverter"/>
        <xs:attribute name="Completed" type="StringToStringConverter"/>
        <xs:attribute name="DownloadFailed" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dVideoBrush">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="VideoBrush.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="VideoBrush.RelativeTransform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="RelativeTransform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="AlignmentX" type="StringToAlignmentXConverter"/>
        <xs:attribute name="AlignmentY" type="StringToAlignmentYConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="SourceName" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dInkPresenter">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="InkPresenter.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.Children" type="dVisualCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.Strokes" type="dStrokeCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="Children" type="StringToVisualCollectionConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Background" type="StringToBrushConverter"/>
        <xs:attribute name="Strokes" type="StringToStrokeCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dStroke">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Stroke.StylusPoints" type="dStylusPointCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Stroke.DrawingAttributes" type="dDrawingAttributesContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="StylusPoints" type="StringToStylusPointCollectionConverter"/>
        <xs:attribute name="DrawingAttributes" type="StringToDrawingAttributesConverter"/>
    </xs:complexType>
    <xs:complexType name="dStrokeCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dStylusPoint">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="X" type="StringToDoubleConverter"/>
        <xs:attribute name="Y" type="StringToDoubleConverter"/>
        <xs:attribute name="PressureFactor" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dStylusPointCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dStylusInfo">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="DeviceType" type="StringToTabletDeviceTypeConverter"/>
        <xs:attribute name="IsInverted" type="StringToTabletDeviceTypeConverter"/>
    </xs:complexType>
    <xs:complexType name="dDrawingAttributes">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Color" type="StringToColorConverter"/>
        <xs:attribute name="OutlineColor" type="StringToColorConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dErrorEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="ErrorMessage" type="StringToStringConverter"/>
        <xs:attribute name="ErrorCode" type="StringToInt32Converter"/>
        <xs:attribute name="ErrorType" type="StringToErrorTypeConverter"/>
    </xs:complexType>
    <xs:complexType name="dParserErrorEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="ErrorMessage" type="StringToStringConverter"/>
        <xs:attribute name="ErrorCode" type="StringToInt32Converter"/>
        <xs:attribute name="ErrorType" type="StringToErrorTypeConverter"/>
        <xs:attribute name="XamlFile" type="StringToStringConverter"/>
        <xs:attribute name="LineNumber" type="StringToInt32Converter"/>
        <xs:attribute name="CharPosition" type="StringToInt32Converter"/>
        <xs:attribute name="XmlElement" type="StringToStringConverter"/>
        <xs:attribute name="XmlAttribute" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dRuntimeErrorEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="ErrorMessage" type="StringToStringConverter"/>
        <xs:attribute name="ErrorCode" type="StringToInt32Converter"/>
        <xs:attribute name="ErrorType" type="StringToErrorTypeConverter"/>
        <xs:attribute name="MethodName" type="StringToStringConverter"/>
        <xs:attribute name="LineNumber" type="StringToInt32Converter"/>
        <xs:attribute name="CharPosition" type="StringToInt32Converter"/>
    </xs:complexType>
    <xs:complexType name="dTimelineMarker">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Time" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Type" type="StringToStringConverter"/>
        <xs:attribute name="Text" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dTimelineMarkerCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dTimelineMarkerEventArgs">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="TimelineMarkerEventArgs.Marker" type="dTimelineMarkerContainer" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Marker" type="StringToTimelineMarkerConverter"/>
    </xs:complexType>
    <xs:complexType name="dResourceCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dTransformContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gTransform"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dTransformGroupContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gTransformGroup"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="peTransformGroup">
        <xs:choice>
            <xs:element name="TransformGroup.Children" type="dTransformCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="pePathFigure">
        <xs:choice>
            <xs:element name="PathFigure.Segments" type="dPathSegmentCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dGeometryContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gGeometry"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="pePathGeometry">
        <xs:choice>
            <xs:element name="PathGeometry.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="PathGeometry.Figures" type="dPathFigureCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peGeometryGroup">
        <xs:choice>
            <xs:element name="GeometryGroup.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="GeometryGroup.Children" type="dGeometryCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dBrushContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gBrush"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="peLinearGradientBrush">
        <xs:choice>
            <xs:element name="LinearGradientBrush.Transform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="LinearGradientBrush.RelativeTransform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="LinearGradientBrush.GradientStops" type="dGradientStopCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peRadialGradientBrush">
        <xs:choice>
            <xs:element name="RadialGradientBrush.Transform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="RadialGradientBrush.RelativeTransform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="RadialGradientBrush.GradientStops" type="dGradientStopCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peCanvas">
        <xs:choice>
            <xs:element name="Canvas.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.Children" type="dVisualCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peBeginStoryboard">
        <xs:choice>
            <xs:element name="BeginStoryboard.Storyboard" type="dStoryboardContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dStoryboardContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gStoryboard"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="peStoryboard">
        <xs:choice>
            <xs:element name="Storyboard.Children" type="dTimelineCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peEventTrigger">
        <xs:choice>
            <xs:element name="EventTrigger.Actions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dTriggerCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gEventTrigger"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dTransformCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gTransform"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dPathSegmentCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gPathSegment"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dPathFigureCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gPathFigure"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dGeometryCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gGeometry"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dGradientStopCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gGradientStop"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dTriggerActionCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gBeginStoryboard"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dKeySplineContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gKeySpline"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="peDoubleAnimationUsingKeyFrames">
        <xs:choice>
            <xs:element name="DoubleAnimationUsingKeyFrames.KeyFrames" type="dKeyFrameCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peColorAnimationUsingKeyFrames">
        <xs:choice>
            <xs:element name="ColorAnimationUsingKeyFrames.KeyFrames" type="dKeyFrameCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="pePointAnimationUsingKeyFrames">
        <xs:choice>
            <xs:element name="PointAnimationUsingKeyFrames.KeyFrames" type="dKeyFrameCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dMatrixContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gMatrix"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="peTextBlock">
        <xs:choice>
            <xs:element name="TextBlock.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.Inlines" type="dInlinesContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dFontFamilyContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gFontFamily"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dVisualCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gUIElement"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dInlinesContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gInline"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dStrokeCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gStroke"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dStylusPointCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gStylusPoint"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dDrawingAttributesContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gDrawingAttributes"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dTimelineMarkerContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gTimelineMarker"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dTimelineMarkerCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gTimelineMarker"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dResourceCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gStoryboard"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dMediaAttributeCollectionContent">
    </xs:complexType>
    <xs:complexType name="dTimelineCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gTimeline"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dKeyFrameCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gKeyFrame"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="gTransform">
        <xs:choice>
            <xs:element ref="TransformGroup"/>
            <xs:element ref="RotateTransform"/>
            <xs:element ref="ScaleTransform"/>
            <xs:element ref="SkewTransform"/>
            <xs:element ref="TranslateTransform"/>
            <xs:element ref="MatrixTransform"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gTransformGroup">
        <xs:choice>
            <xs:element ref="TransformGroup"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gPathSegment">
        <xs:choice>
            <xs:element ref="LineSegment"/>
            <xs:element ref="BezierSegment"/>
            <xs:element ref="QuadraticBezierSegment"/>
            <xs:element ref="ArcSegment"/>
            <xs:element ref="PolyLineSegment"/>
            <xs:element ref="PolyBezierSegment"/>
            <xs:element ref="PolyQuadraticBezierSegment"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gPathFigure">
        <xs:choice>
            <xs:element ref="PathFigure"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gGeometry">
        <xs:choice>
            <xs:element ref="PathGeometry"/>
            <xs:element ref="GeometryGroup"/>
            <xs:element ref="EllipseGeometry"/>
            <xs:element ref="RectangleGeometry"/>
            <xs:element ref="LineGeometry"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gBrush">
        <xs:choice>
            <xs:element ref="SolidColorBrush"/>
            <xs:group ref="gGradientBrush" minOccurs="0"/>
            <xs:group ref="gTileBrush" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gGradientStop">
        <xs:choice>
            <xs:element ref="GradientStop"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gGradientBrush">
        <xs:choice>
            <xs:element ref="LinearGradientBrush"/>
            <xs:element ref="RadialGradientBrush"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gUIElement">
        <xs:choice>
            <xs:group ref="gFrameworkElement" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gBeginStoryboard">
        <xs:choice>
            <xs:element ref="BeginStoryboard"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gStoryboard">
        <xs:choice>
            <xs:element ref="Storyboard"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gTimeline">
        <xs:choice>
            <xs:group ref="gTimelineGroup" minOccurs="0"/>
            <xs:group ref="gAnimation" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gTimelineGroup">
        <xs:choice>
            <xs:group ref="gParallelTimeline" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gEventTrigger">
        <xs:choice>
            <xs:element ref="EventTrigger"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gFrameworkElement">
        <xs:choice>
            <xs:group ref="gShape" minOccurs="0"/>
            <xs:element ref="Glyphs"/>
            <xs:element ref="TextBlock"/>
            <xs:group ref="gPanel" minOccurs="0"/>
            <xs:group ref="gMediaBase" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gKeyFrame">
        <xs:choice>
            <xs:group ref="gDoubleKeyFrame" minOccurs="0"/>
            <xs:group ref="gColorKeyFrame" minOccurs="0"/>
            <xs:group ref="gPointKeyFrame" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gKeySpline">
        <xs:choice>
            <xs:element ref="KeySpline"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gDoubleKeyFrame">
        <xs:choice>
            <xs:element ref="DiscreteDoubleKeyFrame"/>
            <xs:element ref="LinearDoubleKeyFrame"/>
            <xs:element ref="SplineDoubleKeyFrame"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gColorKeyFrame">
        <xs:choice>
            <xs:element ref="DiscreteColorKeyFrame"/>
            <xs:element ref="LinearColorKeyFrame"/>
            <xs:element ref="SplineColorKeyFrame"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gPointKeyFrame">
        <xs:choice>
            <xs:element ref="DiscretePointKeyFrame"/>
            <xs:element ref="LinearPointKeyFrame"/>
            <xs:element ref="SplinePointKeyFrame"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gAnimation">
        <xs:choice>
            <xs:group ref="gDoubleAnimation" minOccurs="0"/>
            <xs:group ref="gColorAnimation" minOccurs="0"/>
            <xs:group ref="gPointAnimation" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gMatrix">
        <xs:choice>
            <xs:element ref="Matrix"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gTileBrush">
        <xs:choice>
            <xs:element ref="ImageBrush"/>
            <xs:element ref="VideoBrush"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gFontFamily">
        <xs:choice>
            <xs:element ref="FontFamily"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gPanel">
        <xs:choice>
            <xs:group ref="gCanvas" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gMediaBase">
        <xs:choice>
            <xs:element ref="MediaElement"/>
            <xs:element ref="Image"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gInline">
        <xs:choice>
            <xs:element ref="Run"/>
            <xs:element ref="LineBreak"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gStroke">
        <xs:choice>
            <xs:element ref="Stroke"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gStylusPoint">
        <xs:choice>
            <xs:element ref="StylusPoint"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gDrawingAttributes">
        <xs:choice>
            <xs:element ref="DrawingAttributes"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gTimelineMarker">
        <xs:choice>
            <xs:element ref="TimelineMarker"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gShape">
        <xs:choice>
            <xs:element ref="Path"/>
            <xs:element ref="Ellipse"/>
            <xs:element ref="Line"/>
            <xs:element ref="Polygon"/>
            <xs:element ref="Polyline"/>
            <xs:element ref="Rectangle"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gCanvas">
        <xs:choice>
            <xs:element ref="Canvas"/>
            <xs:element ref="InkPresenter"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gParallelTimeline">
        <xs:choice>
            <xs:element ref="Storyboard"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gDoubleAnimation">
        <xs:choice>
            <xs:element ref="DoubleAnimation"/>
            <xs:element ref="DoubleAnimationUsingKeyFrames"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gColorAnimation">
        <xs:choice>
            <xs:element ref="ColorAnimation"/>
            <xs:element ref="ColorAnimationUsingKeyFrames"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gPointAnimation">
        <xs:choice>
            <xs:element ref="PointAnimation"/>
            <xs:element ref="PointAnimationUsingKeyFrames"/>
        </xs:choice>
    </xs:group>
    <xs:simpleType name="StringToDoubleConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPointConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToRectConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToColorConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToBooleanConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="True"/>
            <xs:enumeration value="False"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFillRuleConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="EvenOdd"/>
            <xs:enumeration value="NonZero"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToSweepDirectionConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Counterclockwise"/>
            <xs:enumeration value="Clockwise"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToColorInterpolationModeConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SRrgLinearInterpolation"/>
            <xs:enumeration value="ScRgbLinearInterpolation"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToGradientSpreadMethodConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Pad"/>
            <xs:enumeration value="Reflect"/>
            <xs:enumeration value="Repeat"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToBrushMappingModeConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Absolute"/>
            <xs:enumeration value="RelativeToBoundingBox"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFillBehaviorConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="HoldEnd"/>
            <xs:enumeration value="Stop"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTransformConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTransformGroupConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToGeometryConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToBrushConverter">
        <xs:restriction base="xs:string">
            <xs:pattern value="^#([a-f]|[A-F]|[0-9]){4}(([a-f]|[A-F]|[0-9]){4})?$"/>
            <xs:pattern value="^#([a-f]|[A-F]|[0-9]){3}(([a-f]|[A-F]|[0-9]){3})?$"/>
            <xs:pattern
                    value="AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenrod|DarkGray|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGray|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGray|DodgerBlue|Firebrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|Goldenrod|Gray|Green|GreenYellow|Honeydew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenrodYellow|LightGray|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGray|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquamarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenrod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGray|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTimelineCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToStoryboardConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTimeSpanConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToDurationConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToStringConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTriggerCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToDoublesConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPointsConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTransformCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPathSegmentCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPathFigureCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToGeometryCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToGradientStopCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTriggerActionCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToKeyTimeConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToKeySplineConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToKeyFrameCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPenLineCapConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Flat"/>
            <xs:enumeration value="Square"/>
            <xs:enumeration value="Round"/>
            <xs:enumeration value="Triangle"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPenLineJoinConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Miter"/>
            <xs:enumeration value="Bevel"/>
            <xs:enumeration value="Round"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToRepeatBehaviorConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToMatrixConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToAlignmentXConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Left"/>
            <xs:enumeration value="Center"/>
            <xs:enumeration value="Right"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToAlignmentYConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Top"/>
            <xs:enumeration value="Center"/>
            <xs:enumeration value="Bottom"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToStretchConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Fill"/>
            <xs:enumeration value="Uniform"/>
            <xs:enumeration value="UniformToFill"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFontFamilyConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTextWrappingConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Wrap"/>
            <xs:enumeration value="NoWrap"/>
            <xs:enumeration value="WrapWithOverflow"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFontWeightsConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Thin"/>
            <xs:enumeration value="ExtraLight"/>
            <xs:enumeration value="UltraLight"/>
            <xs:enumeration value="Light"/>
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Regular"/>
            <xs:enumeration value="Medium"/>
            <xs:enumeration value="DemiBold"/>
            <xs:enumeration value="SemiBold"/>
            <xs:enumeration value="Bold"/>
            <xs:enumeration value="ExtraBold"/>
            <xs:enumeration value="UltraBold"/>
            <xs:enumeration value="Black"/>
            <xs:enumeration value="Heavy"/>
            <xs:enumeration value="ExtraBlack"/>
            <xs:enumeration value="UltraBlack"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFontStylesConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Oblique"/>
            <xs:enumeration value="Italic"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFontStretchesConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="UltraCondensed"/>
            <xs:enumeration value="ExtraCondensed"/>
            <xs:enumeration value="Condensed"/>
            <xs:enumeration value="SemiCondensed"/>
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Medium"/>
            <xs:enumeration value="SemiExpanded"/>
            <xs:enumeration value="Expanded"/>
            <xs:enumeration value="ExtraExpanded"/>
            <xs:enumeration value="UltraExpanded"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToVisualCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToInlinesConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToCursorsConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Arrow"/>
            <xs:enumeration value="Hand"/>
            <xs:enumeration value="Wait"/>
            <xs:enumeration value="IBeam"/>
            <xs:enumeration value="None"/>
            <xs:enumeration value="Default"/>
            <xs:enumeration value="Stylus"/>
            <xs:enumeration value="Eraser"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToVisibilityConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Visible"/>
            <xs:enumeration value="Collapsed"/>
            <xs:enumeration value="Hidden"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToInt32Converter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToStrokeCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToStylusPointCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToDrawingAttributesConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTabletDeviceTypeConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTextDecorationsConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Underline"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTimelineMarkerConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTimelineMarkerCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToErrorTypeConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToResourceCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToMediaAttributeCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:attributeGroup name="xAttributes">
        <xs:attribute ref="x:Class"/>
        <xs:attribute ref="x:Key"/>
        <xs:attribute ref="x:Name"/>
        <xs:attribute ref="x:Language"/>
    </xs:attributeGroup>


</xs:schema>
