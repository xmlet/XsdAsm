<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="http://schemas.microsoft.com/client/2007"
           elementFormDefault="qualified"
           xmlns="http://schemas.microsoft.com/client/2007"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <xsd:element name="personInfoElementContainer">
        <xsd:complexType>
            <xsd:group>
                <xsd:all>
                    <xs:element name="personInfo">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="firstName" type="xs:string"/>
                                <xs:element name="lastName" type="xs:string"/>
                                <xs:element name="personAddress" type="xs:string"/>
                                <xs:element name="city" type="xs:string"/>
                                <xs:element name="country" type="xs:string"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xsd:all>
            </xsd:group>
        </xsd:complexType>
    </xsd:element>

    <!-- **************************************************************** -->

    <xs:element name="aName">
        <xs:complexType>
            <xs:group name="groupWSequence">
                <xs:sequence>
                    <xs:element name="elem1" type="xs:string"/>
                    <xs:element name="elem2" type="xs:string"/>
                </xs:sequence>
            </xs:group>
        </xs:complexType>
    </xs:element>

    <!-- **************************************************************** -->

    <xs:element name="studentGrades">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="firstName" type="xs:string"/>
                <xs:element name="lastName" type="xs:string"/>
                <xs:group>
                    <xsd:all>
                        <xs:element name="gradeNumeric"/>
                        <xs:element name="gradeQualitative"/>
                    </xsd:all>
                </xs:group>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- **************************************************************** -->

    <xsd:element name="intvalues">
        <xsd:complexType>
            <xsd:attribute name="intlist" type="valuelist"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:simpleType name="valuelist">
        <xsd:restriction>
            <xsd:maxLength value="5"/>
            <xsd:minLength value="1"/>
        </xsd:restriction>
        <xsd:list itemType="xsd:int"/>
    </xsd:simpleType>

    <!-- **************************************************************** -->

    <xsd:annotation>
        <xsd:documentation>
            Microsoft Visual Studio schema for HTML 5
        </xsd:documentation>
    </xsd:annotation>

    <xsd:include schemaLocation="I18Languages.xsd"/>

    <xsd:attributeGroup name="coreServerAttributeGroup" vs:nonbrowseable="true">
        <!-- Attributes -->
        <xsd:attribute name="EnableTheming" type="xsd:boolean" vs:nonbrowseable="true" vs:category="ASP.NET"
                       vs:disallowedonmobilepages="true" default="true" vs:serverattribute="true"/>
        <xsd:attribute name="EnableViewState" type="xsd:boolean" vs:category="ASP.NET" default="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="SkinID" type="xsd:string" vs:nonbrowseable="true" vs:category="ASP.NET"
                       vs:nonfilterable="true" vs:disallowedonmobilepages="true" default="" vs:serverattribute="true"/>
        <xsd:attribute name="Visible" type="xsd:boolean" vs:category="ASP.NET" default="true"
                       vs:serverattribute="true"/>
        <!-- Events -->
        <xsd:attribute name="OnDataBinding" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnDisposed" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnInit" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnLoad" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnPreRender" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnUnload" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="aServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="OnServerClick" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="buttonServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="CausesValidation" type="xsd:boolean" vs:category="ASP.NET" default="true"
                       vs:serverattribute="true"/>
        <xsd:attribute name="ValidationGroup" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnServerClick" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="formServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="DefaultButton" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="DefaultFocus" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="SubmitDisabledControls" type="xsd:boolean" vs:category="ASP.NET" default="false"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="inputServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="CausesValidation" type="xsd:boolean" vs:inputtype="button image submit"
                       vs:category="ASP.NET" vs:serverattribute="true"/>
        <xsd:attribute name="OnServerClick" vs:omtype="event" vs:inputtype="button image submit" vs:category="ASP.NET"
                       vs:nonfilterable="true" vs:serverattribute="true"/>
        <xsd:attribute name="OnServerChange" vs:omtype="event" vs:inputtype="checkbox hidden radio text"
                       vs:category="ASP.NET" vs:nonfilterable="true" vs:serverattribute="true"/>
        <xsd:attribute name="ValidationGroup" type="xsd:string" vs:inputtype="button image submit" vs:category="ASP.NET"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="selectServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="DataSourceID" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="DataTextField" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="DataValueField" type="xsd:string" vs:category="ASP.NET" default=""
                       vs:serverattribute="true"/>
        <xsd:attribute name="OnServerChange" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="textareaServerAttributeGroup" vs:nonbrowseable="true">
        <xsd:attribute name="OnServerChange" vs:omtype="event" vs:category="ASP.NET" vs:nonfilterable="true"
                       vs:serverattribute="true"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="classAttributeGroup">
        <xsd:attribute name="class" type="xsd:string"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="coreAttributeGroup" vs:nonbrowseable="true">
        <xsd:attributeGroup ref="classAttributeGroup"/>
        <xsd:attribute name="runat" vs:readonly="true" vs:nonfilterable="true" vs:serverattribute="true">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="server"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="accesskey"/>
        <xsd:attribute name="contenteditable" vs:standalone="true">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="true"/>
                    <xsd:enumeration value="false"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="contextmenu"/>
        <xsd:attribute name="data-FolderName"/>
        <xsd:attribute name="data-MsgId"/>
        <xsd:attribute name="dir" default="ltr">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="ltr"/>
                    <xsd:enumeration value="rtl"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="draggable" vs:standalone="true">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="true"/>
                    <xsd:enumeration value="false"/>
                    <xsd:enumeration value="auto"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="id" vs:renametype="classmember"/>
        <xsd:attribute name="item" vs:standalone="true"/>
        <xsd:attribute name="hidden" vs:standalone="true">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="hidden"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="lang" type="i18LanguageCode"/>
        <xsd:attribute name="itemprop"/>
        <xsd:attribute name="role"/>
        <xsd:attribute name="spellcheck" vs:standalone="true">
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="true"/>
                    <xsd:enumeration value="false"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="style" vs:builder="style"/>
        <xsd:attribute name="subject"/>
        <xsd:attribute name="tabIndex"/>
        <xsd:attribute name="title"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="commonEventsGroup" vs:nonbrowseable="true">
        <xsd:attribute name="onabort" vs:omtype="event"/>
        <xsd:attribute name="onblur" vs:omtype="event"/>
        <xsd:attribute name="oncanplay" vs:omtype="event"/>
        <xsd:attribute name="oncanplaythrough" vs:omtype="event"/>
        <xsd:attribute name="onchange" vs:omtype="event"/>
        <xsd:attribute name="onclick" vs:omtype="event"/>
        <xsd:attribute name="oncontextmenu" vs:omtype="event"/>
        <xsd:attribute name="ondblclick" vs:omtype="event"/>
        <xsd:attribute name="ondrag" vs:omtype="event"/>
        <xsd:attribute name="ondragenter" vs:omtype="event"/>
        <xsd:attribute name="ondragleave" vs:omtype="event"/>
        <xsd:attribute name="ondragover" vs:omtype="event"/>
        <xsd:attribute name="ondragstart" vs:omtype="event"/>
        <xsd:attribute name="ondrop" vs:omtype="event"/>
        <xsd:attribute name="ondurationchange" vs:omtype="event"/>
        <xsd:attribute name="onemptied" vs:omtype="event"/>
        <xsd:attribute name="onended" vs:omtype="event"/>
        <xsd:attribute name="onerror" vs:omtype="event"/>
        <xsd:attribute name="onfocus" vs:omtype="event"/>
        <xsd:attribute name="onformchange" vs:omtype="event"/>
        <xsd:attribute name="onforminput" vs:omtype="event"/>
        <xsd:attribute name="oninput" vs:omtype="event"/>
        <xsd:attribute name="oninvalid" vs:omtype="event"/>
        <xsd:attribute name="onkeydown" vs:omtype="event"/>
        <xsd:attribute name="onkeypress" vs:omtype="event"/>
        <xsd:attribute name="onkeyup" vs:omtype="event"/>
        <xsd:attribute name="onload" vs:omtype="event"/>
        <xsd:attribute name="onloadeddata" vs:omtype="event"/>
        <xsd:attribute name="onloadedmetadata" vs:omtype="event"/>
        <xsd:attribute name="onloadstart" vs:omtype="event"/>
        <xsd:attribute name="onmousedown" vs:omtype="event"/>
        <xsd:attribute name="onmousemove" vs:omtype="event"/>
        <xsd:attribute name="onmouseout" vs:omtype="event"/>
        <xsd:attribute name="onmouseover" vs:omtype="event"/>
        <xsd:attribute name="onmouseup" vs:omtype="event"/>
        <xsd:attribute name="onmousewheel" vs:omtype="event"/>
        <xsd:attribute name="onpause" vs:omtype="event"/>
        <xsd:attribute name="onplay" vs:omtype="event"/>
        <xsd:attribute name="onplaying" vs:omtype="event"/>
        <xsd:attribute name="onprogress" vs:omtype="event"/>
        <xsd:attribute name="onratechange" vs:omtype="event"/>
        <xsd:attribute name="onreadystatechange" vs:omtype="event"/>
        <xsd:attribute name="onscroll" vs:omtype="event"/>
        <xsd:attribute name="onseeked" vs:omtype="event"/>
        <xsd:attribute name="onseeking" vs:omtype="event"/>
        <xsd:attribute name="onselect" vs:omtype="event"/>
        <xsd:attribute name="onshow" vs:omtype="event"/>
        <xsd:attribute name="onstalled" vs:omtype="event"/>
        <xsd:attribute name="onsubmit" vs:omtype="event"/>
        <xsd:attribute name="onsuspend" vs:omtype="event"/>
        <xsd:attribute name="ontimeupdate" vs:omtype="event"/>
        <xsd:attribute name="onvolumenchange" vs:omtype="event"/>
        <xsd:attribute name="onwaiting" vs:omtype="event"/>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="commonAttributeGroup" vs:nonbrowseable="true">
        <xsd:attributeGroup ref="coreAttributeGroup"/>
        <xsd:attributeGroup ref="commonEventsGroup"/>
        <xsd:attributeGroup ref="coreServerAttributeGroup"/>
    </xsd:attributeGroup>

    <xsd:group name="metadataContent" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="base"/>
            <xsd:element ref="command"/>
            <xsd:element ref="link"/>
            <xsd:element ref="meta"/>
            <xsd:element ref="noscript"/>
            <xsd:element ref="script"/>
            <xsd:element ref="style"/>
            <xsd:element ref="title" minOccurs="1" maxOccurs="1"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="flowContent" vs:nonbrowseable="true">
        <xsd:choice>

            <xsd:element ref="a"/>
            <xsd:element ref="abbr"/>
            <xsd:element ref="area" vs:requiredascendant="map"/>
            <xsd:element ref="address"/>
            <xsd:element ref="article"/>
            <xsd:element ref="aside"/>
            <xsd:element ref="audio"/>

            <xsd:element ref="b"/>
            <xsd:element ref="bdo"/>
            <xsd:element ref="blockquote"/>
            <xsd:element ref="br"/>
            <xsd:element ref="button"/>

            <xsd:element ref="canvas"/>
            <xsd:element ref="cite"/>
            <xsd:element ref="code"/>
            <xsd:element ref="command"/>

            <xsd:element ref="datalist"/>
            <xsd:element ref="del"/>
            <xsd:element ref="details"/>
            <xsd:element ref="dfn"/>
            <xsd:element ref="dialog"/>
            <xsd:element ref="div"/>
            <xsd:element ref="dl"/>

            <xsd:element ref="em"/>
            <xsd:element ref="embed"/>

            <xsd:element ref="fieldset"/>
            <xsd:element ref="figure"/>
            <xsd:element ref="footer"/>
            <xsd:element ref="form"/>

            <xsd:element ref="h1"/>
            <xsd:element ref="h2"/>
            <xsd:element ref="h3"/>
            <xsd:element ref="h4"/>
            <xsd:element ref="h5"/>
            <xsd:element ref="h6"/>
            <xsd:element ref="header"/>
            <xsd:element ref="hgroup"/>
            <xsd:element ref="hr"/>

            <xsd:element ref="i"/>
            <xsd:element ref="iframe"/>
            <xsd:element ref="img"/>
            <xsd:element ref="input"/>
            <xsd:element ref="ins"/>

            <xsd:element ref="kbd"/>
            <xsd:element ref="keygen"/>

            <xsd:element ref="label"/>
            <xsd:element ref="link" vs:requiredattribute="itemprop"/>

            <xsd:element ref="map"/>
            <xsd:element ref="mark"/>
            <xsd:element ref="math"/>
            <xsd:element ref="menu" vs:requiredattribute="itemprop"/>
            <xsd:element ref="meta"/>
            <xsd:element ref="meter"/>

            <xsd:element ref="nav"/>
            <xsd:element ref="noscript"/>

            <xsd:element ref="ol"/>
            <xsd:element ref="object"/>
            <xsd:element ref="output"/>

            <xsd:element ref="p"/>
            <xsd:element ref="pre"/>
            <xsd:element ref="progress"/>

            <xsd:element ref="q"/>

            <xsd:element ref="ruby"/>

            <xsd:element ref="samp"/>
            <xsd:element ref="script"/>
            <xsd:element ref="section"/>
            <xsd:element ref="select"/>
            <xsd:element ref="small"/>
            <xsd:element ref="span"/>
            <xsd:element ref="strong"/>
            <xsd:element ref="style" vs:requiredattribute="scoped"/>
            <xsd:element ref="sub"/>
            <xsd:element ref="sup"/>
            <xsd:element ref="svg"/>

            <xsd:element ref="table"/>
            <xsd:element ref="textarea"/>
            <xsd:element ref="time"/>

            <xsd:element ref="ul"/>

            <xsd:element ref="var"/>
            <xsd:element ref="video"/>

        </xsd:choice>
    </xsd:group>

    <xsd:group name="headingContent" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="h1"/>
            <xsd:element ref="h2"/>
            <xsd:element ref="h3"/>
            <xsd:element ref="h4"/>
            <xsd:element ref="h5"/>
            <xsd:element ref="h6"/>
            <xsd:element ref="hgroup"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="sectioningContent" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="article"/>
            <xsd:element ref="aside"/>
            <xsd:element ref="nav"/>
            <xsd:element ref="section"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="phrasingContent" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="a" vs:requiredcontent="phrasingContent"/>
            <xsd:element ref="abbr"/>
            <xsd:element ref="area" vs:requiredascendant="map"/>
            <xsd:element ref="audio"/>

            <xsd:element ref="b"/>
            <xsd:element ref="bdo"/>
            <xsd:element ref="br"/>
            <xsd:element ref="button"/>

            <xsd:element ref="canvas"/>
            <xsd:element ref="cite"/>
            <xsd:element ref="code"/>
            <xsd:element ref="command"/>

            <xsd:element ref="datalist"/>
            <xsd:element ref="del" vs:requiredcontent="phrasingContent"/>
            <xsd:element ref="dfn"/>

            <xsd:element ref="em"/>
            <xsd:element ref="embed"/>

            <xsd:element ref="i"/>
            <xsd:element ref="iframe"/>
            <xsd:element ref="img"/>
            <xsd:element ref="input"/>
            <xsd:element ref="ins" vs:requiredcontent="phrasingContent"/>

            <xsd:element ref="kbd"/>
            <xsd:element ref="keygen"/>

            <xsd:element ref="label"/>
            <xsd:element ref="link" vs:requiredattribute="itemprop"/>

            <xsd:element ref="map" vs:requiredcontent="phrasingContent"/>
            <xsd:element ref="mark"/>
            <xsd:element ref="math"/>
            <xsd:element ref="meta" vs:requiredattribute="itemprop"/>
            <xsd:element ref="meter"/>

            <xsd:element ref="noscript"/>

            <xsd:element ref="object"/>
            <xsd:element ref="output"/>
            <xsd:element ref="progress"/>

            <xsd:element ref="q"/>

            <xsd:element ref="ruby"/>

            <xsd:element ref="samp"/>
            <xsd:element ref="script"/>
            <xsd:element ref="select"/>
            <xsd:element ref="small"/>
            <xsd:element ref="span"/>
            <xsd:element ref="strong"/>
            <xsd:element ref="sub"/>
            <xsd:element ref="sup"/>
            <xsd:element ref="svg"/>

            <xsd:element ref="textarea"/>
            <xsd:element ref="time"/>

            <xsd:element ref="var"/>
            <xsd:element ref="video"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="formElements" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="button"/>
            <xsd:element ref="fieldset"/>
            <xsd:element ref="input"/>
            <xsd:element ref="keygen"/>
            <xsd:element ref="label"/>
            <xsd:element ref="object"/>
            <xsd:element ref="output"/>
            <xsd:element ref="select"/>
            <xsd:element ref="textarea"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="labelElements" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="button"/>
            <xsd:element ref="input"/>
            <xsd:element ref="keygen"/>
            <xsd:element ref="select"/>
            <xsd:element ref="textarea"/>
        </xsd:choice>
    </xsd:group>

    <xsd:group name="interactiveContent" vs:nonbrowseable="true">
        <xsd:choice>
            <xsd:element ref="a"/>
            <xsd:element ref="audio" vs:requiredattribute="controls"/>
            <xsd:element ref="button"/>
            <xsd:element ref="details"/>
            <xsd:element ref="embed"/>
            <xsd:element ref="iframe"/>
            <xsd:element ref="img" vs:requiredattribute="usemap"/>
            <xsd:element ref="input" vs:requiredattribute="type!=hidden"/>
            <xsd:element ref="keygen"/>
            <xsd:element ref="label"/>
            <xsd:element ref="menu" vs:requiredattribute="type==toolbar"/>
            <xsd:element ref="object" vs:requiredattribute="usemap"/>
            <xsd:element ref="select"/>
            <xsd:element ref="textarea"/>
            <xsd:element ref="video" vs:requiredattribute="controls"/>
        </xsd:choice>
    </xsd:group>


    <!-- End of group definitions -->

    <!--================ Document Structure ==================================-->

    <!-- This element must be the first one in the file! -->
    <xs:element name="html">
        <xs:complexType>
            <xs:choice>
                <xs:element ref="body" minOccurs="1" maxOccurs="1"/>
                <xs:element ref="head" minOccurs="0" maxOccurs="1"/>
            </xs:choice>
            <xs:attributeGroup ref="commonAttributeGroup"/>
            <xs:attribute name="manifest" type="xsd:anyURI"/>
        </xs:complexType>
    </xs:element>

    <!--================ Document Head =======================================-->

    <xsd:element name="head">
        <xsd:complexType>
            <xsd:choice>
                <xsd:group ref="metadataContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="title">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <!-- document base URI -->
    <xsd:element name="base">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="href" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="target" type="browsingContext"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="link">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="href" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="hreflang" type="i18LanguageCode"/>
            <xsd:attribute name="rel" type="linkType"/>
            <xsd:attribute name="media" type="mediaType" default="screen"/>
            <xsd:attribute name="type" type="contentType" vs:readonly="true"/>
            <xsd:attribute name="sizes"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="meta">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="http-equiv">
                <xsd:simpleType>
                    <xsd:union>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                                <xsd:enumeration value="content-language"/>
                                <xsd:enumeration value="content-type"/>
                                <xsd:enumeration value="default-style"/>
                                <xsd:enumeration value="refresh"/>
                            </xsd:restriction>
                        </xsd:simpleType>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string"/>
                        </xsd:simpleType>
                    </xsd:union>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="name"/>
            <xsd:attribute name="content"/>
            <xsd:attribute name="charset"/>
        </xsd:complexType>
    </xsd:element>

    <!-- style info, which may include CDATA sections -->

    <xsd:element name="style">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="type" vs:readonly="true">
                <xsd:simpleType>
                    <xsd:union>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                                <xsd:enumeration value="text/css"/>
                            </xsd:restriction>
                        </xsd:simpleType>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string"/>
                        </xsd:simpleType>
                    </xsd:union>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="media" type="mediaType" default="screen"/>
            <xsd:attribute name="scoped" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="scoped"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <!-- script statements, which may include CDATA sections -->

    <xsd:element name="script">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="coreAttributeGroup"/>
            <xsd:attribute name="charset" type="xsd:string"/>
            <xsd:attribute name="type" vs:readonly="true" use="required">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="text/ecmascript"/>
                        <xsd:enumeration value="text/javascript"/>
                        <xsd:enumeration value="text/javascript1.0"/>
                        <xsd:enumeration value="text/javascript1.1"/>
                        <xsd:enumeration value="text/javascript1.2"/>
                        <xsd:enumeration value="text/javascript1.3"/>
                        <xsd:enumeration value="text/javascript1.4"/>
                        <xsd:enumeration value="text/javascript1.5"/>
                        <xsd:enumeration value="text/jscript"/>
                        <xsd:enumeration value="text/x-javascript"/>
                        <xsd:enumeration value="text/x-ecmascript"/>
                        <xsd:enumeration value="text/vbscript"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="src" type="xsd:anyURI"/>
            <xsd:attribute name="defer" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="defer"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="async" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="async"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <!-- alternate Content container for non script-based rendering -->

    <xsd:element name="noscript">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <!--=================== Document Body ====================================-->

    <xsd:element name="body">
        <xsd:complexType>
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="onafterprint" vs:omtype="event"/>
            <xsd:attribute name="onbeforeprint" vs:omtype="event"/>
            <xsd:attribute name="onbeforeunload" vs:omtype="event"/>
            <xsd:attribute name="onhashchange" vs:omtype="event"/>
            <xsd:attribute name="onmessage" vs:omtype="event"/>
            <xsd:attribute name="onoffline" vs:omtype="event"/>
            <xsd:attribute name="ononline" vs:omtype="event"/>
            <xsd:attribute name="onpopstate" vs:omtype="event"/>
            <xsd:attribute name="onredo" vs:omtype="event"/>
            <xsd:attribute name="onresize" vs:omtype="event"/>
            <xsd:attribute name="onstorage" vs:omtype="event"/>
            <xsd:attribute name="onundo" vs:omtype="event"/>
            <xsd:attribute name="onunload" vs:omtype="event"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="section" type="simpleFlowContentElement" vs:disallowedancestor="address"/>

    <xsd:element name="nav" type="simpleFlowContentElement" vs:disallowedancestor="address"/>

    <xsd:element name="article" vs:disallowedancestor="address">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="Pubdate"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="aside" type="simpleFlowContentElement" vs:disallowedancestor="address"/>

    <xsd:element name="h1" type="simplePhrasingContentElement"/>

    <xsd:element name="h2" type="simplePhrasingContentElement"/>

    <xsd:element name="h3" type="simplePhrasingContentElement"/>

    <xsd:element name="h4" type="simplePhrasingContentElement"/>

    <xsd:element name="h5" type="simplePhrasingContentElement"/>

    <xsd:element name="h6" type="simplePhrasingContentElement"/>

    <xsd:element name="hgroup">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="h1"/>
                <xsd:element ref="h2"/>
                <xsd:element ref="h3"/>
                <xsd:element ref="h4"/>
                <xsd:element ref="h5"/>
                <xsd:element ref="h6"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="header" vs:disallowedancestor="header footer address" type="simpleFlowContentElement"/>

    <xsd:element name="footer" vs:disallowedancestor="header footer address" type="simpleFlowContentElement"/>

    <xsd:element name="address" vs:disallowedancestor="address" type="simpleFlowContentElement"/>

    <xsd:element name="p" type="simplePhrasingContentElement" vs:implicitclosure="true"/>

    <xsd:element name="br">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="pre" type="simplePhrasingContentElement"/>

    <xsd:element name="dialog">
        <xsd:complexType>
            <!--
            <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                <xsd:element ref="dd" />
                <xsd:element ref="dt" />
            </xsd:sequence>
             -->
            <xsd:choice>
                <xsd:element ref="dd"/>
                <xsd:element ref="dt"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="blockquote">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent" vs:excludeelements="blockquote"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="cite" type="xsd:anyURI"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="ol">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="li"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="start"/>
            <xsd:attribute name="reversed" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="reversed"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="ul">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="li"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="li" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="value" vs:requiredparent="ol"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dl">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="dd"/>
                <xsd:element ref="dt"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dt" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dd" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <!--================== The Anchor Element ================================-->

    <xsd:element name="a" vs:disallowedancestor="a button" vs:contentmodel="transparent">
        <xsd:complexType mixed="true">
            <!-- Content Model -->
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <!-- Attributes -->
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="href" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="target" type="browsingContext" vs:requiredattribute="href"/>
            <xsd:attribute name="ping" vs:requiredattribute="href"/>
            <xsd:attribute name="rel" type="linkType" vs:requiredattribute="href"/>
            <xsd:attribute name="media" vs:requiredattribute="href"/>
            <xsd:attribute name="hreflang" type="i18LanguageCode" vs:requiredattribute="href"/>
            <xsd:attribute name="type" type="simpleContentType" vs:requiredattribute="href"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="em" type="simplePhrasingContentElement"/>

    <xsd:element name="strong" type="simplePhrasingContentElement"/>

    <xsd:element name="small" type="simplePhrasingContentElement"/>

    <xsd:element name="cite" type="simplePhrasingContentElement"/>

    <xsd:element name="q">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="cite" type="xsd:anyURI"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dfn" type="simplePhrasingContentElement" vs:disallowedancestor="dfn"/>

    <xsd:element name="abbr" type="simplePhrasingContentElement"/>

    <xsd:element name="code" type="simplePhrasingContentElement"/>

    <xsd:element name="var" type="simplePhrasingContentElement"/>

    <xsd:element name="samp" type="simplePhrasingContentElement"/>

    <xsd:element name="kbd" type="simplePhrasingContentElement"/>

    <xsd:element name="sub" type="simplePhrasingContentElement"/>

    <xsd:element name="sup" type="simplePhrasingContentElement"/>

    <xsd:element name="i" type="simplePhrasingContentElement"/>

    <xsd:element name="b" type="simplePhrasingContentElement"/>

    <xsd:element name="mark" type="simplePhrasingContentElement"/>

    <xsd:element name="progress">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="value" type="xsd:float"/>
            <xsd:attribute name="max" type="xsd:float"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="meter">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="value" type="xsd:float"/>
            <xsd:attribute name="min" type="xsd:float"/>
            <xsd:attribute name="max" type="xsd:float"/>
            <xsd:attribute name="low" type="xsd:float"/>
            <xsd:attribute name="high" type="xsd:float"/>
            <xsd:attribute name="optimum" type="xsd:float"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="time" vs:contenttype="xsd:dateTime">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="datetime" type="xsd:dateTime"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="ruby">
        <xsd:complexType mixed="true">
            <!--
            <xsd:sequence minOccurs="1" maxOccurs="unbounded">
                    <xsd:group ref="phrasingContent" />
                <xsd:choice>
                    <xsd:element ref="rt" minOccurs="1" maxOccurs="1" />
                    <xsd:element ref="rp" minOccurs="1" maxOccurs="1" />
                </xsd:choice>
            </xsd:sequence>
             -->
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
                <xsd:element ref="rt"/>
                <xsd:element ref="rp"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="rt" type="simplePhrasingContentElement"/>

    <xsd:element name="rp" type="simplePhrasingContentElement"/>

    <xsd:element name="bdo" type="simplePhrasingContentElement"/>

    <xsd:element name="span" type="simplePhrasingContentElement"/>

    <!--=================== Inserted/Deleted Text ============================-->

    <xsd:element name="ins" vs:contentmodel="transparent">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="cite" type="xsd:anyURI"/>
            <xsd:attribute name="datetime" type="xsd:dateTime"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="del" vs:contentmodel="transparent">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="cite" type="xsd:anyURI"/>
            <xsd:attribute name="datetime" type="xsd:dateTime"/>
        </xsd:complexType>
    </xsd:element>

    <!--==================== Embedded content ======================================-->

    <xsd:element name="figure" vs:disallowedancestor="legend">
        <xsd:complexType mixed="true">
            <!--
            <xsd:choice minOccurs="1" maxOccurs="1">
                <xsd:sequence minOccurs="1" maxOccurs="1">
                    <xsd:element ref="legend" />
                    <xsd:group ref="flowContent" />
                </xsd:sequence>
                <xsd:sequence minOccurs="1" maxOccurs="1">
                    <xsd:group ref="flowContent" />
                    <xsd:element ref="legend" />
                </xsd:sequence>
                <xsd:group ref="flowContent" />
            </xsd:choice>
             -->
            <xsd:choice>
                <xsd:group ref="flowContent"/>
                <xsd:element ref="legend" minOccurs="0" maxOccurs="1" vs:firstchild="true" vs:lastchild="true"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="img">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="alt" use="required"/>
            <xsd:attribute name="src" type="xsd:anyURI" use="required"
                           vs:preferredextensions=".jpg;.jpeg;.gif;.bmp;.jpe;.png;.dib;.tif;.wmf;.ras;.eps;.pcx;.pcd;.tga;.ashx;.asix"/>
            <xsd:attribute name="height"/>
            <xsd:attribute name="width"/>
            <xsd:attribute name="usemap" type="xsd:anyURI"/>
            <xsd:attribute name="ismap" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="ismap"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="iframe" vs:disallowedancestor="button">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="name" type="browsingContext"/>
            <xsd:attribute name="src" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="height"/>
            <xsd:attribute name="width"/>
            <xsd:attribute name="sandbox">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="allow-same-origin"/>
                        <xsd:enumeration value="allow-forms"/>
                        <xsd:enumeration value="allow-scripts"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="seamless" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="seamless"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="embed" vs:disallowedancestor="button">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="src" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="height"/>
            <xsd:attribute name="width"/>
            <xsd:attribute name="type"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="object" vs:clientom="__object" vs:contentmodel="transparent">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:element ref="param" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="data" type="xsd:anyURI"/>
            <xsd:attribute name="type"/>
            <xsd:attribute name="height"/>
            <xsd:attribute name="width"/>
            <xsd:attribute name="usemap" type="xsd:anyURI"/>
            <xsd:attribute name="name" type="browsingContext"/>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="classid"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="param">
        <xsd:complexType>
            <xsd:attributeGroup ref="coreAttributeGroup"/>
            <xsd:attribute name="name" use="required"/>
            <xsd:attribute name="value" use="required"/>
        </xsd:complexType>
    </xsd:element>

    <!--=================== Interactive content =======================================-->

    <xsd:element name="details" vs:disallowedancestor="button">
        <xsd:complexType mixed="true">
            <!--
            <xsd:sequence minOccurs="1" maxOccurs="1">
                <xsd:element ref="legend" />
                <xsd:group ref="flowContent" />
            </xsd:sequence>
             -->
            <xsd:choice>
                <xsd:element ref="legend" minOccurs="1" maxOccurs="1" vs:firstchild="true"/>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="open" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="open"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="command">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="type">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="command"/>
                        <xsd:enumeration value="checkbox"/>
                        <xsd:enumeration value="radio"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="label"/>
            <xsd:attribute name="icon"/>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="checked" vs:requiredattribute="type=radio|checkbox" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="checked"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="radiogroup" vs:requiredattribute="type=radio"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="menu" vs:disallowedancestor="button">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="li"/>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="type">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="context"/>
                        <xsd:enumeration value="toolbar"/>
                        <xsd:enumeration value="list"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="label"/>
        </xsd:complexType>
    </xsd:element>

    <!--=================== Miscellaneous elements =======================================-->

    <xsd:element name="legend">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent" vs:requiredparent="figure"/>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="div" type="simpleFlowContentElement"/>

    <!--=================== Interactive content =======================================-->

    <xsd:element name="source">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="src" type="xsd:anyURI"/>
            <xsd:attribute name="type"/>
            <xsd:attribute name="media"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="audio" vs:contentmodel="transparent" vs:disallowedancestor="audio video button">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:element ref="source" vs:requiredattribute="src"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="src" type="xsd:anyURI"/>
            <xsd:attribute name="autobuffer" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autobuffer"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="autoplay" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autoplay"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="loop" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="loop"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="controls" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="controls"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="video" vs:contentmodel="transparent" vs:disallowedancestor="audio video button">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:element ref="source" vs:requiredattribute="src"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="src" type="xsd:anyURI"/>
            <xsd:attribute name="autobuffer" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autobuffer"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="autoplay" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autoplay"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="loop" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="loop"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="controls" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="controls"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="width"/>
            <xsd:attribute name="height"/>
            <xsd:attribute name="poster"/>
        </xsd:complexType>
    </xsd:element>

    <!--=================== Horizontal Rule ==================================-->

    <xsd:element name="hr">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>


    <!--================ Forms ===============================================-->

    <xsd:element name="form" vs:disallowedancestor="form">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="accept-charset"/>
            <xsd:attribute name="action" type="xsd:anyURI" use="required"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="autocomplete">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="on"/>
                        <xsd:enumeration value="off"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="enctype">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="multipart/form-data"/>
                        <xsd:enumeration value="application/x-www-form-urlencoded"/>
                        <xsd:enumeration value="text/plain"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="method" default="get">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="get"/>
                        <xsd:enumeration value="post"/>
                        <xsd:enumeration value="put"/>
                        <xsd:enumeration value="delete"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="name"/>
            <xsd:attribute name="novalidate" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="novalidate"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="target" type="browsingContext"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="fieldset">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:element ref="legend" minOccurs="1" maxOccurs="1" vs:firstchild="true"/>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="disabled" vs:standalone="true"/>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="name"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="label" vs:disallowedancestor="button">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="for"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="input" vs:disallowedancestor="button">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="type" vs:readonly="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="button"/>
                        <xsd:enumeration value="checkbox"/>
                        <xsd:enumeration value="color"/>
                        <xsd:enumeration value="date"/>
                        <xsd:enumeration value="datetime"/>
                        <xsd:enumeration value="datetime-local"/>
                        <xsd:enumeration value="email"/>
                        <xsd:enumeration value="file"/>
                        <xsd:enumeration value="hidden"/>
                        <xsd:enumeration value="image"/>
                        <xsd:enumeration value="month"/>
                        <xsd:enumeration value="number"/>
                        <xsd:enumeration value="password"/>
                        <xsd:enumeration value="radio"/>
                        <xsd:enumeration value="range"/>
                        <xsd:enumeration value="reset"/>
                        <xsd:enumeration value="search"/>
                        <xsd:enumeration value="submit"/>
                        <xsd:enumeration value="text"/>
                        <xsd:enumeration value="tel"/>
                        <xsd:enumeration value="time"/>
                        <xsd:enumeration value="url"/>
                        <xsd:enumeration value="week"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="accept" vs:inputtype="file"/>
            <xsd:attribute name="alt" vs:inputtype="image"/>
            <xsd:attribute name="autocomplete"
                           vs:inputtype="color date datetime datetime-local email month number password range search tel text time url week"/>
            <xsd:attribute name="checked" vs:standalone="true" vs:inputtype="checkbox radio">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="checked"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="formaction" vs:inputtype="submit image"/>
            <xsd:attribute name="formenctype" vs:inputtype="submit image">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="multipart/form-data"/>
                        <xsd:enumeration value="application/x-www-form-urlencoded"/>
                        <xsd:enumeration value="text/plain"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formmethod" default="get" vs:inputtype="submit image">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="get"/>
                        <xsd:enumeration value="post"/>
                        <xsd:enumeration value="put"/>
                        <xsd:enumeration value="delete"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formnovalidate" vs:inputtype="submit image" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="formnovalidate"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formtarget" type="browsingContext" vs:inputtype="submit image"/>
            <xsd:attribute name="height" vs:inputtype="image"/>
            <xsd:attribute name="list"
                           vs:inputtype="color date datetime datetime-local email month number range search tel text time url week"/>
            <xsd:attribute name="max" vs:inputtype="date datetime datetime-local month number range search time week"/>
            <xsd:attribute name="maxlength" vs:inputtype="email password search tel text time url"/>
            <xsd:attribute name="min" vs:inputtype="date datetime datetime-local month number range search time week"/>
            <xsd:attribute name="multiple" vs:inputtype="email file"/>
            <xsd:attribute name="pattern" vs:inputtype="email password search tel text time url"
                           vs:requiredattribute="title"/>
            <xsd:attribute name="placeholder" vs:inputtype="email password search tel text time url"/>
            <xsd:attribute name="readonly"
                           vs:inputtype="date datetime datetime-local email month number password search tel text time url week"/>
            <xsd:attribute name="required"
                           vs:inputtype="checkbox date datetime datetime-local email file month number password radio search tel text time url week"/>
            <xsd:attribute name="size" vs:inputtype="email password search tel text time url"/>
            <xsd:attribute name="src" type="xsd:anyURI" vs:inputtype="image"/>
            <xsd:attribute name="step" vs:inputtype="date datetime datetime-local month number range search time week"/>
            <xsd:attribute name="width" vs:inputtype="image"/>
            <xsd:attribute name="files" vs:inputtype="file"/>
            <xsd:attribute name="value"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="button" vs:disallowedancestor="a button">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attributeGroup ref="buttonServerAttributeGroup"/>
            <xsd:attribute name="autofocus" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="formaction" vs:inputtype="submit image"/>
            <xsd:attribute name="formenctype" vs:inputtype="submit image">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="multipart/form-data"/>
                        <xsd:enumeration value="application/x-www-form-urlencoded"/>
                        <xsd:enumeration value="text/plain"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formmethod" default="get" vs:inputtype="submit image">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="get"/>
                        <xsd:enumeration value="post"/>
                        <xsd:enumeration value="put"/>
                        <xsd:enumeration value="delete"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formnovalidate" vs:inputtype="submit image" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="formnovalidate"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="formtarget" type="browsingContext" vs:inputtype="submit image"/>

            <xsd:attribute name="name"/>
            <xsd:attribute name="value"/>
            <xsd:attribute name="type" default="submit" vs:readonly="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="button"/>
                        <xsd:enumeration value="reset"/>
                        <xsd:enumeration value="submit"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="select" vs:disallowedancestor="a button">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="option"/>
                <xsd:element ref="optgroup"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="autofocus" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="multiple" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="multiple"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="name"/>
            <xsd:attribute name="size" type="ui4"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="datalist">
        <xsd:complexType>
            <xsd:choice vs:exclusive="true">
                <xsd:element ref="option"/>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="optgroup">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="option"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="label" use="required"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="option" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="selected" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="selected"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="label"/>
            <xsd:attribute name="value"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="textarea" vs:disallowedancestor="a button">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="autofocus" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="maxlength"/>
            <xsd:attribute name="name"/>
            <xsd:attribute name="placeholder"/>
            <xsd:attribute name="readonly" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="readonly"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="required" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="required"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="rows" type="xsd:integer" use="required"/>
            <xsd:attribute name="cols" type="xsd:integer" use="required"/>
            <xsd:attribute name="wrap">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="hard" vs:requiredattribute="cols"/>
                        <xsd:enumeration value="soft"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="keygen" vs:disallowedancestor="a button">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="autofocus" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="autofocus"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="challenge"/>
            <xsd:attribute name="disabled" vs:standalone="true">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="disabled"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="keytype">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="rsa"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="name"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="output" vs:disallowedancestor="a button">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="for"/>
            <xsd:attribute name="form" vs:associatedform="true"/>
            <xsd:attribute name="name"/>
        </xsd:complexType>
    </xsd:element>

    <!--================== Canvas ============================-->

    <xsd:element name="canvas" vs:contentmodel="transparent">
        <xsd:complexType mixed="true">
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="width"/>
            <xsd:attribute name="height"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="map" vs:contentmodel="transparent">
        <xsd:complexType>
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="name" use="required"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="area">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="Shape" default="rect">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="rect"/>
                        <xsd:enumeration value="circle"/>
                        <xsd:enumeration value="poly"/>
                        <xsd:enumeration value="default"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="coords"/>
            <xsd:attribute name="href" type="xsd:anyURI"
                           vs:preferredextensions=".asp;.aspx;.asmx;.asax;.ashx;.asix;.ascx;.htm;.html;.xml;.xsd;.config;.asa;.css;.shtm;.shtml;.php;.jsp"/>
            <xsd:attribute name="hreflang" type="i18LanguageCode"/>
            <xsd:attribute name="alt" use="required" vs:requiredattribute="href"/>
            <xsd:attribute name="target" type="browsingContext"/>
            <xsd:attribute name="media"/>
            <xsd:attribute name="rel" type="linkType"/>
            <xsd:attribute name="ping"/>
            <xsd:attribute name="type"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="mathml">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="svg">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <!--======================= Tables =======================================-->

    <xsd:element name="table" vs:disallowedancestor="caption">
        <xsd:complexType>
            <!--
                In this order: optionally a caption element, followed by either zero or more colgroup elements,
                followed optionally by a thead element, followed optionally by a tfoot element,
                followed by either zero or more tbody elements or one or more tr elements, followed optionally
                by a tfoot element (but there can only be one tfoot element child in total).
            -->
            <xsd:choice>
                <xsd:element ref="caption" minOccurs="0" maxOccurs="1"/>
                <xsd:element ref="colgroup"/>
                <xsd:element ref="thead" minOccurs="0" maxOccurs="1"/>
                <xsd:element ref="tfoot" minOccurs="0" maxOccurs="1"/>
                <xsd:element ref="tbody"/>
                <xsd:element ref="tr"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="summary"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="caption" type="simpleFlowContentElement"/>

    <xsd:element name="colgroup">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="col"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="span" type="xsd:integer" default="1"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="col">
        <xsd:complexType>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="span" type="xsd:integer" default="1"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="thead" vs:implicitclosure="true">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="tr"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="tfoot" vs:implicitclosure="true">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="tr"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="tbody" vs:implicitclosure="true">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="tr"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="tr" vs:implicitclosure="true">
        <xsd:complexType>
            <xsd:choice>
                <xsd:element ref="th" vs:disallowedancestor="tbody tfoot"/>
                <xsd:element ref="td"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="th" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="phrasingContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="headers"/>
            <xsd:attribute name="rowspan" default="1" type="positiveInteger"/>
            <xsd:attribute name="colspan" default="1" type="positiveInteger"/>
            <xsd:attribute name="scope">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:NMTOKEN">
                        <xsd:enumeration value="col"/>
                        <xsd:enumeration value="colgroup"/>
                        <xsd:enumeration value="row"/>
                        <xsd:enumeration value="rowgroup"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="td" vs:implicitclosure="true">
        <xsd:complexType mixed="true">
            <xsd:choice>
                <xsd:group ref="flowContent"/>
            </xsd:choice>
            <xsd:attributeGroup ref="commonAttributeGroup"/>
            <xsd:attribute name="headers"/>
            <xsd:attribute name="rowspan" default="1" type="positiveInteger"/>
            <xsd:attribute name="colspan" default="1" type="positiveInteger"/>
        </xsd:complexType>
    </xsd:element>

    <!-- XDR datatype derivations -->

    <xsd:simpleType name="mediaType">
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="screen"/>
                    <xsd:enumeration value="print"/>
                    <xsd:enumeration value="tty"/>
                    <xsd:enumeration value="tv"/>
                    <xsd:enumeration value="projection"/>
                    <xsd:enumeration value="handheld"/>
                    <xsd:enumeration value="braille"/>
                    <xsd:enumeration value="aural"/>
                    <xsd:enumeration value="all"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:simpleType name="linkType">
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="Alternate"/>
                    <xsd:enumeration value="Appendix"/>
                    <xsd:enumeration value="Bookmark"/>
                    <xsd:enumeration value="Chapter"/>
                    <xsd:enumeration value="Contents"/>
                    <xsd:enumeration value="Copyright"/>
                    <xsd:enumeration value="Glossary"/>
                    <xsd:enumeration value="Help"/>
                    <xsd:enumeration value="Index"/>
                    <xsd:enumeration value="Next"/>
                    <xsd:enumeration value="Prev"/>
                    <xsd:enumeration value="Section"/>
                    <xsd:enumeration value="Start"/>
                    <xsd:enumeration value="Stylesheet"/>
                    <xsd:enumeration value="Subsection"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:simpleType name="browsingContext">
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:NMTOKEN">
                    <xsd:enumeration value="_blank"/>
                    <xsd:enumeration value="_parent"/>
                    <xsd:enumeration value="_self"/>
                    <xsd:enumeration value="_top"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:simpleType name="contentType">
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="text/asp"/>
                    <xsd:enumeration value="text/asa"/>
                    <xsd:enumeration value="text/css"/>
                    <xsd:enumeration value="text/html"/>
                    <xsd:enumeration value="text/javascript"/>
                    <xsd:enumeration value="text/plain"/>
                    <xsd:enumeration value="text/scriptlet"/>
                    <xsd:enumeration value="text/x-component"/>
                    <xsd:enumeration value="text/x-html-insertion"/>
                    <xsd:enumeration value="text/xml"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:simpleType name="simpleContentType">
        <xsd:union>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="text/asp"/>
                    <xsd:enumeration value="text/asa"/>
                    <xsd:enumeration value="text/html"/>
                    <xsd:enumeration value="text/plain"/>
                    <xsd:enumeration value="text/xml"/>
                </xsd:restriction>
            </xsd:simpleType>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string"/>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>

    <xsd:complexType mixed="true" name="simpleFlowContentElement">
        <xsd:choice>
            <xsd:group ref="flowContent"/>
        </xsd:choice>
        <xsd:attributeGroup ref="commonAttributeGroup"/>
    </xsd:complexType>

    <xsd:complexType mixed="true" name="simplePhrasingContentElement">
        <xsd:choice>
            <xsd:group ref="phrasingContent"/>
        </xsd:choice>
        <xsd:attributeGroup ref="commonAttributeGroup"/>
    </xsd:complexType>

    <!-- ****************************** WPFE ********************************** -->

    <xs:element name="TransformGroup" type="dTransformGroup"/>
    <xs:element name="RotateTransform" type="dRotateTransform"/>
    <xs:element name="ScaleTransform" type="dScaleTransform"/>
    <xs:element name="SkewTransform" type="dSkewTransform"/>
    <xs:element name="TranslateTransform" type="dTranslateTransform"/>
    <xs:element name="LineSegment" type="dLineSegment"/>
    <xs:element name="BezierSegment" type="dBezierSegment"/>
    <xs:element name="QuadraticBezierSegment" type="dQuadraticBezierSegment"/>
    <xs:element name="ArcSegment" type="dArcSegment"/>
    <xs:element name="PolyLineSegment" type="dPolyLineSegment"/>
    <xs:element name="PolyBezierSegment" type="dPolyBezierSegment"/>
    <xs:element name="PolyQuadraticBezierSegment" type="dPolyQuadraticBezierSegment"/>
    <xs:element name="PathFigure" type="dPathFigure"/>
    <xs:element name="PathGeometry" type="dPathGeometry"/>
    <xs:element name="GeometryGroup" type="dGeometryGroup"/>
    <xs:element name="SolidColorBrush" type="dSolidColorBrush"/>
    <xs:element name="GradientStop" type="dGradientStop"/>
    <xs:element name="LinearGradientBrush" type="dLinearGradientBrush"/>
    <xs:element name="RadialGradientBrush" type="dRadialGradientBrush"/>
    <xs:element name="Canvas" type="dCanvas"/>
    <xs:element name="TimelineCollection" type="dTimelineCollection"/>
    <xs:element name="Path" type="dPath"/>
    <xs:element name="BeginStoryboard" type="dBeginStoryboard"/>
    <xs:element name="Storyboard" type="dStoryboard"/>
    <xs:element name="DoubleAnimation" type="dDoubleAnimation"/>
    <xs:element name="EventTrigger" type="dEventTrigger"/>
    <xs:element name="TriggerCollection" type="dTriggerCollection"/>
    <xs:element name="TransformCollection" type="dTransformCollection"/>
    <xs:element name="PathSegmentCollection" type="dPathSegmentCollection"/>
    <xs:element name="PathFigureCollection" type="dPathFigureCollection"/>
    <xs:element name="GeometryCollection" type="dGeometryCollection"/>
    <xs:element name="GradientStopCollection" type="dGradientStopCollection"/>
    <xs:element name="TriggerActionCollection" type="dTriggerActionCollection"/>
    <xs:element name="ColorAnimation" type="dColorAnimation"/>
    <xs:element name="Glyphs" type="dGlyphs"/>
    <xs:element name="KeyTime" type="dKeyTime"/>
    <xs:element name="KeySpline" type="dKeySpline"/>
    <xs:element name="KeyFrameCollection" type="dKeyFrameCollection"/>
    <xs:element name="DoubleAnimationUsingKeyFrames" type="dDoubleAnimationUsingKeyFrames"/>
    <xs:element name="DiscreteDoubleKeyFrame" type="dDiscreteDoubleKeyFrame"/>
    <xs:element name="LinearDoubleKeyFrame" type="dLinearDoubleKeyFrame"/>
    <xs:element name="SplineDoubleKeyFrame" type="dSplineDoubleKeyFrame"/>
    <xs:element name="ColorAnimationUsingKeyFrames" type="dColorAnimationUsingKeyFrames"/>
    <xs:element name="DiscreteColorKeyFrame" type="dDiscreteColorKeyFrame"/>
    <xs:element name="LinearColorKeyFrame" type="dLinearColorKeyFrame"/>
    <xs:element name="SplineColorKeyFrame" type="dSplineColorKeyFrame"/>
    <xs:element name="PointAnimationUsingKeyFrames" type="dPointAnimationUsingKeyFrames"/>
    <xs:element name="DiscretePointKeyFrame" type="dDiscretePointKeyFrame"/>
    <xs:element name="LinearPointKeyFrame" type="dLinearPointKeyFrame"/>
    <xs:element name="SplinePointKeyFrame" type="dSplinePointKeyFrame"/>
    <xs:element name="PointAnimation" type="dPointAnimation"/>
    <xs:element name="Ellipse" type="dEllipse"/>
    <xs:element name="Line" type="dLine"/>
    <xs:element name="Polygon" type="dPolygon"/>
    <xs:element name="Polyline" type="dPolyline"/>
    <xs:element name="Rectangle" type="dRectangle"/>
    <xs:element name="EllipseGeometry" type="dEllipseGeometry"/>
    <xs:element name="RectangleGeometry" type="dRectangleGeometry"/>
    <xs:element name="LineGeometry" type="dLineGeometry"/>
    <xs:element name="Matrix" type="dMatrix"/>
    <xs:element name="MatrixTransform" type="dMatrixTransform"/>
    <xs:element name="ImageBrush" type="dImageBrush"/>
    <xs:element name="MouseEventArgs" type="dMouseEventArgs"/>
    <xs:element name="TextBlock" type="dTextBlock"/>
    <xs:element name="Run" type="dRun"/>
    <xs:element name="LineBreak" type="dLineBreak"/>
    <xs:element name="FontFamily" type="dFontFamily"/>
    <xs:element name="MediaElement" type="dMediaElement"/>
    <xs:element name="Image" type="dImage"/>
    <xs:element name="EventArgs" type="dEventArgs"/>
    <xs:element name="VisualCollection" type="dVisualCollection"/>
    <xs:element name="Inlines" type="dInlines"/>
    <xs:element name="KeyboardEventArgs" type="dKeyboardEventArgs"/>
    <xs:element name="Downloader" type="dDownloader"/>
    <xs:element name="VideoBrush" type="dVideoBrush"/>
    <xs:element name="InkPresenter" type="dInkPresenter"/>
    <xs:element name="Stroke" type="dStroke"/>
    <xs:element name="StrokeCollection" type="dStrokeCollection"/>
    <xs:element name="StylusPoint" type="dStylusPoint"/>
    <xs:element name="StylusPointCollection" type="dStylusPointCollection"/>
    <xs:element name="StylusInfo" type="dStylusInfo"/>
    <xs:element name="DrawingAttributes" type="dDrawingAttributes"/>
    <xs:element name="ErrorEventArgs" type="dErrorEventArgs"/>
    <xs:element name="ParserErrorEventArgs" type="dParserErrorEventArgs"/>
    <xs:element name="RuntimeErrorEventArgs" type="dRuntimeErrorEventArgs"/>
    <xs:element name="TimelineMarker" type="dTimelineMarker"/>
    <xs:element name="TimelineMarkerCollection" type="dTimelineMarkerCollection"/>
    <xs:element name="TimelineMarkerEventArgs" type="dTimelineMarkerEventArgs"/>
    <xs:element name="ResourceCollection" type="dResourceCollection"/>
    <xs:complexType name="dTransformGroup">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peTransformGroup" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gTransform" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Children" type="StringToTransformCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dRotateTransform">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="CenterX" type="StringToDoubleConverter"/>
        <xs:attribute name="CenterY" type="StringToDoubleConverter"/>
        <xs:attribute name="Angle" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dScaleTransform">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="CenterX" type="StringToDoubleConverter"/>
        <xs:attribute name="CenterY" type="StringToDoubleConverter"/>
        <xs:attribute name="ScaleX" type="StringToDoubleConverter"/>
        <xs:attribute name="ScaleY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dSkewTransform">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="CenterX" type="StringToDoubleConverter"/>
        <xs:attribute name="CenterY" type="StringToDoubleConverter"/>
        <xs:attribute name="AngleX" type="StringToDoubleConverter"/>
        <xs:attribute name="AngleY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dTranslateTransform">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="X" type="StringToDoubleConverter"/>
        <xs:attribute name="Y" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dLineSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Point" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dBezierSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Point1" type="StringToPointConverter"/>
        <xs:attribute name="Point2" type="StringToPointConverter"/>
        <xs:attribute name="Point3" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dQuadraticBezierSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Point1" type="StringToPointConverter"/>
        <xs:attribute name="Point2" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dArcSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Point" type="StringToPointConverter"/>
        <xs:attribute name="Size" type="StringToPointConverter"/>
        <xs:attribute name="RotationAngle" type="StringToDoubleConverter"/>
        <xs:attribute name="IsLargeArc" type="StringToBooleanConverter"/>
        <xs:attribute name="SweepDirection" type="StringToSweepDirectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dPolyLineSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Points" type="StringToPointsConverter"/>
    </xs:complexType>
    <xs:complexType name="dPolyBezierSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Points" type="StringToPointsConverter"/>
    </xs:complexType>
    <xs:complexType name="dPolyQuadraticBezierSegment">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Points" type="StringToPointsConverter"/>
    </xs:complexType>
    <xs:complexType name="dPathFigure">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="pePathFigure" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gPathSegment" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Segments" type="StringToPathSegmentCollectionConverter"/>
        <xs:attribute name="StartPoint" type="StringToPointConverter"/>
        <xs:attribute name="IsClosed" type="StringToBooleanConverter"/>
        <xs:attribute name="IsFilled" type="StringToBooleanConverter"/>
    </xs:complexType>
    <xs:complexType name="dPathGeometry">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="pePathGeometry" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gPathFigure" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="Figures" type="StringToPathFigureCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dGeometryGroup">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peGeometryGroup" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gGeometry" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="Children" type="StringToGeometryCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dSolidColorBrush">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="SolidColorBrush.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="SolidColorBrush.RelativeTransform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="RelativeTransform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="Color" type="StringToColorConverter"/>
    </xs:complexType>
    <xs:complexType name="dGradientStop">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Color" type="StringToColorConverter"/>
        <xs:attribute name="Offset" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dLinearGradientBrush">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peLinearGradientBrush" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gGradientStop" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="RelativeTransform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="SpreadMethod" type="StringToGradientSpreadMethodConverter"/>
        <xs:attribute name="MappingMode" type="StringToBrushMappingModeConverter"/>
        <xs:attribute name="ColorInterpolationMode" type="StringToColorInterpolationModeConverter"/>
        <xs:attribute name="GradientStops" type="StringToGradientStopCollectionConverter"/>
        <xs:attribute name="StartPoint" type="StringToPointConverter"/>
        <xs:attribute name="EndPoint" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dRadialGradientBrush">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peRadialGradientBrush" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gGradientStop" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="RelativeTransform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="SpreadMethod" type="StringToGradientSpreadMethodConverter"/>
        <xs:attribute name="MappingMode" type="StringToBrushMappingModeConverter"/>
        <xs:attribute name="ColorInterpolationMode" type="StringToColorInterpolationModeConverter"/>
        <xs:attribute name="GradientStops" type="StringToGradientStopCollectionConverter"/>
        <xs:attribute name="Center" type="StringToPointConverter"/>
        <xs:attribute name="GradientOrigin" type="StringToPointConverter"/>
        <xs:attribute name="RadiusX" type="StringToDoubleConverter"/>
        <xs:attribute name="RadiusY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dCanvas">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:element ref="x:Code" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="peCanvas" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gUIElement" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="Children" type="StringToVisualCollectionConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Background" type="StringToBrushConverter"/>
    </xs:complexType>
    <xs:complexType name="dTimelineCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dPath">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Path.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Path.Data" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="Data" type="StringToGeometryConverter"/>
    </xs:complexType>
    <xs:complexType name="dBeginStoryboard">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peBeginStoryboard" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="Storyboard" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Storyboard" type="StringToStoryboardConverter"/>
    </xs:complexType>
    <xs:complexType name="dStoryboard">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peStoryboard" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gTimeline" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="Children" type="StringToTimelineCollectionConverter"/>
        <xs:attribute name="Completed" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dDoubleAnimation">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToDoubleConverter"/>
        <xs:attribute name="To" type="StringToDoubleConverter"/>
        <xs:attribute name="By" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dEventTrigger">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peEventTrigger" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gBeginStoryboard" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="RoutedEvent" type="StringToStringConverter"/>
        <xs:attribute name="Actions" type="StringToTriggerActionCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dTriggerCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dTransformCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dPathSegmentCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dPathFigureCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dGeometryCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dGradientStopCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dTriggerActionCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dColorAnimation">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToColorConverter"/>
        <xs:attribute name="To" type="StringToColorConverter"/>
        <xs:attribute name="By" type="StringToColorConverter"/>
    </xs:complexType>
    <xs:complexType name="dGlyphs">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Glyphs.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Glyphs.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Glyphs.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Glyphs.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Glyphs.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Glyphs.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="UnicodeString" type="StringToStringConverter"/>
        <xs:attribute name="Indices" type="StringToStringConverter"/>
        <xs:attribute name="FontUri" type="StringToStringConverter"/>
        <xs:attribute name="StyleSimulations" type="StringToStringConverter"/>
        <xs:attribute name="FontRenderingEmSize" type="StringToDoubleConverter"/>
        <xs:attribute name="OriginX" type="StringToDoubleConverter"/>
        <xs:attribute name="OriginY" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
    </xs:complexType>
    <xs:complexType name="dKeyTime">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Seconds" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dKeySpline">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
    </xs:complexType>
    <xs:complexType name="dKeyFrameCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dDoubleAnimationUsingKeyFrames">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peDoubleAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gKeyFrame" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToDoubleConverter"/>
        <xs:attribute name="To" type="StringToDoubleConverter"/>
        <xs:attribute name="By" type="StringToDoubleConverter"/>
        <xs:attribute name="KeyFrames" type="StringToKeyFrameCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dDiscreteDoubleKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dLinearDoubleKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dSplineDoubleKeyFrame">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="SplineDoubleKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToDoubleConverter"/>
        <xs:attribute name="KeySpline" type="StringToKeySplineConverter"/>
    </xs:complexType>
    <xs:complexType name="dColorAnimationUsingKeyFrames">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peColorAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gKeyFrame" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToColorConverter"/>
        <xs:attribute name="To" type="StringToColorConverter"/>
        <xs:attribute name="By" type="StringToColorConverter"/>
        <xs:attribute name="KeyFrames" type="StringToKeyFrameCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dDiscreteColorKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToColorConverter"/>
    </xs:complexType>
    <xs:complexType name="dLinearColorKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToColorConverter"/>
    </xs:complexType>
    <xs:complexType name="dSplineColorKeyFrame">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="SplineColorKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToColorConverter"/>
        <xs:attribute name="KeySpline" type="StringToKeySplineConverter"/>
    </xs:complexType>
    <xs:complexType name="dPointAnimationUsingKeyFrames">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="pePointAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gKeyFrame" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToPointConverter"/>
        <xs:attribute name="To" type="StringToPointConverter"/>
        <xs:attribute name="By" type="StringToPointConverter"/>
        <xs:attribute name="KeyFrames" type="StringToKeyFrameCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dDiscretePointKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dLinearPointKeyFrame">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dSplinePointKeyFrame">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="SplinePointKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="KeyTime" type="StringToKeyTimeConverter"/>
        <xs:attribute name="Value" type="StringToPointConverter"/>
        <xs:attribute name="KeySpline" type="StringToKeySplineConverter"/>
    </xs:complexType>
    <xs:complexType name="dPointAnimation">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="AutoReverse" type="StringToBooleanConverter"/>
        <xs:attribute name="BeginTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Duration" type="StringToDurationConverter"/>
        <xs:attribute name="SpeedRatio" type="StringToDoubleConverter"/>
        <xs:attribute name="FillBehavior" type="StringToFillBehaviorConverter"/>
        <xs:attribute name="RepeatBehavior" type="StringToRepeatBehaviorConverter"/>
        <xs:attribute name="Storyboard.TargetProperty" type="StringToStringConverter"/>
        <xs:attribute name="Storyboard.TargetName" type="StringToStringConverter"/>
        <xs:attribute name="From" type="StringToPointConverter"/>
        <xs:attribute name="To" type="StringToPointConverter"/>
        <xs:attribute name="By" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dEllipse">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Ellipse.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Ellipse.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
    </xs:complexType>
    <xs:complexType name="dLine">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Line.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Line.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="X1" type="StringToDoubleConverter"/>
        <xs:attribute name="Y1" type="StringToDoubleConverter"/>
        <xs:attribute name="X2" type="StringToDoubleConverter"/>
        <xs:attribute name="Y2" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dPolygon">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Polygon.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polygon.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Points" type="StringToPointsConverter"/>
    </xs:complexType>
    <xs:complexType name="dPolyline">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Polyline.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Polyline.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Points" type="StringToPointsConverter"/>
    </xs:complexType>
    <xs:complexType name="dRectangle">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Rectangle.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Rectangle.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Fill" type="StringToBrushConverter"/>
        <xs:attribute name="Stroke" type="StringToBrushConverter"/>
        <xs:attribute name="StrokeMiterLimit" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeThickness" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeStartLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeEndLineCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeLineJoin" type="StringToPenLineJoinConverter"/>
        <xs:attribute name="StrokeDashOffset" type="StringToDoubleConverter"/>
        <xs:attribute name="StrokeDashCap" type="StringToPenLineCapConverter"/>
        <xs:attribute name="StrokeDashArray" type="StringToDoublesConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="RadiusX" type="StringToDoubleConverter"/>
        <xs:attribute name="RadiusY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dEllipseGeometry">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="EllipseGeometry.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="Center" type="StringToPointConverter"/>
        <xs:attribute name="RadiusX" type="StringToDoubleConverter"/>
        <xs:attribute name="RadiusY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dRectangleGeometry">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="RectangleGeometry.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="Rect" type="StringToRectConverter"/>
        <xs:attribute name="RadiusX" type="StringToDoubleConverter"/>
        <xs:attribute name="RadiusY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dLineGeometry">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="LineGeometry.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FillRule" type="StringToFillRuleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="StartPoint" type="StringToPointConverter"/>
        <xs:attribute name="EndPoint" type="StringToPointConverter"/>
    </xs:complexType>
    <xs:complexType name="dMatrix">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="M11" type="StringToDoubleConverter"/>
        <xs:attribute name="M12" type="StringToDoubleConverter"/>
        <xs:attribute name="M21" type="StringToDoubleConverter"/>
        <xs:attribute name="M22" type="StringToDoubleConverter"/>
        <xs:attribute name="OffsetX" type="StringToDoubleConverter"/>
        <xs:attribute name="OffsetY" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dMatrixTransform">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="MatrixTransform.Matrix" type="dMatrixContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Matrix" type="StringToMatrixConverter"/>
    </xs:complexType>
    <xs:complexType name="dImageBrush">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="ImageBrush.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="ImageBrush.RelativeTransform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="RelativeTransform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="AlignmentX" type="StringToAlignmentXConverter"/>
        <xs:attribute name="AlignmentY" type="StringToAlignmentYConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="ImageFailed" type="StringToStringConverter"/>
        <xs:attribute name="ImageSource" type="StringToStringConverter"/>
        <xs:attribute name="DownloadProgress" type="StringToDoubleConverter"/>
        <xs:attribute name="DownloadProgressChanged" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dMouseEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Shift" type="StringToBooleanConverter"/>
        <xs:attribute name="Ctrl" type="StringToBooleanConverter"/>
    </xs:complexType>
    <xs:complexType name="dTextBlock">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:group ref="peTextBlock" minOccurs="0" maxOccurs="unbounded"/>
            <xs:group ref="gInline" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="FontSize" type="StringToDoubleConverter"/>
        <xs:attribute name="FontFamily" type="StringToFontFamilyConverter"/>
        <xs:attribute name="FontWeight" type="StringToFontWeightsConverter"/>
        <xs:attribute name="FontStyle" type="StringToFontStylesConverter"/>
        <xs:attribute name="FontStretch" type="StringToFontStretchesConverter"/>
        <xs:attribute name="TextDecorations" type="StringToTextDecorationsConverter"/>
        <xs:attribute name="Foreground" type="StringToBrushConverter"/>
        <xs:attribute name="TextWrapping" type="StringToTextWrappingConverter"/>
        <xs:attribute name="Text" type="StringToStringConverter"/>
        <xs:attribute name="Inlines" type="StringToInlinesConverter"/>
    </xs:complexType>
    <xs:complexType name="dRun">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Run.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Run.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FontSize" type="StringToDoubleConverter"/>
        <xs:attribute name="FontFamily" type="StringToFontFamilyConverter"/>
        <xs:attribute name="FontWeight" type="StringToFontWeightsConverter"/>
        <xs:attribute name="FontStyle" type="StringToFontStylesConverter"/>
        <xs:attribute name="FontStretch" type="StringToFontStretchesConverter"/>
        <xs:attribute name="TextDecorations" type="StringToTextDecorationsConverter"/>
        <xs:attribute name="Foreground" type="StringToBrushConverter"/>
        <xs:attribute name="Text" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dLineBreak">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="LineBreak.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="LineBreak.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="FontSize" type="StringToDoubleConverter"/>
        <xs:attribute name="FontFamily" type="StringToFontFamilyConverter"/>
        <xs:attribute name="FontWeight" type="StringToFontWeightsConverter"/>
        <xs:attribute name="FontStyle" type="StringToFontStylesConverter"/>
        <xs:attribute name="FontStretch" type="StringToFontStretchesConverter"/>
        <xs:attribute name="TextDecorations" type="StringToTextDecorationsConverter"/>
        <xs:attribute name="Foreground" type="StringToBrushConverter"/>
    </xs:complexType>
    <xs:complexType name="dFontFamily">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
    </xs:complexType>
    <xs:complexType name="dMediaElement">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="MediaElement.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="MediaElement.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="MediaElement.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="MediaElement.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="MediaElement.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="MediaElement.Markers" type="dTimelineMarkerCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="MediaElement.Attributes" type="dMediaAttributeCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Source" type="StringToStringConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="MediaOpened" type="StringToStringConverter"/>
        <xs:attribute name="MediaEnded" type="StringToStringConverter"/>
        <xs:attribute name="MediaFailed" type="StringToStringConverter"/>
        <xs:attribute name="IsMuted" type="StringToBooleanConverter"/>
        <xs:attribute name="AutoPlay" type="StringToBooleanConverter"/>
        <xs:attribute name="Volume" type="StringToDoubleConverter"/>
        <xs:attribute name="Balance" type="StringToDoubleConverter"/>
        <xs:attribute name="Position" type="StringToTimeSpanConverter"/>
        <xs:attribute name="DownloadProgressChanged" type="StringToStringConverter"/>
        <xs:attribute name="BufferingProgressChanged" type="StringToStringConverter"/>
        <xs:attribute name="CurrentStateChanged" type="StringToStringConverter"/>
        <xs:attribute name="BufferingTime" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Markers" type="StringToTimelineMarkerCollectionConverter"/>
        <xs:attribute name="MarkerReached" type="StringToStringConverter"/>
        <xs:attribute name="Attributes" type="StringToMediaAttributeCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dImage">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Image.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Image.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Image.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Image.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Image.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="ImageFailed" type="StringToStringConverter"/>
        <xs:attribute name="DownloadProgressChanged" type="StringToStringConverter"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Source" type="StringToStringConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
    </xs:complexType>
    <xs:complexType name="dEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
    </xs:complexType>
    <xs:complexType name="dVisualCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dInlines">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dKeyboardEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Key" type="StringToDoubleConverter"/>
        <xs:attribute name="PlatformKeyCode" type="StringToDoubleConverter"/>
        <xs:attribute name="Shift" type="StringToBooleanConverter"/>
        <xs:attribute name="Ctrl" type="StringToBooleanConverter"/>
    </xs:complexType>
    <xs:complexType name="dDownloader">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="DownloadProgress" type="StringToDoubleConverter"/>
        <xs:attribute name="ResponseText" type="StringToStringConverter"/>
        <xs:attribute name="Status" type="StringToInt32Converter"/>
        <xs:attribute name="StatusText" type="StringToStringConverter"/>
        <xs:attribute name="URI" type="StringToStringConverter"/>
        <xs:attribute name="DownloadProgressChanged" type="StringToStringConverter"/>
        <xs:attribute name="Completed" type="StringToStringConverter"/>
        <xs:attribute name="DownloadFailed" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dVideoBrush">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="VideoBrush.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="VideoBrush.RelativeTransform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Transform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="RelativeTransform" type="StringToTransformGroupConverter"/>
        <xs:attribute name="AlignmentX" type="StringToAlignmentXConverter"/>
        <xs:attribute name="AlignmentY" type="StringToAlignmentYConverter"/>
        <xs:attribute name="Stretch" type="StringToStretchConverter"/>
        <xs:attribute name="SourceName" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dInkPresenter">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="InkPresenter.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.Children" type="dVisualCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="InkPresenter.Strokes" type="dStrokeCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Opacity" type="StringToDoubleConverter"/>
        <xs:attribute name="Clip" type="StringToGeometryConverter"/>
        <xs:attribute name="RenderTransform" type="StringToTransformConverter"/>
        <xs:attribute name="Triggers" type="StringToTriggerCollectionConverter"/>
        <xs:attribute name="Canvas.Left" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.Top" type="StringToDoubleConverter"/>
        <xs:attribute name="Canvas.ZIndex" type="StringToInt32Converter"/>
        <xs:attribute name="OpacityMask" type="StringToBrushConverter"/>
        <xs:attribute name="Loaded" type="StringToStringConverter"/>
        <xs:attribute name="Children" type="StringToVisualCollectionConverter"/>
        <xs:attribute name="MouseMove" type="StringToStringConverter"/>
        <xs:attribute name="MouseEnter" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeave" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonDown" type="StringToStringConverter"/>
        <xs:attribute name="MouseLeftButtonUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyUp" type="StringToStringConverter"/>
        <xs:attribute name="KeyDown" type="StringToStringConverter"/>
        <xs:attribute name="GotFocus" type="StringToStringConverter"/>
        <xs:attribute name="LostFocus" type="StringToStringConverter"/>
        <xs:attribute name="RenderTransformOrigin" type="StringToPointConverter"/>
        <xs:attribute name="Cursor" type="StringToCursorsConverter"/>
        <xs:attribute name="IsHitTestable" type="StringToBooleanConverter"/>
        <xs:attribute name="Visibility" type="StringToVisibilityConverter"/>
        <xs:attribute name="Resources" type="StringToResourceCollectionConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
        <xs:attribute name="Background" type="StringToBrushConverter"/>
        <xs:attribute name="Strokes" type="StringToStrokeCollectionConverter"/>
    </xs:complexType>
    <xs:complexType name="dStroke">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Stroke.StylusPoints" type="dStylusPointCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Stroke.DrawingAttributes" type="dDrawingAttributesContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="StylusPoints" type="StringToStylusPointCollectionConverter"/>
        <xs:attribute name="DrawingAttributes" type="StringToDrawingAttributesConverter"/>
    </xs:complexType>
    <xs:complexType name="dStrokeCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dStylusPoint">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="X" type="StringToDoubleConverter"/>
        <xs:attribute name="Y" type="StringToDoubleConverter"/>
        <xs:attribute name="PressureFactor" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dStylusPointCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dStylusInfo">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="DeviceType" type="StringToTabletDeviceTypeConverter"/>
        <xs:attribute name="IsInverted" type="StringToTabletDeviceTypeConverter"/>
    </xs:complexType>
    <xs:complexType name="dDrawingAttributes">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Color" type="StringToColorConverter"/>
        <xs:attribute name="OutlineColor" type="StringToColorConverter"/>
        <xs:attribute name="Width" type="StringToDoubleConverter"/>
        <xs:attribute name="Height" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dErrorEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="ErrorMessage" type="StringToStringConverter"/>
        <xs:attribute name="ErrorCode" type="StringToInt32Converter"/>
        <xs:attribute name="ErrorType" type="StringToErrorTypeConverter"/>
    </xs:complexType>
    <xs:complexType name="dParserErrorEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="ErrorMessage" type="StringToStringConverter"/>
        <xs:attribute name="ErrorCode" type="StringToInt32Converter"/>
        <xs:attribute name="ErrorType" type="StringToErrorTypeConverter"/>
        <xs:attribute name="XamlFile" type="StringToStringConverter"/>
        <xs:attribute name="LineNumber" type="StringToInt32Converter"/>
        <xs:attribute name="CharPosition" type="StringToInt32Converter"/>
        <xs:attribute name="XmlElement" type="StringToStringConverter"/>
        <xs:attribute name="XmlAttribute" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dRuntimeErrorEventArgs">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="ErrorMessage" type="StringToStringConverter"/>
        <xs:attribute name="ErrorCode" type="StringToInt32Converter"/>
        <xs:attribute name="ErrorType" type="StringToErrorTypeConverter"/>
        <xs:attribute name="MethodName" type="StringToStringConverter"/>
        <xs:attribute name="LineNumber" type="StringToInt32Converter"/>
        <xs:attribute name="CharPosition" type="StringToInt32Converter"/>
    </xs:complexType>
    <xs:complexType name="dTimelineMarker">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Time" type="StringToTimeSpanConverter"/>
        <xs:attribute name="Type" type="StringToStringConverter"/>
        <xs:attribute name="Text" type="StringToStringConverter"/>
    </xs:complexType>
    <xs:complexType name="dTimelineMarkerCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dTimelineMarkerEventArgs">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="TimelineMarkerEventArgs.Marker" type="dTimelineMarkerContainer" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Marker" type="StringToTimelineMarkerConverter"/>
    </xs:complexType>
    <xs:complexType name="dResourceCollection">
        <xs:attribute name="Name" type="StringToStringConverter"/>
        <xs:attributeGroup ref="xAttributes"/>
        <xs:attribute name="Count" type="StringToDoubleConverter"/>
    </xs:complexType>
    <xs:complexType name="dTransformContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gTransform"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dTransformGroupContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gTransformGroup"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="peTransformGroup">
        <xs:choice>
            <xs:element name="TransformGroup.Children" type="dTransformCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="pePathFigure">
        <xs:choice>
            <xs:element name="PathFigure.Segments" type="dPathSegmentCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dGeometryContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gGeometry"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="pePathGeometry">
        <xs:choice>
            <xs:element name="PathGeometry.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="PathGeometry.Figures" type="dPathFigureCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peGeometryGroup">
        <xs:choice>
            <xs:element name="GeometryGroup.Transform" type="dTransformGroupContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="GeometryGroup.Children" type="dGeometryCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dBrushContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gBrush"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="peLinearGradientBrush">
        <xs:choice>
            <xs:element name="LinearGradientBrush.Transform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="LinearGradientBrush.RelativeTransform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="LinearGradientBrush.GradientStops" type="dGradientStopCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peRadialGradientBrush">
        <xs:choice>
            <xs:element name="RadialGradientBrush.Transform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="RadialGradientBrush.RelativeTransform" type="dTransformGroupContainer" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="RadialGradientBrush.GradientStops" type="dGradientStopCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peCanvas">
        <xs:choice>
            <xs:element name="Canvas.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.Children" type="dVisualCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Canvas.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peBeginStoryboard">
        <xs:choice>
            <xs:element name="BeginStoryboard.Storyboard" type="dStoryboardContainer" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dStoryboardContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gStoryboard"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="peStoryboard">
        <xs:choice>
            <xs:element name="Storyboard.Children" type="dTimelineCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peEventTrigger">
        <xs:choice>
            <xs:element name="EventTrigger.Actions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dTriggerCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gEventTrigger"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dTransformCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gTransform"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dPathSegmentCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gPathSegment"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dPathFigureCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gPathFigure"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dGeometryCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gGeometry"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dGradientStopCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gGradientStop"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dTriggerActionCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gBeginStoryboard"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dKeySplineContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gKeySpline"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="peDoubleAnimationUsingKeyFrames">
        <xs:choice>
            <xs:element name="DoubleAnimationUsingKeyFrames.KeyFrames" type="dKeyFrameCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="peColorAnimationUsingKeyFrames">
        <xs:choice>
            <xs:element name="ColorAnimationUsingKeyFrames.KeyFrames" type="dKeyFrameCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:group name="pePointAnimationUsingKeyFrames">
        <xs:choice>
            <xs:element name="PointAnimationUsingKeyFrames.KeyFrames" type="dKeyFrameCollectionContent" minOccurs="0"
                        maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dMatrixContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gMatrix"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="peTextBlock">
        <xs:choice>
            <xs:element name="TextBlock.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.Resources" type="dResourceCollectionContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1"/>
            <xs:element name="TextBlock.Inlines" type="dInlinesContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="dFontFamilyContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gFontFamily"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dVisualCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gUIElement"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dInlinesContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gInline"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dStrokeCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gStroke"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dStylusPointCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gStylusPoint"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dDrawingAttributesContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gDrawingAttributes"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dTimelineMarkerContainer">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:group ref="gTimelineMarker"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dTimelineMarkerCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gTimelineMarker"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dResourceCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gStoryboard"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dMediaAttributeCollectionContent">
    </xs:complexType>
    <xs:complexType name="dTimelineCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gTimeline"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="dKeyFrameCollectionContent">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="gKeyFrame"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="gTransform">
        <xs:choice>
            <xs:element ref="TransformGroup"/>
            <xs:element ref="RotateTransform"/>
            <xs:element ref="ScaleTransform"/>
            <xs:element ref="SkewTransform"/>
            <xs:element ref="TranslateTransform"/>
            <xs:element ref="MatrixTransform"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gTransformGroup">
        <xs:choice>
            <xs:element ref="TransformGroup"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gPathSegment">
        <xs:choice>
            <xs:element ref="LineSegment"/>
            <xs:element ref="BezierSegment"/>
            <xs:element ref="QuadraticBezierSegment"/>
            <xs:element ref="ArcSegment"/>
            <xs:element ref="PolyLineSegment"/>
            <xs:element ref="PolyBezierSegment"/>
            <xs:element ref="PolyQuadraticBezierSegment"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gPathFigure">
        <xs:choice>
            <xs:element ref="PathFigure"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gGeometry">
        <xs:choice>
            <xs:element ref="PathGeometry"/>
            <xs:element ref="GeometryGroup"/>
            <xs:element ref="EllipseGeometry"/>
            <xs:element ref="RectangleGeometry"/>
            <xs:element ref="LineGeometry"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gBrush">
        <xs:choice>
            <xs:element ref="SolidColorBrush"/>
            <xs:group ref="gGradientBrush" minOccurs="0"/>
            <xs:group ref="gTileBrush" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gGradientStop">
        <xs:choice>
            <xs:element ref="GradientStop"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gGradientBrush">
        <xs:choice>
            <xs:element ref="LinearGradientBrush"/>
            <xs:element ref="RadialGradientBrush"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gUIElement">
        <xs:choice>
            <xs:group ref="gFrameworkElement" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gBeginStoryboard">
        <xs:choice>
            <xs:element ref="BeginStoryboard"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gStoryboard">
        <xs:choice>
            <xs:element ref="Storyboard"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gTimeline">
        <xs:choice>
            <xs:group ref="gTimelineGroup" minOccurs="0"/>
            <xs:group ref="gAnimation" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gTimelineGroup">
        <xs:choice>
            <xs:group ref="gParallelTimeline" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gEventTrigger">
        <xs:choice>
            <xs:element ref="EventTrigger"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gFrameworkElement">
        <xs:choice>
            <xs:group ref="gShape" minOccurs="0"/>
            <xs:element ref="Glyphs"/>
            <xs:element ref="TextBlock"/>
            <xs:group ref="gPanel" minOccurs="0"/>
            <xs:group ref="gMediaBase" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gKeyFrame">
        <xs:choice>
            <xs:group ref="gDoubleKeyFrame" minOccurs="0"/>
            <xs:group ref="gColorKeyFrame" minOccurs="0"/>
            <xs:group ref="gPointKeyFrame" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gKeySpline">
        <xs:choice>
            <xs:element ref="KeySpline"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gDoubleKeyFrame">
        <xs:choice>
            <xs:element ref="DiscreteDoubleKeyFrame"/>
            <xs:element ref="LinearDoubleKeyFrame"/>
            <xs:element ref="SplineDoubleKeyFrame"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gColorKeyFrame">
        <xs:choice>
            <xs:element ref="DiscreteColorKeyFrame"/>
            <xs:element ref="LinearColorKeyFrame"/>
            <xs:element ref="SplineColorKeyFrame"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gPointKeyFrame">
        <xs:choice>
            <xs:element ref="DiscretePointKeyFrame"/>
            <xs:element ref="LinearPointKeyFrame"/>
            <xs:element ref="SplinePointKeyFrame"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gAnimation">
        <xs:choice>
            <xs:group ref="gDoubleAnimation" minOccurs="0"/>
            <xs:group ref="gColorAnimation" minOccurs="0"/>
            <xs:group ref="gPointAnimation" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gMatrix">
        <xs:choice>
            <xs:element ref="Matrix"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gTileBrush">
        <xs:choice>
            <xs:element ref="ImageBrush"/>
            <xs:element ref="VideoBrush"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gFontFamily">
        <xs:choice>
            <xs:element ref="FontFamily"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gPanel">
        <xs:choice>
            <xs:group ref="gCanvas" minOccurs="0"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gMediaBase">
        <xs:choice>
            <xs:element ref="MediaElement"/>
            <xs:element ref="Image"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gInline">
        <xs:choice>
            <xs:element ref="Run"/>
            <xs:element ref="LineBreak"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gStroke">
        <xs:choice>
            <xs:element ref="Stroke"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gStylusPoint">
        <xs:choice>
            <xs:element ref="StylusPoint"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gDrawingAttributes">
        <xs:choice>
            <xs:element ref="DrawingAttributes"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gTimelineMarker">
        <xs:choice>
            <xs:element ref="TimelineMarker"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gShape">
        <xs:choice>
            <xs:element ref="Path"/>
            <xs:element ref="Ellipse"/>
            <xs:element ref="Line"/>
            <xs:element ref="Polygon"/>
            <xs:element ref="Polyline"/>
            <xs:element ref="Rectangle"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gCanvas">
        <xs:choice>
            <xs:element ref="Canvas"/>
            <xs:element ref="InkPresenter"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gParallelTimeline">
        <xs:choice>
            <xs:element ref="Storyboard"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gDoubleAnimation">
        <xs:choice>
            <xs:element ref="DoubleAnimation"/>
            <xs:element ref="DoubleAnimationUsingKeyFrames"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gColorAnimation">
        <xs:choice>
            <xs:element ref="ColorAnimation"/>
            <xs:element ref="ColorAnimationUsingKeyFrames"/>
        </xs:choice>
    </xs:group>
    <xs:group name="gPointAnimation">
        <xs:choice>
            <xs:element ref="PointAnimation"/>
            <xs:element ref="PointAnimationUsingKeyFrames"/>
        </xs:choice>
    </xs:group>
    <xs:simpleType name="StringToDoubleConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPointConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToRectConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToColorConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToBooleanConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="True"/>
            <xs:enumeration value="False"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFillRuleConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="EvenOdd"/>
            <xs:enumeration value="NonZero"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToSweepDirectionConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Counterclockwise"/>
            <xs:enumeration value="Clockwise"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToColorInterpolationModeConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SRrgLinearInterpolation"/>
            <xs:enumeration value="ScRgbLinearInterpolation"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToGradientSpreadMethodConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Pad"/>
            <xs:enumeration value="Reflect"/>
            <xs:enumeration value="Repeat"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToBrushMappingModeConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Absolute"/>
            <xs:enumeration value="RelativeToBoundingBox"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFillBehaviorConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="HoldEnd"/>
            <xs:enumeration value="Stop"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTransformConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTransformGroupConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToGeometryConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToBrushConverter">
        <xs:restriction base="xs:string">
            <xs:pattern value="^#([a-f]|[A-F]|[0-9]){4}(([a-f]|[A-F]|[0-9]){4})?$"/>
            <xs:pattern value="^#([a-f]|[A-F]|[0-9]){3}(([a-f]|[A-F]|[0-9]){3})?$"/>
            <xs:pattern
                    value="AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenrod|DarkGray|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGray|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGray|DodgerBlue|Firebrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|Goldenrod|Gray|Green|GreenYellow|Honeydew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenrodYellow|LightGray|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGray|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquamarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenrod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGray|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTimelineCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToStoryboardConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTimeSpanConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToDurationConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToStringConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTriggerCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToDoublesConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPointsConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTransformCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPathSegmentCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPathFigureCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToGeometryCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToGradientStopCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTriggerActionCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToKeyTimeConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToKeySplineConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToKeyFrameCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPenLineCapConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Flat"/>
            <xs:enumeration value="Square"/>
            <xs:enumeration value="Round"/>
            <xs:enumeration value="Triangle"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToPenLineJoinConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Miter"/>
            <xs:enumeration value="Bevel"/>
            <xs:enumeration value="Round"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToRepeatBehaviorConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToMatrixConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToAlignmentXConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Left"/>
            <xs:enumeration value="Center"/>
            <xs:enumeration value="Right"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToAlignmentYConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Top"/>
            <xs:enumeration value="Center"/>
            <xs:enumeration value="Bottom"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToStretchConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Fill"/>
            <xs:enumeration value="Uniform"/>
            <xs:enumeration value="UniformToFill"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFontFamilyConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTextWrappingConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Wrap"/>
            <xs:enumeration value="NoWrap"/>
            <xs:enumeration value="WrapWithOverflow"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFontWeightsConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Thin"/>
            <xs:enumeration value="ExtraLight"/>
            <xs:enumeration value="UltraLight"/>
            <xs:enumeration value="Light"/>
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Regular"/>
            <xs:enumeration value="Medium"/>
            <xs:enumeration value="DemiBold"/>
            <xs:enumeration value="SemiBold"/>
            <xs:enumeration value="Bold"/>
            <xs:enumeration value="ExtraBold"/>
            <xs:enumeration value="UltraBold"/>
            <xs:enumeration value="Black"/>
            <xs:enumeration value="Heavy"/>
            <xs:enumeration value="ExtraBlack"/>
            <xs:enumeration value="UltraBlack"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFontStylesConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Oblique"/>
            <xs:enumeration value="Italic"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToFontStretchesConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="UltraCondensed"/>
            <xs:enumeration value="ExtraCondensed"/>
            <xs:enumeration value="Condensed"/>
            <xs:enumeration value="SemiCondensed"/>
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Medium"/>
            <xs:enumeration value="SemiExpanded"/>
            <xs:enumeration value="Expanded"/>
            <xs:enumeration value="ExtraExpanded"/>
            <xs:enumeration value="UltraExpanded"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToVisualCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToInlinesConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToCursorsConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Arrow"/>
            <xs:enumeration value="Hand"/>
            <xs:enumeration value="Wait"/>
            <xs:enumeration value="IBeam"/>
            <xs:enumeration value="None"/>
            <xs:enumeration value="Default"/>
            <xs:enumeration value="Stylus"/>
            <xs:enumeration value="Eraser"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToVisibilityConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Visible"/>
            <xs:enumeration value="Collapsed"/>
            <xs:enumeration value="Hidden"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToInt32Converter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToStrokeCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToStylusPointCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToDrawingAttributesConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTabletDeviceTypeConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTextDecorationsConverter">
        <xs:restriction base="xs:string">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Underline"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTimelineMarkerConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToTimelineMarkerCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToErrorTypeConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToResourceCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="StringToMediaAttributeCollectionConverter">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>
    <xs:attributeGroup name="xAttributes">
        <xs:attribute ref="x:Class"/>
        <xs:attribute ref="x:Key"/>
        <xs:attribute ref="x:Name"/>
        <xs:attribute ref="x:Language"/>
    </xs:attributeGroup>

    <!-- ****************************** ANDROID ********************************** -->

    <xs:group name="any-view">
    <xs:choice>
      <xs:element ref="GLSurfaceView" />
      <xs:element ref="AdapterView" />
      <xs:element ref="AdapterViewAnimator" />
      <xs:element ref="AutoCompleteTextView" />
      <xs:element ref="MediaController" />
      <xs:element ref="TextView" />
      <xs:element ref="FragmentBreadCrumbs" />
      <xs:element ref="AppWidgetHostView" />
      <xs:element ref="GestureOverlayView" />
      <xs:element ref="ExtractEditText" />
      <xs:element ref="KeyboardView" />
      <xs:element ref="RSSurfaceView" />
      <xs:element ref="RSTextureView" />
      <xs:element ref="SurfaceView" />
      <xs:element ref="TextureView" />
      <xs:element ref="ViewGroup" />
      <xs:element ref="ViewStub" />
      <xs:element ref="WebView" />
      <xs:element ref="AbsListView" />
      <xs:element ref="AbsSeekBar" />
      <xs:element ref="AbsSpinner" />
      <xs:element ref="AbsoluteLayout" />
      <xs:element ref="AdapterViewFlipper" />
      <xs:element ref="AnalogClock" />
      <xs:element ref="Button" />
      <xs:element ref="CalendarView" />
      <xs:element ref="CheckBox" />
      <xs:element ref="CheckedTextView" />
      <xs:element ref="Chronometer" />
      <xs:element ref="CompoundButton" />
      <xs:element ref="DatePicker" />
      <xs:element ref="DialerFilter" />
      <xs:element ref="DigitalClock" />
      <xs:element ref="EditText" />
      <xs:element ref="ExpandableListView" />
      <xs:element ref="FrameLayout" />
      <xs:element ref="Gallery" />
      <xs:element ref="GridLayout" />
      <xs:element ref="GridView" />
      <xs:element ref="HorizontalScrollView" />
      <xs:element ref="ImageButton" />
      <xs:element ref="ImageSwitcher" />
      <xs:element ref="ImageView" />
      <xs:element ref="LinearLayout" />
      <xs:element ref="ListView" />
      <xs:element ref="MultiAutoCompleteTextView" />
      <xs:element ref="NumberPicker" />
      <xs:element ref="ProgressBar" />
      <xs:element ref="QuickContactBadge" />
      <xs:element ref="RadioButton" />
      <xs:element ref="RadioGroup" />
      <xs:element ref="RatingBar" />
      <xs:element ref="RelativeLayout" />
      <xs:element ref="ScrollView" />
      <xs:element ref="SearchView" />
      <xs:element ref="SeekBar" />
      <xs:element ref="SlidingDrawer" />
      <xs:element ref="Space" />
      <xs:element ref="Spinner" />
      <xs:element ref="StackView" />
      <xs:element ref="Switch" />
      <xs:element ref="TabHost" />
      <xs:element ref="TabWidget" />
      <xs:element ref="TableLayout" />
      <xs:element ref="TableRow" />
      <xs:element ref="TextSwitcher" />
      <xs:element ref="TimePicker" />
      <xs:element ref="ToggleButton" />
      <xs:element ref="TwoLineListItem" />
      <xs:element ref="VideoView" />
      <xs:element ref="ViewAnimator" />
      <xs:element ref="ViewFlipper" />
      <xs:element ref="ViewSwitcher" />
      <xs:element ref="ZoomButton" />
      <xs:element ref="ZoomControls" />
    </xs:choice>
  </xs:group>
  <xs:element name="View" type="View" />
  <xs:complexType name="View">
    <xs:attribute ref="android:layout_x" />
    <xs:attribute ref="android:layout_y" />
    <xs:attribute ref="android:layout_gravity" />
    <xs:attribute ref="android:layout_column" />
    <xs:attribute ref="android:layout_columnSpan" />
    <xs:attribute ref="android:layout_row" />
    <xs:attribute ref="android:layout_rowSpan" />
    <xs:attribute ref="android:icon" />
    <xs:attribute ref="android:imeSubtypeExtraValue" />
    <xs:attribute ref="android:imeSubtypeLocale" />
    <xs:attribute ref="android:imeSubtypeMode" />
    <xs:attribute ref="android:isAuxiliary" />
    <xs:attribute ref="android:label" />
    <xs:attribute ref="android:overridesImplicitlyEnabledSubtype" />
    <xs:attribute ref="android:codes" />
    <xs:attribute ref="android:iconPreview" />
    <xs:attribute ref="android:isModifier" />
    <xs:attribute ref="android:isRepeatable" />
    <xs:attribute ref="android:isSticky" />
    <xs:attribute ref="android:keyEdgeFlags" />
    <xs:attribute ref="android:keyIcon" />
    <xs:attribute ref="android:keyLabel" />
    <xs:attribute ref="android:keyOutputText" />
    <xs:attribute ref="android:keyboardMode" />
    <xs:attribute ref="android:popupCharacters" />
    <xs:attribute ref="android:popupKeyboard" />
    <xs:attribute ref="android:rowEdgeFlags" />
    <xs:attribute ref="android:layout_height" />
    <xs:attribute ref="android:layout_weight" />
    <xs:attribute ref="android:layout_width" />
    <xs:attribute ref="android:layout_above" />
    <xs:attribute ref="android:layout_alignBaseline" />
    <xs:attribute ref="android:layout_alignBottom" />
    <xs:attribute ref="android:layout_alignLeft" />
    <xs:attribute ref="android:layout_alignParentBottom" />
    <xs:attribute ref="android:layout_alignParentLeft" />
    <xs:attribute ref="android:layout_alignParentRight" />
    <xs:attribute ref="android:layout_alignParentTop" />
    <xs:attribute ref="android:layout_alignRight" />
    <xs:attribute ref="android:layout_alignTop" />
    <xs:attribute ref="android:layout_alignWithParentIfMissing" />
    <xs:attribute ref="android:layout_below" />
    <xs:attribute ref="android:layout_centerHorizontal" />
    <xs:attribute ref="android:layout_centerInParent" />
    <xs:attribute ref="android:layout_centerVertical" />
    <xs:attribute ref="android:layout_toLeftOf" />
    <xs:attribute ref="android:layout_toRightOf" />
    <xs:attribute ref="android:subtypeExtraValue" />
    <xs:attribute ref="android:subtypeLocale" />
    <xs:attribute ref="android:layout_span" />
    <xs:attribute ref="android:layout_scale" />
    <xs:attribute ref="android:alpha" />
    <xs:attribute ref="android:background" />
    <xs:attribute ref="android:clickable" />
    <xs:attribute ref="android:contentDescription" />
    <xs:attribute ref="android:drawingCacheQuality" />
    <xs:attribute ref="android:duplicateParentState" />
    <xs:attribute ref="android:fadeScrollbars" />
    <xs:attribute ref="android:fadingEdge" />
    <xs:attribute ref="android:fadingEdgeLength" />
    <xs:attribute ref="android:filterTouchesWhenObscured" />
    <xs:attribute ref="android:fitsSystemWindows" />
    <xs:attribute ref="android:focusable" />
    <xs:attribute ref="android:focusableInTouchMode" />
    <xs:attribute ref="android:hapticFeedbackEnabled" />
    <xs:attribute ref="android:id" />
    <xs:attribute ref="android:isScrollContainer" />
    <xs:attribute ref="android:keepScreenOn" />
    <xs:attribute ref="android:layerType" />
    <xs:attribute ref="android:longClickable" />
    <xs:attribute ref="android:minHeight" />
    <xs:attribute ref="android:minWidth" />
    <xs:attribute ref="android:nextFocusDown" />
    <xs:attribute ref="android:nextFocusForward" />
    <xs:attribute ref="android:nextFocusLeft" />
    <xs:attribute ref="android:nextFocusRight" />
    <xs:attribute ref="android:nextFocusUp" />
    <xs:attribute ref="android:onClick" />
    <xs:attribute ref="android:overScrollMode" />
    <xs:attribute ref="android:padding" />
    <xs:attribute ref="android:paddingBottom" />
    <xs:attribute ref="android:paddingLeft" />
    <xs:attribute ref="android:paddingRight" />
    <xs:attribute ref="android:paddingTop" />
    <xs:attribute ref="android:requiresFadingEdge" />
    <xs:attribute ref="android:rotation" />
    <xs:attribute ref="android:rotationX" />
    <xs:attribute ref="android:rotationY" />
    <xs:attribute ref="android:saveEnabled" />
    <xs:attribute ref="android:scaleX" />
    <xs:attribute ref="android:scaleY" />
    <xs:attribute ref="android:scrollX" />
    <xs:attribute ref="android:scrollY" />
    <xs:attribute ref="android:scrollbarAlwaysDrawHorizontalTrack" />
    <xs:attribute ref="android:scrollbarAlwaysDrawVerticalTrack" />
    <xs:attribute ref="android:scrollbarDefaultDelayBeforeFade" />
    <xs:attribute ref="android:scrollbarFadeDuration" />
    <xs:attribute ref="android:scrollbarSize" />
    <xs:attribute ref="android:scrollbarStyle" />
    <xs:attribute ref="android:scrollbarThumbHorizontal" />
    <xs:attribute ref="android:scrollbarThumbVertical" />
    <xs:attribute ref="android:scrollbarTrackHorizontal" />
    <xs:attribute ref="android:scrollbarTrackVertical" />
    <xs:attribute ref="android:scrollbars" />
    <xs:attribute ref="android:soundEffectsEnabled" />
    <xs:attribute ref="android:tag" />
    <xs:attribute ref="android:transformPivotX" />
    <xs:attribute ref="android:transformPivotY" />
    <xs:attribute ref="android:translationX" />
    <xs:attribute ref="android:translationY" />
    <xs:attribute ref="android:verticalScrollbarPosition" />
    <xs:attribute ref="android:visibility" />
    <xs:attribute ref="android:layout_margin" />
    <xs:attribute ref="android:layout_marginBottom" />
    <xs:attribute ref="android:layout_marginLeft" />
    <xs:attribute ref="android:layout_marginRight" />
    <xs:attribute ref="android:layout_marginTop" />
  </xs:complexType>
  <xs:element name="GLSurfaceView" type="GLSurfaceView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Opengl.GLSurfaceView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="GLSurfaceView">
    <xs:complexContent mixed="false">
      <xs:extension base="SurfaceView" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="AdapterView" type="AdapterView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.AdapterView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AdapterView">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewGroup" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="AdapterViewAnimator" type="AdapterViewAnimator">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.AdapterViewAnimator</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AdapterViewAnimator">
    <xs:complexContent mixed="false">
      <xs:extension base="AdapterView">
        <xs:attribute ref="android:animateFirstView" />
        <xs:attribute ref="android:inAnimation" />
        <xs:attribute ref="android:loopViews" />
        <xs:attribute ref="android:outAnimation" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="AutoCompleteTextView" type="AutoCompleteTextView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.AutoCompleteTextView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AutoCompleteTextView">
    <xs:complexContent mixed="false">
      <xs:extension base="EditText">
        <xs:attribute ref="android:completionHint" />
        <xs:attribute ref="android:completionHintView" />
        <xs:attribute ref="android:completionThreshold" />
        <xs:attribute ref="android:dropDownAnchor" />
        <xs:attribute ref="android:dropDownHeight" />
        <xs:attribute ref="android:dropDownHorizontalOffset" />
        <xs:attribute ref="android:dropDownSelector" />
        <xs:attribute ref="android:dropDownVerticalOffset" />
        <xs:attribute ref="android:dropDownWidth" />
        <xs:attribute ref="android:inputType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="MediaController" type="MediaController">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.MediaController</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="MediaController">
    <xs:complexContent mixed="false">
      <xs:extension base="FrameLayout" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="TextView" type="TextView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.TextView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="TextView">
    <xs:complexContent mixed="false">
      <xs:extension base="View">
        <xs:attribute ref="android:autoLink" />
        <xs:attribute ref="android:autoText" />
        <xs:attribute ref="android:bufferType" />
        <xs:attribute ref="android:capitalize" />
        <xs:attribute ref="android:cursorVisible" />
        <xs:attribute ref="android:digits" />
        <xs:attribute ref="android:drawableBottom" />
        <xs:attribute ref="android:drawableEnd" />
        <xs:attribute ref="android:drawableLeft" />
        <xs:attribute ref="android:drawablePadding" />
        <xs:attribute ref="android:drawableRight" />
        <xs:attribute ref="android:drawableStart" />
        <xs:attribute ref="android:drawableTop" />
        <xs:attribute ref="android:editable" />
        <xs:attribute ref="android:editorExtras" />
        <xs:attribute ref="android:ellipsize" />
        <xs:attribute ref="android:ems" />
        <xs:attribute ref="android:enabled" />
        <xs:attribute ref="android:freezesText" />
        <xs:attribute ref="android:gravity" />
        <xs:attribute ref="android:height" />
        <xs:attribute ref="android:hint" />
        <xs:attribute ref="android:imeActionId" />
        <xs:attribute ref="android:imeActionLabel" />
        <xs:attribute ref="android:imeOptions" />
        <xs:attribute ref="android:includeFontPadding" />
        <xs:attribute ref="android:inputMethod" />
        <xs:attribute ref="android:inputType" />
        <xs:attribute ref="android:lineSpacingExtra" />
        <xs:attribute ref="android:lineSpacingMultiplier" />
        <xs:attribute ref="android:lines" />
        <xs:attribute ref="android:linksClickable" />
        <xs:attribute ref="android:marqueeRepeatLimit" />
        <xs:attribute ref="android:maxEms" />
        <xs:attribute ref="android:maxHeight" />
        <xs:attribute ref="android:maxLength" />
        <xs:attribute ref="android:maxLines" />
        <xs:attribute ref="android:maxWidth" />
        <xs:attribute ref="android:minEms" />
        <xs:attribute ref="android:minHeight" />
        <xs:attribute ref="android:minLines" />
        <xs:attribute ref="android:minWidth" />
        <xs:attribute ref="android:numeric" />
        <xs:attribute ref="android:password" />
        <xs:attribute ref="android:phoneNumber" />
        <xs:attribute ref="android:privateImeOptions" />
        <xs:attribute ref="android:scrollHorizontally" />
        <xs:attribute ref="android:selectAllOnFocus" />
        <xs:attribute ref="android:shadowColor" />
        <xs:attribute ref="android:shadowDx" />
        <xs:attribute ref="android:shadowDy" />
        <xs:attribute ref="android:shadowRadius" />
        <xs:attribute ref="android:singleLine" />
        <xs:attribute ref="android:text" />
        <xs:attribute ref="android:textAllCaps" />
        <xs:attribute ref="android:textAppearance" />
        <xs:attribute ref="android:textColor" />
        <xs:attribute ref="android:textColorHighlight" />
        <xs:attribute ref="android:textColorHint" />
        <xs:attribute ref="android:textColorLink" />
        <xs:attribute ref="android:textCursorDrawable" />
        <xs:attribute ref="android:textEditNoPasteWindowLayout" />
        <xs:attribute ref="android:textEditPasteWindowLayout" />
        <xs:attribute ref="android:textEditSideNoPasteWindowLayout" />
        <xs:attribute ref="android:textEditSidePasteWindowLayout" />
        <xs:attribute ref="android:textEditSuggestionItemLayout" />
        <xs:attribute ref="android:textIsSelectable" />
        <xs:attribute ref="android:textScaleX" />
        <xs:attribute ref="android:textSelectHandle" />
        <xs:attribute ref="android:textSelectHandleLeft" />
        <xs:attribute ref="android:textSelectHandleRight" />
        <xs:attribute ref="android:textSize" />
        <xs:attribute ref="android:textStyle" />
        <xs:attribute ref="android:typeface" />
        <xs:attribute ref="android:width" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="FragmentBreadCrumbs" type="FragmentBreadCrumbs">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.App.FragmentBreadCrumbs</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="FragmentBreadCrumbs">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewGroup" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="AppWidgetHostView" type="AppWidgetHostView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Appwidget.AppWidgetHostView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AppWidgetHostView">
    <xs:complexContent mixed="false">
      <xs:extension base="FrameLayout" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="GestureOverlayView" type="GestureOverlayView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Gestures.GestureOverlayView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="GestureOverlayView">
    <xs:complexContent mixed="false">
      <xs:extension base="FrameLayout">
        <xs:attribute ref="android:eventsInterceptionEnabled" />
        <xs:attribute ref="android:fadeDuration" />
        <xs:attribute ref="android:fadeEnabled" />
        <xs:attribute ref="android:fadeOffset" />
        <xs:attribute ref="android:gestureColor" />
        <xs:attribute ref="android:gestureStrokeAngleThreshold" />
        <xs:attribute ref="android:gestureStrokeLengthThreshold" />
        <xs:attribute ref="android:gestureStrokeSquarenessThreshold" />
        <xs:attribute ref="android:gestureStrokeType" />
        <xs:attribute ref="android:gestureStrokeWidth" />
        <xs:attribute ref="android:orientation" />
        <xs:attribute ref="android:uncertainGestureColor" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ExtractEditText" type="ExtractEditText">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.InputMethodServices.ExtractEditText</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ExtractEditText">
    <xs:complexContent mixed="false">
      <xs:extension base="EditText" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="KeyboardView" type="KeyboardView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.InputMethodServices.KeyboardView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="KeyboardView">
    <xs:complexContent mixed="false">
      <xs:extension base="View">
        <xs:attribute ref="android:keyBackground" />
        <xs:attribute ref="android:keyPreviewHeight" />
        <xs:attribute ref="android:keyPreviewLayout" />
        <xs:attribute ref="android:keyPreviewOffset" />
        <xs:attribute ref="android:keyTextColor" />
        <xs:attribute ref="android:keyTextSize" />
        <xs:attribute ref="android:labelTextSize" />
        <xs:attribute ref="android:popupLayout" />
        <xs:attribute ref="android:shadowColor" />
        <xs:attribute ref="android:shadowRadius" />
        <xs:attribute ref="android:verticalCorrection" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="RSSurfaceView" type="RSSurfaceView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Renderscripts.RSSurfaceView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="RSSurfaceView">
    <xs:complexContent mixed="false">
      <xs:extension base="SurfaceView" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="RSTextureView" type="RSTextureView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Renderscripts.RSTextureView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="RSTextureView">
    <xs:complexContent mixed="false">
      <xs:extension base="TextureView" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="SurfaceView" type="SurfaceView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Views.SurfaceView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SurfaceView">
    <xs:complexContent mixed="false">
      <xs:extension base="View" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="TextureView" type="TextureView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Views.TextureView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="TextureView">
    <xs:complexContent mixed="false">
      <xs:extension base="View" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ViewGroup" type="ViewGroup">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Views.ViewGroup</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ViewGroup">
    <xs:complexContent mixed="false">
      <xs:extension base="View">
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="any-view" />
        <xs:attribute ref="android:addStatesFromChildren" />
        <xs:attribute ref="android:alwaysDrawnWithCache" />
        <xs:attribute ref="android:animateLayoutChanges" />
        <xs:attribute ref="android:animationCache" />
        <xs:attribute ref="android:clipChildren" />
        <xs:attribute ref="android:clipToPadding" />
        <xs:attribute ref="android:descendantFocusability" />
        <xs:attribute ref="android:layoutAnimation" />
        <xs:attribute ref="android:persistentDrawingCache" />
        <xs:attribute ref="android:splitMotionEvents" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ViewStub" type="ViewStub">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Views.ViewStub</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ViewStub">
    <xs:complexContent mixed="false">
      <xs:extension base="View">
        <xs:attribute ref="android:inflatedId" />
        <xs:attribute ref="android:layout" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="WebView" type="WebView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Webkit.WebView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="WebView">
    <xs:complexContent mixed="false">
      <xs:extension base="AbsoluteLayout" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="AbsListView" type="AbsListView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.AbsListView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AbsListView">
    <xs:complexContent mixed="false">
      <xs:extension base="AdapterView">
        <xs:attribute ref="android:cacheColorHint" />
        <xs:attribute ref="android:choiceMode" />
        <xs:attribute ref="android:drawSelectorOnTop" />
        <xs:attribute ref="android:fastScrollAlwaysVisible" />
        <xs:attribute ref="android:fastScrollEnabled" />
        <xs:attribute ref="android:listSelector" />
        <xs:attribute ref="android:scrollingCache" />
        <xs:attribute ref="android:smoothScrollbar" />
        <xs:attribute ref="android:stackFromBottom" />
        <xs:attribute ref="android:textFilterEnabled" />
        <xs:attribute ref="android:transcriptMode" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="AbsSeekBar" type="AbsSeekBar">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.AbsSeekBar</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AbsSeekBar">
    <xs:complexContent mixed="false">
      <xs:extension base="ProgressBar" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="AbsSpinner" type="AbsSpinner">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.AbsSpinner</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AbsSpinner">
    <xs:complexContent mixed="false">
      <xs:extension base="AdapterView">
        <xs:attribute ref="android:entries" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="AbsoluteLayout" type="AbsoluteLayout">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.AbsoluteLayout</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AbsoluteLayout">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewGroup" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="AdapterViewFlipper" type="AdapterViewFlipper">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.AdapterViewFlipper</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AdapterViewFlipper">
    <xs:complexContent mixed="false">
      <xs:extension base="AdapterViewAnimator">
        <xs:attribute ref="android:autoStart" />
        <xs:attribute ref="android:flipInterval" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="AnalogClock" type="AnalogClock">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.AnalogClock</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AnalogClock">
    <xs:complexContent mixed="false">
      <xs:extension base="View">
        <xs:attribute ref="android:dial" />
        <xs:attribute ref="android:hand_hour" />
        <xs:attribute ref="android:hand_minute" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Button" type="Button">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.Button</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Button">
    <xs:complexContent mixed="false">
      <xs:extension base="TextView" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="CalendarView" type="CalendarView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.CalendarView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="CalendarView">
    <xs:complexContent mixed="false">
      <xs:extension base="FrameLayout">
        <xs:attribute ref="android:dateTextAppearance" />
        <xs:attribute ref="android:firstDayOfWeek" />
        <xs:attribute ref="android:focusedMonthDateColor" />
        <xs:attribute ref="android:maxDate" />
        <xs:attribute ref="android:minDate" />
        <xs:attribute ref="android:selectedDateVerticalBar" />
        <xs:attribute ref="android:selectedWeekBackgroundColor" />
        <xs:attribute ref="android:showWeekNumber" />
        <xs:attribute ref="android:shownWeekCount" />
        <xs:attribute ref="android:unfocusedMonthDateColor" />
        <xs:attribute ref="android:weekDayTextAppearance" />
        <xs:attribute ref="android:weekNumberColor" />
        <xs:attribute ref="android:weekSeparatorLineColor" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="CheckBox" type="CheckBox">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.CheckBox</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="CheckBox">
    <xs:complexContent mixed="false">
      <xs:extension base="CompoundButton" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="CheckedTextView" type="CheckedTextView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.CheckedTextView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="CheckedTextView">
    <xs:complexContent mixed="false">
      <xs:extension base="TextView">
        <xs:attribute ref="android:checkMark" />
        <xs:attribute ref="android:checked" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Chronometer" type="Chronometer">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.Chronometer</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Chronometer">
    <xs:complexContent mixed="false">
      <xs:extension base="TextView">
        <xs:attribute ref="android:format" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="CompoundButton" type="CompoundButton">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.CompoundButton</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="CompoundButton">
    <xs:complexContent mixed="false">
      <xs:extension base="Button">
        <xs:attribute ref="android:button" />
        <xs:attribute ref="android:checked" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="DatePicker" type="DatePicker">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.DatePicker</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="DatePicker">
    <xs:complexContent mixed="false">
      <xs:extension base="FrameLayout" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="DialerFilter" type="DialerFilter">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.DialerFilter</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="DialerFilter">
    <xs:complexContent mixed="false">
      <xs:extension base="RelativeLayout" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="DigitalClock" type="DigitalClock">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.DigitalClock</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="DigitalClock">
    <xs:complexContent mixed="false">
      <xs:extension base="TextView" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="EditText" type="EditText">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.EditText</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="EditText">
    <xs:complexContent mixed="false">
      <xs:extension base="TextView" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ExpandableListView" type="ExpandableListView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ExpandableListView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ExpandableListView">
    <xs:complexContent mixed="false">
      <xs:extension base="ListView">
        <xs:attribute ref="android:childDivider" />
        <xs:attribute ref="android:childIndicator" />
        <xs:attribute ref="android:childIndicatorLeft" />
        <xs:attribute ref="android:childIndicatorRight" />
        <xs:attribute ref="android:groupIndicator" />
        <xs:attribute ref="android:indicatorLeft" />
        <xs:attribute ref="android:indicatorRight" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="FrameLayout" type="FrameLayout">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.FrameLayout</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="FrameLayout">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewGroup">
        <xs:attribute ref="android:foreground" />
        <xs:attribute ref="android:foregroundGravity" />
        <xs:attribute ref="android:measureAllChildren" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Gallery" type="Gallery">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.Gallery</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Gallery">
    <xs:complexContent mixed="false">
      <xs:extension base="AbsSpinner">
        <xs:attribute ref="android:animationDuration" />
        <xs:attribute ref="android:gravity" />
        <xs:attribute ref="android:spacing" />
        <xs:attribute ref="android:unselectedAlpha" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="GridLayout" type="GridLayout">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.GridLayout</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="GridLayout">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewGroup">
        <xs:attribute ref="android:alignmentMode" />
        <xs:attribute ref="android:columnCount" />
        <xs:attribute ref="android:columnOrderPreserved" />
        <xs:attribute ref="android:orientation" />
        <xs:attribute ref="android:rowCount" />
        <xs:attribute ref="android:rowOrderPreserved" />
        <xs:attribute ref="android:useDefaultMargins" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="GridView" type="GridView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.GridView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="GridView">
    <xs:complexContent mixed="false">
      <xs:extension base="AbsListView">
        <xs:attribute ref="android:columnWidth" />
        <xs:attribute ref="android:gravity" />
        <xs:attribute ref="android:horizontalSpacing" />
        <xs:attribute ref="android:numColumns" />
        <xs:attribute ref="android:stretchMode" />
        <xs:attribute ref="android:verticalSpacing" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="HorizontalScrollView" type="HorizontalScrollView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.HorizontalScrollView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="HorizontalScrollView">
    <xs:complexContent mixed="false">
      <xs:extension base="FrameLayout">
        <xs:attribute ref="android:fillViewport" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ImageButton" type="ImageButton">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ImageButton</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ImageButton">
    <xs:complexContent mixed="false">
      <xs:extension base="ImageView" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ImageSwitcher" type="ImageSwitcher">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ImageSwitcher</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ImageSwitcher">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewSwitcher" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ImageView" type="ImageView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ImageView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ImageView">
    <xs:complexContent mixed="false">
      <xs:extension base="View">
        <xs:attribute ref="android:adjustViewBounds" />
        <xs:attribute ref="android:baseline" />
        <xs:attribute ref="android:baselineAlignBottom" />
        <xs:attribute ref="android:cropToPadding" />
        <xs:attribute ref="android:maxHeight" />
        <xs:attribute ref="android:maxWidth" />
        <xs:attribute ref="android:scaleType" />
        <xs:attribute ref="android:src" />
        <xs:attribute ref="android:tint" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="LinearLayout" type="LinearLayout">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.LinearLayout</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="LinearLayout">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewGroup">
        <xs:attribute ref="android:baselineAligned" />
        <xs:attribute ref="android:baselineAlignedChildIndex" />
        <xs:attribute ref="android:divider" />
        <xs:attribute ref="android:dividerPadding" />
        <xs:attribute ref="android:gravity" />
        <xs:attribute ref="android:measureWithLargestChild" />
        <xs:attribute ref="android:orientation" />
        <xs:attribute ref="android:showDividers" />
        <xs:attribute ref="android:weightSum" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ListView" type="ListView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ListView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ListView">
    <xs:complexContent mixed="false">
      <xs:extension base="AbsListView">
        <xs:attribute ref="android:divider" />
        <xs:attribute ref="android:dividerHeight" />
        <xs:attribute ref="android:entries" />
        <xs:attribute ref="android:footerDividersEnabled" />
        <xs:attribute ref="android:headerDividersEnabled" />
        <xs:attribute ref="android:overScrollFooter" />
        <xs:attribute ref="android:overScrollHeader" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="MultiAutoCompleteTextView" type="MultiAutoCompleteTextView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.MultiAutoCompleteTextView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="MultiAutoCompleteTextView">
    <xs:complexContent mixed="false">
      <xs:extension base="AutoCompleteTextView" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="NumberPicker" type="NumberPicker">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.NumberPicker</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="NumberPicker">
    <xs:complexContent mixed="false">
      <xs:extension base="LinearLayout" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ProgressBar" type="ProgressBar">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ProgressBar</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ProgressBar">
    <xs:complexContent mixed="false">
      <xs:extension base="View">
        <xs:attribute ref="android:animationResolution" />
        <xs:attribute ref="android:indeterminate" />
        <xs:attribute ref="android:indeterminateBehavior" />
        <xs:attribute ref="android:indeterminateDrawable" />
        <xs:attribute ref="android:indeterminateDuration" />
        <xs:attribute ref="android:indeterminateOnly" />
        <xs:attribute ref="android:interpolator" />
        <xs:attribute ref="android:max" />
        <xs:attribute ref="android:maxHeight" />
        <xs:attribute ref="android:maxWidth" />
        <xs:attribute ref="android:minHeight" />
        <xs:attribute ref="android:minWidth" />
        <xs:attribute ref="android:progress" />
        <xs:attribute ref="android:progressDrawable" />
        <xs:attribute ref="android:secondaryProgress" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="QuickContactBadge" type="QuickContactBadge">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.QuickContactBadge</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QuickContactBadge">
    <xs:complexContent mixed="false">
      <xs:extension base="ImageView" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="RadioButton" type="RadioButton">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.RadioButton</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="RadioButton">
    <xs:complexContent mixed="false">
      <xs:extension base="CompoundButton" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="RadioGroup" type="RadioGroup">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.RadioGroup</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="RadioGroup">
    <xs:complexContent mixed="false">
      <xs:extension base="LinearLayout">
        <xs:attribute ref="android:checkedButton" />
        <xs:attribute ref="android:orientation" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="RatingBar" type="RatingBar">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.RatingBar</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="RatingBar">
    <xs:complexContent mixed="false">
      <xs:extension base="AbsSeekBar">
        <xs:attribute ref="android:isIndicator" />
        <xs:attribute ref="android:numStars" />
        <xs:attribute ref="android:rating" />
        <xs:attribute ref="android:stepSize" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="RelativeLayout" type="RelativeLayout">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.RelativeLayout</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="RelativeLayout">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewGroup">
        <xs:attribute ref="android:gravity" />
        <xs:attribute ref="android:ignoreGravity" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ScrollView" type="ScrollView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ScrollView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ScrollView">
    <xs:complexContent mixed="false">
      <xs:extension base="FrameLayout">
        <xs:attribute ref="android:fillViewport" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="SearchView" type="SearchView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.SearchView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SearchView">
    <xs:complexContent mixed="false">
      <xs:extension base="LinearLayout">
        <xs:attribute ref="android:iconifiedByDefault" />
        <xs:attribute ref="android:imeOptions" />
        <xs:attribute ref="android:inputType" />
        <xs:attribute ref="android:maxWidth" />
        <xs:attribute ref="android:queryHint" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="SeekBar" type="SeekBar">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.SeekBar</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SeekBar">
    <xs:complexContent mixed="false">
      <xs:extension base="AbsSeekBar">
        <xs:attribute ref="android:thumb" />
        <xs:attribute ref="android:thumbOffset" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="SlidingDrawer" type="SlidingDrawer">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.SlidingDrawer</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SlidingDrawer">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewGroup">
        <xs:attribute ref="android:allowSingleTap" />
        <xs:attribute ref="android:animateOnClick" />
        <xs:attribute ref="android:bottomOffset" />
        <xs:attribute ref="android:content" />
        <xs:attribute ref="android:handle" />
        <xs:attribute ref="android:orientation" />
        <xs:attribute ref="android:topOffset" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Space" type="Space">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.Space</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Space">
    <xs:complexContent mixed="false">
      <xs:extension base="View" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Spinner" type="Spinner">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.Spinner</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Spinner">
    <xs:complexContent mixed="false">
      <xs:extension base="AbsSpinner">
        <xs:attribute ref="android:dropDownHorizontalOffset" />
        <xs:attribute ref="android:dropDownSelector" />
        <xs:attribute ref="android:dropDownVerticalOffset" />
        <xs:attribute ref="android:dropDownWidth" />
        <xs:attribute ref="android:gravity" />
        <xs:attribute ref="android:popupBackground" />
        <xs:attribute ref="android:prompt" />
        <xs:attribute ref="android:spinnerMode" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="StackView" type="StackView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.StackView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="StackView">
    <xs:complexContent mixed="false">
      <xs:extension base="AdapterViewAnimator" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Switch" type="Switch">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.Switch</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Switch">
    <xs:complexContent mixed="false">
      <xs:extension base="CompoundButton">
        <xs:attribute ref="android:switchMinWidth" />
        <xs:attribute ref="android:switchPadding" />
        <xs:attribute ref="android:switchTextAppearance" />
        <xs:attribute ref="android:textOff" />
        <xs:attribute ref="android:textOn" />
        <xs:attribute ref="android:thumb" />
        <xs:attribute ref="android:thumbTextPadding" />
        <xs:attribute ref="android:track" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="TabHost" type="TabHost">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.TabHost</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="TabHost">
    <xs:complexContent mixed="false">
      <xs:extension base="FrameLayout" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="TabWidget" type="TabWidget">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.TabWidget</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="TabWidget">
    <xs:complexContent mixed="false">
      <xs:extension base="LinearLayout">
        <xs:attribute ref="android:divider" />
        <xs:attribute ref="android:tabStripEnabled" />
        <xs:attribute ref="android:tabStripLeft" />
        <xs:attribute ref="android:tabStripRight" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="TableLayout" type="TableLayout">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.TableLayout</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="TableLayout">
    <xs:complexContent mixed="false">
      <xs:extension base="LinearLayout">
        <xs:attribute ref="android:collapseColumns" />
        <xs:attribute ref="android:shrinkColumns" />
        <xs:attribute ref="android:stretchColumns" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="TableRow" type="TableRow">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.TableRow</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="TableRow">
    <xs:complexContent mixed="false">
      <xs:extension base="LinearLayout" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="TextSwitcher" type="TextSwitcher">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.TextSwitcher</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="TextSwitcher">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewSwitcher" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="TimePicker" type="TimePicker">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.TimePicker</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="TimePicker">
    <xs:complexContent mixed="false">
      <xs:extension base="FrameLayout" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ToggleButton" type="ToggleButton">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ToggleButton</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ToggleButton">
    <xs:complexContent mixed="false">
      <xs:extension base="CompoundButton">
        <xs:attribute ref="android:disabledAlpha" />
        <xs:attribute ref="android:textOff" />
        <xs:attribute ref="android:textOn" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="TwoLineListItem" type="TwoLineListItem">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.TwoLineListItem</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="TwoLineListItem">
    <xs:complexContent mixed="false">
      <xs:extension base="RelativeLayout">
        <xs:attribute ref="android:mode" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="VideoView" type="VideoView">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.VideoView</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="VideoView">
    <xs:complexContent mixed="false">
      <xs:extension base="SurfaceView" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ViewAnimator" type="ViewAnimator">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ViewAnimator</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ViewAnimator">
    <xs:complexContent mixed="false">
      <xs:extension base="FrameLayout">
        <xs:attribute ref="android:animateFirstView" />
        <xs:attribute ref="android:inAnimation" />
        <xs:attribute ref="android:outAnimation" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ViewFlipper" type="ViewFlipper">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ViewFlipper</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ViewFlipper">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewAnimator">
        <xs:attribute ref="android:autoStart" />
        <xs:attribute ref="android:flipInterval" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ViewSwitcher" type="ViewSwitcher">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ViewSwitcher</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ViewSwitcher">
    <xs:complexContent mixed="false">
      <xs:extension base="ViewAnimator" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ZoomButton" type="ZoomButton">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ZoomButton</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ZoomButton">
    <xs:complexContent mixed="false">
      <xs:extension base="ImageButton" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ZoomControls" type="ZoomControls">
    <xs:annotation>
      <xs:documentation>Runtime Type: Android.Widget.ZoomControls</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ZoomControls">
    <xs:complexContent mixed="false">
      <xs:extension base="LinearLayout" />
    </xs:complexContent>
</xs:complexType>

    <xs:attribute name="android:cacheColorHint" type="xs:string" />
<xs:attribute name="android:choiceMode" type="xs:string" />
<xs:attribute name="android:drawSelectorOnTop" type="xs:string" />
<xs:attribute name="android:fastScrollAlwaysVisible" type="xs:string" />
<xs:attribute name="android:fastScrollEnabled" type="xs:string" />
<xs:attribute name="android:listSelector" type="xs:string" />
<xs:attribute name="android:scrollingCache" type="xs:string" />
<xs:attribute name="android:smoothScrollbar" type="xs:string" />
<xs:attribute name="android:stackFromBottom" type="xs:string" />
<xs:attribute name="android:textFilterEnabled" type="xs:string" />
<xs:attribute name="android:transcriptMode" type="xs:string" />
<xs:attribute name="android:entries" type="xs:string" />
<xs:attribute name="android:layout_x" type="xs:string" />
<xs:attribute name="android:layout_y" type="xs:string" />
<xs:attribute name="android:factor" type="xs:string" />
<xs:attribute name="android:accessibilityEventTypes" type="xs:string" />
<xs:attribute name="android:accessibilityFeedbackType" type="xs:string" />
<xs:attribute name="android:accessibilityFlags" type="xs:string" />
<xs:attribute name="android:canRetrieveWindowContent" type="xs:string" />
<xs:attribute name="android:description" type="xs:string" />
<xs:attribute name="android:notificationTimeout" type="xs:string" />
<xs:attribute name="android:packageNames" type="xs:string" />
<xs:attribute name="android:settingsActivity" type="xs:string" />
<xs:attribute name="android:accountPreferences" type="xs:string" />
<xs:attribute name="android:accountType" type="xs:string" />
<xs:attribute name="android:customTokens" type="xs:string" />
<xs:attribute name="android:icon" type="xs:string" />
<xs:attribute name="android:label" type="xs:string" />
<xs:attribute name="android:smallIcon" type="xs:string" />
<xs:attribute name="android:background" type="xs:string" />
<xs:attribute name="android:backgroundSplit" type="xs:string" />
<xs:attribute name="android:backgroundStacked" type="xs:string" />
<xs:attribute name="android:customNavigationLayout" type="xs:string" />
<xs:attribute name="android:displayOptions" type="xs:string" />
<xs:attribute name="android:divider" type="xs:string" />
<xs:attribute name="android:height" type="xs:string" />
<xs:attribute name="android:homeLayout" type="xs:string" />
<xs:attribute name="android:indeterminateProgressStyle" type="xs:string" />
<xs:attribute name="android:itemPadding" type="xs:string" />
<xs:attribute name="android:logo" type="xs:string" />
<xs:attribute name="android:navigationMode" type="xs:string" />
<xs:attribute name="android:progressBarPadding" type="xs:string" />
<xs:attribute name="android:progressBarStyle" type="xs:string" />
<xs:attribute name="android:subtitle" type="xs:string" />
<xs:attribute name="android:subtitleTextStyle" type="xs:string" />
<xs:attribute name="android:title" type="xs:string" />
<xs:attribute name="android:titleTextStyle" type="xs:string" />
<xs:attribute name="android:layout_gravity">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="bottom" />
        <xs:enumeration value="center" />
        <xs:enumeration value="center_horizontal" />
        <xs:enumeration value="center_vertical" />
        <xs:enumeration value="clip_horizontal" />
        <xs:enumeration value="clip_vertical" />
        <xs:enumeration value="fill" />
        <xs:enumeration value="fill_horizontal" />
        <xs:enumeration value="fill_vertical" />
        <xs:enumeration value="left" />
        <xs:enumeration value="right" />
        <xs:enumeration value="top" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:animateFirstView" type="xs:string" />
<xs:attribute name="android:inAnimation" type="xs:string" />
<xs:attribute name="android:loopViews" type="xs:string" />
<xs:attribute name="android:outAnimation" type="xs:string" />
<xs:attribute name="android:autoStart" type="xs:string" />
<xs:attribute name="android:flipInterval" type="xs:string" />
<xs:attribute name="android:bottomBright" type="xs:string" />
<xs:attribute name="android:bottomDark" type="xs:string" />
<xs:attribute name="android:bottomMedium" type="xs:string" />
<xs:attribute name="android:centerBright" type="xs:string" />
<xs:attribute name="android:centerDark" type="xs:string" />
<xs:attribute name="android:centerMedium" type="xs:string" />
<xs:attribute name="android:fullBright" type="xs:string" />
<xs:attribute name="android:fullDark" type="xs:string" />
<xs:attribute name="android:layout" type="xs:string" />
<xs:attribute name="android:topBright" type="xs:string" />
<xs:attribute name="android:topDark" type="xs:string" />
<xs:attribute name="android:fromAlpha" type="xs:string" />
<xs:attribute name="android:toAlpha" type="xs:string" />
<xs:attribute name="android:dial" type="xs:string" />
<xs:attribute name="android:hand_hour" type="xs:string" />
<xs:attribute name="android:hand_minute" type="xs:string" />
<xs:attribute name="android:installLocation" type="xs:string" />
<xs:attribute name="android:sharedUserId" type="xs:string" />
<xs:attribute name="android:sharedUserLabel" type="xs:string" />
<xs:attribute name="android:versionCode" type="xs:string" />
<xs:attribute name="android:versionName" type="xs:string" />
<xs:attribute name="android:name" type="xs:string" />
<xs:attribute name="android:allowTaskReparenting" type="xs:string" />
<xs:attribute name="android:alwaysRetainTaskState" type="xs:string" />
<xs:attribute name="android:clearTaskOnLaunch" type="xs:string" />
<xs:attribute name="android:configChanges" type="xs:string" />
<xs:attribute name="android:enabled" type="xs:string" />
<xs:attribute name="android:excludeFromRecents" type="xs:string" />
<xs:attribute name="android:exported" type="xs:string" />
<xs:attribute name="android:finishOnCloseSystemDialogs" type="xs:string" />
<xs:attribute name="android:finishOnTaskLaunch" type="xs:string" />
<xs:attribute name="android:hardwareAccelerated" type="xs:string" />
<xs:attribute name="android:immersive" type="xs:string" />
<xs:attribute name="android:launchMode" type="xs:string" />
<xs:attribute name="android:multiprocess" type="xs:string" />
<xs:attribute name="android:noHistory" type="xs:string" />
<xs:attribute name="android:permission" type="xs:string" />
<xs:attribute name="android:process" type="xs:string" />
<xs:attribute name="android:screenOrientation" type="xs:string" />
<xs:attribute name="android:stateNotNeeded" type="xs:string" />
<xs:attribute name="android:taskAffinity" type="xs:string" />
<xs:attribute name="android:theme" type="xs:string" />
<xs:attribute name="android:uiOptions" type="xs:string" />
<xs:attribute name="android:windowSoftInputMode" type="xs:string" />
<xs:attribute name="android:targetActivity" type="xs:string" />
<xs:attribute name="android:allowBackup" type="xs:string" />
<xs:attribute name="android:allowClearUserData" type="xs:string" />
<xs:attribute name="android:backupAgent" type="xs:string" />
<xs:attribute name="android:debuggable" type="xs:string" />
<xs:attribute name="android:hasCode" type="xs:string" />
<xs:attribute name="android:killAfterRestore" type="xs:string" />
<xs:attribute name="android:largeHeap" type="xs:string" />
<xs:attribute name="android:manageSpaceActivity" type="xs:string" />
<xs:attribute name="android:persistent" type="xs:string" />
<xs:attribute name="android:restoreAnyVersion" type="xs:string" />
<xs:attribute name="android:restoreNeedsApplication" type="xs:string" />
<xs:attribute name="android:testOnly" type="xs:string" />
<xs:attribute name="android:vmSafeMode" type="xs:string" />
<xs:attribute name="android:screenDensity" type="xs:string" />
<xs:attribute name="android:screenSize" type="xs:string" />
<xs:attribute name="android:host" type="xs:string" />
<xs:attribute name="android:mimeType" type="xs:string" />
<xs:attribute name="android:path" type="xs:string" />
<xs:attribute name="android:pathPattern" type="xs:string" />
<xs:attribute name="android:pathPrefix" type="xs:string" />
<xs:attribute name="android:port" type="xs:string" />
<xs:attribute name="android:scheme" type="xs:string" />
<xs:attribute name="android:functionalTest" type="xs:string" />
<xs:attribute name="android:handleProfiling" type="xs:string" />
<xs:attribute name="android:targetPackage" type="xs:string" />
<xs:attribute name="android:priority" type="xs:string" />
<xs:attribute name="android:resource" type="xs:string" />
<xs:attribute name="android:value" type="xs:string" />
<xs:attribute name="android:publicKey" type="xs:string" />
<xs:attribute name="android:readPermission" type="xs:string" />
<xs:attribute name="android:writePermission" type="xs:string" />
<xs:attribute name="android:permissionGroup" type="xs:string" />
<xs:attribute name="android:protectionLevel" type="xs:string" />
<xs:attribute name="android:authorities" type="xs:string" />
<xs:attribute name="android:grantUriPermissions" type="xs:string" />
<xs:attribute name="android:initOrder" type="xs:string" />
<xs:attribute name="android:syncable" type="xs:string" />
<xs:attribute name="android:stopWithTask" type="xs:string" />
<xs:attribute name="android:anyDensity" type="xs:string" />
<xs:attribute name="android:compatibleWidthLimitDp" type="xs:string" />
<xs:attribute name="android:largeScreens" type="xs:string" />
<xs:attribute name="android:largestWidthLimitDp" type="xs:string" />
<xs:attribute name="android:normalScreens" type="xs:string" />
<xs:attribute name="android:requiresSmallestWidthDp" type="xs:string" />
<xs:attribute name="android:resizeable" type="xs:string" />
<xs:attribute name="android:smallScreens" type="xs:string" />
<xs:attribute name="android:xlargeScreens" type="xs:string" />
<xs:attribute name="android:reqFiveWayNav" type="xs:string" />
<xs:attribute name="android:reqHardKeyboard" type="xs:string" />
<xs:attribute name="android:reqKeyboardType" type="xs:string" />
<xs:attribute name="android:reqNavigation" type="xs:string" />
<xs:attribute name="android:reqTouchScreen" type="xs:string" />
<xs:attribute name="android:glEsVersion" type="xs:string" />
<xs:attribute name="android:required" type="xs:string" />
<xs:attribute name="android:maxSdkVersion" type="xs:string" />
<xs:attribute name="android:minSdkVersion" type="xs:string" />
<xs:attribute name="android:targetSdkVersion" type="xs:string" />
<xs:attribute name="android:drawable" type="xs:string" />
<xs:attribute name="android:pivotX" type="xs:string" />
<xs:attribute name="android:pivotY" type="xs:string" />
<xs:attribute name="android:visible" type="xs:string" />
<xs:attribute name="android:detachWallpaper" type="xs:string" />
<xs:attribute name="android:duration" type="xs:string" />
<xs:attribute name="android:fillAfter" type="xs:string" />
<xs:attribute name="android:fillBefore" type="xs:string" />
<xs:attribute name="android:fillEnabled" type="xs:string" />
<xs:attribute name="android:interpolator" type="xs:string" />
<xs:attribute name="android:repeatCount" type="xs:string" />
<xs:attribute name="android:repeatMode" type="xs:string" />
<xs:attribute name="android:startOffset" type="xs:string" />
<xs:attribute name="android:zAdjustment" type="xs:string" />
<xs:attribute name="android:oneshot" type="xs:string" />
<xs:attribute name="android:variablePadding" type="xs:string" />
<xs:attribute name="android:shareInterpolator" type="xs:string" />
<xs:attribute name="android:valueFrom" type="xs:string" />
<xs:attribute name="android:valueTo" type="xs:string" />
<xs:attribute name="android:valueType" type="xs:string" />
<xs:attribute name="android:ordering" type="xs:string" />
<xs:attribute name="android:tension" type="xs:string" />
<xs:attribute name="android:extraTension" type="xs:string" />
<xs:attribute name="android:autoAdvanceViewId" type="xs:string" />
<xs:attribute name="android:configure" type="xs:string" />
<xs:attribute name="android:initialLayout" type="xs:string" />
<xs:attribute name="android:minHeight" type="xs:string" />
<xs:attribute name="android:minResizeHeight" type="xs:string" />
<xs:attribute name="android:minResizeWidth" type="xs:string" />
<xs:attribute name="android:minWidth" type="xs:string" />
<xs:attribute name="android:previewImage" type="xs:string" />
<xs:attribute name="android:resizeMode" type="xs:string" />
<xs:attribute name="android:updatePeriodMillis" type="xs:string" />
<xs:attribute name="android:completionHint" type="xs:string" />
<xs:attribute name="android:completionHintView" type="xs:string" />
<xs:attribute name="android:completionThreshold" type="xs:string" />
<xs:attribute name="android:dropDownAnchor" type="xs:string" />
<xs:attribute name="android:dropDownHeight" type="xs:string" />
<xs:attribute name="android:dropDownHorizontalOffset" type="xs:string" />
<xs:attribute name="android:dropDownSelector" type="xs:string" />
<xs:attribute name="android:dropDownVerticalOffset" type="xs:string" />
<xs:attribute name="android:dropDownWidth" type="xs:string" />
<xs:attribute name="android:inputType" type="xs:string" />
<xs:attribute name="android:antialias" type="xs:string" />
<xs:attribute name="android:dither" type="xs:string" />
<xs:attribute name="android:filter" type="xs:string" />
<xs:attribute name="android:gravity">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="bottom" />
        <xs:enumeration value="center" />
        <xs:enumeration value="center_horizontal" />
        <xs:enumeration value="center_vertical" />
        <xs:enumeration value="clip_horizontal" />
        <xs:enumeration value="clip_vertical" />
        <xs:enumeration value="fill" />
        <xs:enumeration value="fill_horizontal" />
        <xs:enumeration value="fill_vertical" />
        <xs:enumeration value="left" />
        <xs:enumeration value="right" />
        <xs:enumeration value="top" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:src" type="xs:string" />
<xs:attribute name="android:tileMode" type="xs:string" />
<xs:attribute name="android:dateTextAppearance" type="xs:string" />
<xs:attribute name="android:firstDayOfWeek" type="xs:string" />
<xs:attribute name="android:focusedMonthDateColor" type="xs:string" />
<xs:attribute name="android:maxDate" type="xs:string" />
<xs:attribute name="android:minDate" type="xs:string" />
<xs:attribute name="android:selectedDateVerticalBar" type="xs:string" />
<xs:attribute name="android:selectedWeekBackgroundColor" type="xs:string" />
<xs:attribute name="android:showWeekNumber" type="xs:string" />
<xs:attribute name="android:shownWeekCount" type="xs:string" />
<xs:attribute name="android:unfocusedMonthDateColor" type="xs:string" />
<xs:attribute name="android:weekDayTextAppearance" type="xs:string" />
<xs:attribute name="android:weekNumberColor" type="xs:string" />
<xs:attribute name="android:weekSeparatorLineColor" type="xs:string" />
<xs:attribute name="android:disableDependentsState" type="xs:string" />
<xs:attribute name="android:summaryOff" type="xs:string" />
<xs:attribute name="android:summaryOn" type="xs:string" />
<xs:attribute name="android:checkMark" type="xs:string" />
<xs:attribute name="android:checked" type="xs:string" />
<xs:attribute name="android:format" type="xs:string" />
<xs:attribute name="android:clipOrientation" type="xs:string" />
<xs:attribute name="android:color" type="xs:string" />
<xs:attribute name="android:button" type="xs:string" />
<xs:attribute name="android:allContactsName" type="xs:string" />
<xs:attribute name="android:detailColumn" type="xs:string" />
<xs:attribute name="android:detailSocialSummary" type="xs:string" />
<xs:attribute name="android:summaryColumn" type="xs:string" />
<xs:attribute name="android:cycles" type="xs:string" />
<xs:attribute name="android:dialogIcon" type="xs:string" />
<xs:attribute name="android:dialogLayout" type="xs:string" />
<xs:attribute name="android:dialogMessage" type="xs:string" />
<xs:attribute name="android:dialogTitle" type="xs:string" />
<xs:attribute name="android:negativeButtonText" type="xs:string" />
<xs:attribute name="android:positiveButtonText" type="xs:string" />
<xs:attribute name="android:bottomLeftRadius" type="xs:string" />
<xs:attribute name="android:bottomRightRadius" type="xs:string" />
<xs:attribute name="android:radius" type="xs:string" />
<xs:attribute name="android:topLeftRadius" type="xs:string" />
<xs:attribute name="android:topRightRadius" type="xs:string" />
<xs:attribute name="android:state_accelerated" type="xs:string" />
<xs:attribute name="android:state_activated" type="xs:string" />
<xs:attribute name="android:state_active" type="xs:string" />
<xs:attribute name="android:state_checkable" type="xs:string" />
<xs:attribute name="android:state_checked" type="xs:string" />
<xs:attribute name="android:state_drag_can_accept" type="xs:string" />
<xs:attribute name="android:state_drag_hovered" type="xs:string" />
<xs:attribute name="android:state_enabled" type="xs:string" />
<xs:attribute name="android:state_first" type="xs:string" />
<xs:attribute name="android:state_focused" type="xs:string" />
<xs:attribute name="android:state_hovered" type="xs:string" />
<xs:attribute name="android:state_last" type="xs:string" />
<xs:attribute name="android:state_middle" type="xs:string" />
<xs:attribute name="android:state_pressed" type="xs:string" />
<xs:attribute name="android:state_selected" type="xs:string" />
<xs:attribute name="android:state_single" type="xs:string" />
<xs:attribute name="android:state_window_focused" type="xs:string" />
<xs:attribute name="android:state_empty" type="xs:string" />
<xs:attribute name="android:state_expanded" type="xs:string" />
<xs:attribute name="android:childDivider" type="xs:string" />
<xs:attribute name="android:childIndicator" type="xs:string" />
<xs:attribute name="android:childIndicatorLeft" type="xs:string" />
<xs:attribute name="android:childIndicatorRight" type="xs:string" />
<xs:attribute name="android:groupIndicator" type="xs:string" />
<xs:attribute name="android:indicatorLeft" type="xs:string" />
<xs:attribute name="android:indicatorRight" type="xs:string" />
<xs:attribute name="android:id" type="xs:string" />
<xs:attribute name="android:tag" type="xs:string" />
<xs:attribute name="android:fragmentCloseEnterAnimation" type="xs:string" />
<xs:attribute name="android:fragmentCloseExitAnimation" type="xs:string" />
<xs:attribute name="android:fragmentFadeEnterAnimation" type="xs:string" />
<xs:attribute name="android:fragmentFadeExitAnimation" type="xs:string" />
<xs:attribute name="android:fragmentOpenEnterAnimation" type="xs:string" />
<xs:attribute name="android:fragmentOpenExitAnimation" type="xs:string" />
<xs:attribute name="android:foreground" type="xs:string" />
<xs:attribute name="android:foregroundGravity" type="xs:string" />
<xs:attribute name="android:measureAllChildren" type="xs:string" />
<xs:attribute name="android:animationDuration" type="xs:string" />
<xs:attribute name="android:spacing" type="xs:string" />
<xs:attribute name="android:unselectedAlpha" type="xs:string" />
<xs:attribute name="android:eventsInterceptionEnabled" type="xs:string" />
<xs:attribute name="android:fadeDuration" type="xs:string" />
<xs:attribute name="android:fadeEnabled" type="xs:string" />
<xs:attribute name="android:fadeOffset" type="xs:string" />
<xs:attribute name="android:gestureColor" type="xs:string" />
<xs:attribute name="android:gestureStrokeAngleThreshold" type="xs:string" />
<xs:attribute name="android:gestureStrokeLengthThreshold" type="xs:string" />
<xs:attribute name="android:gestureStrokeSquarenessThreshold" type="xs:string" />
<xs:attribute name="android:gestureStrokeType" type="xs:string" />
<xs:attribute name="android:gestureStrokeWidth" type="xs:string" />
<xs:attribute name="android:orientation">
  
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="horizontal" />
        <xs:enumeration value="vertical" />
      </xs:restriction>
    </xs:simpleType>
  
</xs:attribute>
<xs:attribute name="android:uncertainGestureColor" type="xs:string" />
<xs:attribute name="android:innerRadius" type="xs:string" />
<xs:attribute name="android:innerRadiusRatio" type="xs:string" />
<xs:attribute name="android:shape" type="xs:string" />
<xs:attribute name="android:thickness" type="xs:string" />
<xs:attribute name="android:thicknessRatio" type="xs:string" />
<xs:attribute name="android:useLevel" type="xs:string" />
<xs:attribute name="android:angle" type="xs:string" />
<xs:attribute name="android:centerColor" type="xs:string" />
<xs:attribute name="android:centerX" type="xs:string" />
<xs:attribute name="android:centerY" type="xs:string" />
<xs:attribute name="android:endColor" type="xs:string" />
<xs:attribute name="android:gradientRadius" type="xs:string" />
<xs:attribute name="android:startColor" type="xs:string" />
<xs:attribute name="android:type" type="xs:string" />
<xs:attribute name="android:bottom" type="xs:string" />
<xs:attribute name="android:left" type="xs:string" />
<xs:attribute name="android:right" type="xs:string" />
<xs:attribute name="android:top" type="xs:string" />
<xs:attribute name="android:width" type="xs:string" />
<xs:attribute name="android:dashGap" type="xs:string" />
<xs:attribute name="android:dashWidth" type="xs:string" />
<xs:attribute name="android:alignmentMode" type="xs:string" />
<xs:attribute name="android:columnCount" type="xs:string" />
<xs:attribute name="android:columnOrderPreserved" type="xs:string" />
<xs:attribute name="android:rowCount" type="xs:string" />
<xs:attribute name="android:rowOrderPreserved" type="xs:string" />
<xs:attribute name="android:useDefaultMargins" type="xs:string" />
<xs:attribute name="android:columnDelay" type="xs:string" />
<xs:attribute name="android:direction" type="xs:string" />
<xs:attribute name="android:directionPriority" type="xs:string" />
<xs:attribute name="android:rowDelay" type="xs:string" />
<xs:attribute name="android:layout_column" type="xs:string" />
<xs:attribute name="android:layout_columnSpan" type="xs:string" />
<xs:attribute name="android:layout_row" type="xs:string" />
<xs:attribute name="android:layout_rowSpan" type="xs:string" />
<xs:attribute name="android:columnWidth" type="xs:string" />
<xs:attribute name="android:horizontalSpacing" type="xs:string" />
<xs:attribute name="android:numColumns" type="xs:string" />
<xs:attribute name="android:stretchMode" type="xs:string" />
<xs:attribute name="android:verticalSpacing" type="xs:string" />
<xs:attribute name="android:fillViewport" type="xs:string" />
<xs:attribute name="android:maxItemsPerRow" type="xs:string" />
<xs:attribute name="android:maxRows" type="xs:string" />
<xs:attribute name="android:moreIcon" type="xs:string" />
<xs:attribute name="android:rowHeight" type="xs:string" />
<xs:attribute name="android:adjustViewBounds" type="xs:string" />
<xs:attribute name="android:baseline" type="xs:string" />
<xs:attribute name="android:baselineAlignBottom" type="xs:string" />
<xs:attribute name="android:cropToPadding" type="xs:string" />
<xs:attribute name="android:maxHeight" type="xs:string" />
<xs:attribute name="android:maxWidth" type="xs:string" />
<xs:attribute name="android:scaleType" type="xs:string" />
<xs:attribute name="android:tint" type="xs:string" />
<xs:attribute name="android:isDefault" type="xs:string" />
<xs:attribute name="android:imeExtractEnterAnimation" type="xs:string" />
<xs:attribute name="android:imeExtractExitAnimation" type="xs:string" />
<xs:attribute name="android:imeFullscreenBackground" type="xs:string" />
<xs:attribute name="android:imeSubtypeExtraValue" type="xs:string" />
<xs:attribute name="android:imeSubtypeLocale" type="xs:string" />
<xs:attribute name="android:imeSubtypeMode" type="xs:string" />
<xs:attribute name="android:isAuxiliary" type="xs:string" />
<xs:attribute name="android:overridesImplicitlyEnabledSubtype" type="xs:string" />
<xs:attribute name="android:insetBottom" type="xs:string" />
<xs:attribute name="android:insetLeft" type="xs:string" />
<xs:attribute name="android:insetRight" type="xs:string" />
<xs:attribute name="android:insetTop" type="xs:string" />
<xs:attribute name="android:action" type="xs:string" />
<xs:attribute name="android:data" type="xs:string" />
<xs:attribute name="android:targetClass" type="xs:string" />
<xs:attribute name="android:horizontalGap" type="xs:string" />
<xs:attribute name="android:keyHeight" type="xs:string" />
<xs:attribute name="android:keyWidth" type="xs:string" />
<xs:attribute name="android:verticalGap" type="xs:string" />
<xs:attribute name="android:keyBackground" type="xs:string" />
<xs:attribute name="android:keyPreviewHeight" type="xs:string" />
<xs:attribute name="android:keyPreviewLayout" type="xs:string" />
<xs:attribute name="android:keyPreviewOffset" type="xs:string" />
<xs:attribute name="android:keyTextColor" type="xs:string" />
<xs:attribute name="android:keyTextSize" type="xs:string" />
<xs:attribute name="android:labelTextSize" type="xs:string" />
<xs:attribute name="android:popupLayout" type="xs:string" />
<xs:attribute name="android:shadowColor" type="xs:string" />
<xs:attribute name="android:shadowRadius" type="xs:string" />
<xs:attribute name="android:verticalCorrection" type="xs:string" />
<xs:attribute name="android:state_long_pressable" type="xs:string" />
<xs:attribute name="android:codes" type="xs:string" />
<xs:attribute name="android:iconPreview" type="xs:string" />
<xs:attribute name="android:isModifier" type="xs:string" />
<xs:attribute name="android:isRepeatable" type="xs:string" />
<xs:attribute name="android:isSticky" type="xs:string" />
<xs:attribute name="android:keyEdgeFlags" type="xs:string" />
<xs:attribute name="android:keyIcon" type="xs:string" />
<xs:attribute name="android:keyLabel" type="xs:string" />
<xs:attribute name="android:keyOutputText" type="xs:string" />
<xs:attribute name="android:keyboardMode" type="xs:string" />
<xs:attribute name="android:popupCharacters" type="xs:string" />
<xs:attribute name="android:popupKeyboard" type="xs:string" />
<xs:attribute name="android:rowEdgeFlags" type="xs:string" />
<xs:attribute name="android:opacity" type="xs:string" />
<xs:attribute name="android:animation" type="xs:string" />
<xs:attribute name="android:animationOrder" type="xs:string" />
<xs:attribute name="android:delay" type="xs:string" />
<xs:attribute name="android:maxLevel" type="xs:string" />
<xs:attribute name="android:minLevel" type="xs:string" />
<xs:attribute name="android:baselineAligned">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:baselineAlignedChildIndex" type="xs:string" />
<xs:attribute name="android:dividerPadding" type="xs:string" />
<xs:attribute name="android:measureWithLargestChild" type="xs:string" />
<xs:attribute name="android:showDividers" type="xs:string" />
<xs:attribute name="android:weightSum" type="xs:string" />
<xs:attribute name="android:layout_height" type="xs:string" />
<xs:attribute name="android:layout_weight" type="xs:string" />
<xs:attribute name="android:layout_width" type="xs:string" />
<xs:attribute name="android:entryValues" type="xs:string" />
<xs:attribute name="android:dividerHeight" type="xs:string" />
<xs:attribute name="android:footerDividersEnabled" type="xs:string" />
<xs:attribute name="android:headerDividersEnabled" type="xs:string" />
<xs:attribute name="android:overScrollFooter" type="xs:string" />
<xs:attribute name="android:overScrollHeader" type="xs:string" />
<xs:attribute name="android:apiKey" type="xs:string" />
<xs:attribute name="android:checkableBehavior" type="xs:string" />
<xs:attribute name="android:menuCategory" type="xs:string" />
<xs:attribute name="android:orderInCategory" type="xs:string" />
<xs:attribute name="android:actionLayout" type="xs:string" />
<xs:attribute name="android:actionProviderClass" type="xs:string" />
<xs:attribute name="android:actionViewClass" type="xs:string" />
<xs:attribute name="android:alphabeticShortcut" type="xs:string" />
<xs:attribute name="android:checkable" type="xs:string" />
<xs:attribute name="android:numericShortcut" type="xs:string" />
<xs:attribute name="android:onClick" type="xs:string" />
<xs:attribute name="android:showAsAction" type="xs:string" />
<xs:attribute name="android:titleCondensed" type="xs:string" />
<xs:attribute name="android:headerBackground" type="xs:string" />
<xs:attribute name="android:horizontalDivider" type="xs:string" />
<xs:attribute name="android:itemBackground" type="xs:string" />
<xs:attribute name="android:itemIconDisabledAlpha" type="xs:string" />
<xs:attribute name="android:itemTextAppearance" type="xs:string" />
<xs:attribute name="android:verticalDivider" type="xs:string" />
<xs:attribute name="android:windowAnimationStyle" type="xs:string" />
<xs:attribute name="android:directionDescriptions" type="xs:string" />
<xs:attribute name="android:targetDescriptions" type="xs:string" />
<xs:attribute name="android:popupAnimationStyle" type="xs:string" />
<xs:attribute name="android:popupBackground" type="xs:string" />
<xs:attribute name="android:state_above_anchor" type="xs:string" />
<xs:attribute name="android:defaultValue" type="xs:string" />
<xs:attribute name="android:dependency" type="xs:string" />
<xs:attribute name="android:fragment" type="xs:string" />
<xs:attribute name="android:key" type="xs:string" />
<xs:attribute name="android:order" type="xs:string" />
<xs:attribute name="android:selectable" type="xs:string" />
<xs:attribute name="android:shouldDisableView" type="xs:string" />
<xs:attribute name="android:summary" type="xs:string" />
<xs:attribute name="android:widgetLayout" type="xs:string" />
<xs:attribute name="android:orderingFromXml" type="xs:string" />
<xs:attribute name="android:breadCrumbShortTitle" type="xs:string" />
<xs:attribute name="android:breadCrumbTitle" type="xs:string" />
<xs:attribute name="android:animationResolution" type="xs:string" />
<xs:attribute name="android:indeterminate" type="xs:string" />
<xs:attribute name="android:indeterminateBehavior" type="xs:string" />
<xs:attribute name="android:indeterminateDrawable" type="xs:string" />
<xs:attribute name="android:indeterminateDuration" type="xs:string" />
<xs:attribute name="android:indeterminateOnly" type="xs:string" />
<xs:attribute name="android:max" type="xs:string" />
<xs:attribute name="android:progress" type="xs:string" />
<xs:attribute name="android:progressDrawable" type="xs:string" />
<xs:attribute name="android:secondaryProgress" type="xs:string" />
<xs:attribute name="android:propertyName" type="xs:string" />
<xs:attribute name="android:checkedButton" type="xs:string" />
<xs:attribute name="android:isIndicator" type="xs:string" />
<xs:attribute name="android:numStars" type="xs:string" />
<xs:attribute name="android:rating" type="xs:string" />
<xs:attribute name="android:stepSize" type="xs:string" />
<xs:attribute name="android:ignoreGravity" type="xs:string" />
<xs:attribute name="android:layout_above" type="xs:string" />
<xs:attribute name="android:layout_alignBaseline" type="xs:string" />
<xs:attribute name="android:layout_alignBottom" type="xs:string" />
<xs:attribute name="android:layout_alignLeft" type="xs:string" />
<xs:attribute name="android:layout_alignParentBottom" type="xs:string" />
<xs:attribute name="android:layout_alignParentLeft" type="xs:string" />
<xs:attribute name="android:layout_alignParentRight" type="xs:string" />
<xs:attribute name="android:layout_alignParentTop" type="xs:string" />
<xs:attribute name="android:layout_alignRight" type="xs:string" />
<xs:attribute name="android:layout_alignTop" type="xs:string" />
<xs:attribute name="android:layout_alignWithParentIfMissing" type="xs:string" />
<xs:attribute name="android:layout_below" type="xs:string" />
<xs:attribute name="android:layout_centerHorizontal" type="xs:string" />
<xs:attribute name="android:layout_centerInParent" type="xs:string" />
<xs:attribute name="android:layout_centerVertical" type="xs:string" />
<xs:attribute name="android:layout_toLeftOf" type="xs:string" />
<xs:attribute name="android:layout_toRightOf" type="xs:string" />
<xs:attribute name="android:ringtoneType" type="xs:string" />
<xs:attribute name="android:showDefault" type="xs:string" />
<xs:attribute name="android:showSilent" type="xs:string" />
<xs:attribute name="android:fromDegrees" type="xs:string" />
<xs:attribute name="android:toDegrees" type="xs:string" />
<xs:attribute name="android:fromXScale" type="xs:string" />
<xs:attribute name="android:fromYScale" type="xs:string" />
<xs:attribute name="android:toXScale" type="xs:string" />
<xs:attribute name="android:toYScale" type="xs:string" />
<xs:attribute name="android:scaleGravity" type="xs:string" />
<xs:attribute name="android:scaleHeight" type="xs:string" />
<xs:attribute name="android:scaleWidth" type="xs:string" />
<xs:attribute name="android:useIntrinsicSizeAsMinimum" type="xs:string" />
<xs:attribute name="android:iconifiedByDefault" type="xs:string" />
<xs:attribute name="android:imeOptions" type="xs:string" />
<xs:attribute name="android:queryHint" type="xs:string" />
<xs:attribute name="android:autoUrlDetect" type="xs:string" />
<xs:attribute name="android:hint" type="xs:string" />
<xs:attribute name="android:includeInGlobalSearch" type="xs:string" />
<xs:attribute name="android:queryAfterZeroResults" type="xs:string" />
<xs:attribute name="android:searchButtonText" type="xs:string" />
<xs:attribute name="android:searchMode" type="xs:string" />
<xs:attribute name="android:searchSettingsDescription" type="xs:string" />
<xs:attribute name="android:searchSuggestAuthority" type="xs:string" />
<xs:attribute name="android:searchSuggestIntentAction" type="xs:string" />
<xs:attribute name="android:searchSuggestIntentData" type="xs:string" />
<xs:attribute name="android:searchSuggestPath" type="xs:string" />
<xs:attribute name="android:searchSuggestSelection" type="xs:string" />
<xs:attribute name="android:searchSuggestThreshold" type="xs:string" />
<xs:attribute name="android:voiceLanguage" type="xs:string" />
<xs:attribute name="android:voiceLanguageModel" type="xs:string" />
<xs:attribute name="android:voiceMaxResults" type="xs:string" />
<xs:attribute name="android:voicePromptText" type="xs:string" />
<xs:attribute name="android:voiceSearchMode" type="xs:string" />
<xs:attribute name="android:keycode" type="xs:string" />
<xs:attribute name="android:queryActionMsg" type="xs:string" />
<xs:attribute name="android:suggestActionMsg" type="xs:string" />
<xs:attribute name="android:suggestActionMsgColumn" type="xs:string" />
<xs:attribute name="android:thumb" type="xs:string" />
<xs:attribute name="android:thumbOffset" type="xs:string" />
<xs:attribute name="android:actionModeCopyDrawable" type="xs:string" />
<xs:attribute name="android:actionModeCutDrawable" type="xs:string" />
<xs:attribute name="android:actionModePasteDrawable" type="xs:string" />
<xs:attribute name="android:actionModeSelectAllDrawable" type="xs:string" />
<xs:attribute name="android:allowSingleTap" type="xs:string" />
<xs:attribute name="android:animateOnClick" type="xs:string" />
<xs:attribute name="android:bottomOffset" type="xs:string" />
<xs:attribute name="android:content" type="xs:string" />
<xs:attribute name="android:handle" type="xs:string" />
<xs:attribute name="android:topOffset" type="xs:string" />
<xs:attribute name="android:subtypeExtraValue" type="xs:string" />
<xs:attribute name="android:subtypeLocale" type="xs:string" />
<xs:attribute name="android:prompt" type="xs:string" />
<xs:attribute name="android:spinnerMode" type="xs:string" />
<xs:attribute name="android:constantSize" type="xs:string" />
<xs:attribute name="android:enterFadeDuration" type="xs:string" />
<xs:attribute name="android:exitFadeDuration" type="xs:string" />
<xs:attribute name="android:switchMinWidth" type="xs:string" />
<xs:attribute name="android:switchPadding" type="xs:string" />
<xs:attribute name="android:switchTextAppearance" type="xs:string" />
<xs:attribute name="android:textOff" type="xs:string" />
<xs:attribute name="android:textOn" type="xs:string" />
<xs:attribute name="android:thumbTextPadding" type="xs:string" />
<xs:attribute name="android:track" type="xs:string" />
<xs:attribute name="android:switchTextOff" type="xs:string" />
<xs:attribute name="android:switchTextOn" type="xs:string" />
<xs:attribute name="android:allowParallelSyncs" type="xs:string" />
<xs:attribute name="android:contentAuthority" type="xs:string" />
<xs:attribute name="android:isAlwaysSyncable" type="xs:string" />
<xs:attribute name="android:supportsUploading" type="xs:string" />
<xs:attribute name="android:userVisible" type="xs:string" />
<xs:attribute name="android:tabStripEnabled" type="xs:string" />
<xs:attribute name="android:tabStripLeft" type="xs:string" />
<xs:attribute name="android:tabStripRight" type="xs:string" />
<xs:attribute name="android:collapseColumns" type="xs:string" />
<xs:attribute name="android:shrinkColumns" type="xs:string" />
<xs:attribute name="android:stretchColumns" type="xs:string" />
<xs:attribute name="android:layout_span" type="xs:string" />
<xs:attribute name="android:textAllCaps" type="xs:string" />
<xs:attribute name="android:textColor" type="xs:string" />
<xs:attribute name="android:textColorHighlight" type="xs:string" />
<xs:attribute name="android:textColorHint" type="xs:string" />
<xs:attribute name="android:textColorLink" type="xs:string" />
<xs:attribute name="android:textSize" type="xs:string" />
<xs:attribute name="android:textStyle" type="xs:string" />
<xs:attribute name="android:typeface" type="xs:string" />
<xs:attribute name="android:autoLink" type="xs:string" />
<xs:attribute name="android:autoText" type="xs:string" />
<xs:attribute name="android:bufferType" type="xs:string" />
<xs:attribute name="android:capitalize" type="xs:string" />
<xs:attribute name="android:cursorVisible" type="xs:string" />
<xs:attribute name="android:digits" type="xs:string" />
<xs:attribute name="android:drawableBottom" type="xs:string" />
<xs:attribute name="android:drawableEnd" type="xs:string" />
<xs:attribute name="android:drawableLeft" type="xs:string" />
<xs:attribute name="android:drawablePadding" type="xs:string" />
<xs:attribute name="android:drawableRight" type="xs:string" />
<xs:attribute name="android:drawableStart" type="xs:string" />
<xs:attribute name="android:drawableTop" type="xs:string" />
<xs:attribute name="android:editable" type="xs:string" />
<xs:attribute name="android:editorExtras" type="xs:string" />
<xs:attribute name="android:ellipsize" type="xs:string" />
<xs:attribute name="android:ems" type="xs:string" />
<xs:attribute name="android:freezesText" type="xs:string" />
<xs:attribute name="android:imeActionId" type="xs:string" />
<xs:attribute name="android:imeActionLabel" type="xs:string" />
<xs:attribute name="android:includeFontPadding" type="xs:string" />
<xs:attribute name="android:inputMethod" type="xs:string" />
<xs:attribute name="android:lineSpacingExtra" type="xs:string" />
<xs:attribute name="android:lineSpacingMultiplier" type="xs:string" />
<xs:attribute name="android:lines" type="xs:string" />
<xs:attribute name="android:linksClickable" type="xs:string" />
<xs:attribute name="android:marqueeRepeatLimit" type="xs:string" />
<xs:attribute name="android:maxEms" type="xs:string" />
<xs:attribute name="android:maxLength" type="xs:string" />
<xs:attribute name="android:maxLines" type="xs:string" />
<xs:attribute name="android:minEms" type="xs:string" />
<xs:attribute name="android:minLines" type="xs:string" />
<xs:attribute name="android:numeric" type="xs:string" />
<xs:attribute name="android:password" type="xs:string" />
<xs:attribute name="android:phoneNumber" type="xs:string" />
<xs:attribute name="android:privateImeOptions" type="xs:string" />
<xs:attribute name="android:scrollHorizontally" type="xs:string" />
<xs:attribute name="android:selectAllOnFocus" type="xs:string" />
<xs:attribute name="android:shadowDx" type="xs:string" />
<xs:attribute name="android:shadowDy" type="xs:string" />
<xs:attribute name="android:singleLine" type="xs:string" />
<xs:attribute name="android:text" type="xs:string" />
<xs:attribute name="android:textAppearance" type="xs:string" />
<xs:attribute name="android:textCursorDrawable" type="xs:string" />
<xs:attribute name="android:textEditNoPasteWindowLayout" type="xs:string" />
<xs:attribute name="android:textEditPasteWindowLayout" type="xs:string" />
<xs:attribute name="android:textEditSideNoPasteWindowLayout" type="xs:string" />
<xs:attribute name="android:textEditSidePasteWindowLayout" type="xs:string" />
<xs:attribute name="android:textEditSuggestionItemLayout" type="xs:string" />
<xs:attribute name="android:textIsSelectable" type="xs:string" />
<xs:attribute name="android:textScaleX" type="xs:string" />
<xs:attribute name="android:textSelectHandle" type="xs:string" />
<xs:attribute name="android:textSelectHandleLeft" type="xs:string" />
<xs:attribute name="android:textSelectHandleRight" type="xs:string" />
<xs:attribute name="android:state_multiline" type="xs:string" />
<xs:attribute name="android:absListViewStyle" type="xs:string" />
<xs:attribute name="android:actionBarDivider" type="xs:string" />
<xs:attribute name="android:actionBarItemBackground" type="xs:string" />
<xs:attribute name="android:actionBarSize" type="xs:string" />
<xs:attribute name="android:actionBarSplitStyle" type="xs:string" />
<xs:attribute name="android:actionBarStyle" type="xs:string" />
<xs:attribute name="android:actionBarTabBarStyle" type="xs:string" />
<xs:attribute name="android:actionBarTabStyle" type="xs:string" />
<xs:attribute name="android:actionBarTabTextStyle" type="xs:string" />
<xs:attribute name="android:actionBarWidgetTheme" type="xs:string" />
<xs:attribute name="android:actionButtonStyle" type="xs:string" />
<xs:attribute name="android:actionDropDownStyle" type="xs:string" />
<xs:attribute name="android:actionMenuTextAppearance" type="xs:string" />
<xs:attribute name="android:actionMenuTextColor" type="xs:string" />
<xs:attribute name="android:actionModeBackground" type="xs:string" />
<xs:attribute name="android:actionModeCloseButtonStyle" type="xs:string" />
<xs:attribute name="android:actionModeCloseDrawable" type="xs:string" />
<xs:attribute name="android:actionModeSplitBackground" type="xs:string" />
<xs:attribute name="android:actionModeStyle" type="xs:string" />
<xs:attribute name="android:actionOverflowButtonStyle" type="xs:string" />
<xs:attribute name="android:activatedBackgroundIndicator" type="xs:string" />
<xs:attribute name="android:alertDialogIcon" type="xs:string" />
<xs:attribute name="android:alertDialogStyle" type="xs:string" />
<xs:attribute name="android:alertDialogTheme" type="xs:string" />
<xs:attribute name="android:autoCompleteTextViewStyle" type="xs:string" />
<xs:attribute name="android:backgroundDimAmount" type="xs:string" />
<xs:attribute name="android:backgroundDimEnabled" type="xs:string" />
<xs:attribute name="android:borderlessButtonStyle" type="xs:string" />
<xs:attribute name="android:buttonBarButtonStyle" type="xs:string" />
<xs:attribute name="android:buttonBarStyle" type="xs:string" />
<xs:attribute name="android:buttonStyle" type="xs:string" />
<xs:attribute name="android:buttonStyleInset" type="xs:string" />
<xs:attribute name="android:buttonStyleSmall" type="xs:string" />
<xs:attribute name="android:buttonStyleToggle" type="xs:string" />
<xs:attribute name="android:calendarViewStyle" type="xs:string" />
<xs:attribute name="android:candidatesTextStyleSpans" type="xs:string" />
<xs:attribute name="android:checkBoxPreferenceStyle" type="xs:string" />
<xs:attribute name="android:checkboxStyle" type="xs:string" />
<xs:attribute name="android:colorActivatedHighlight" type="xs:string" />
<xs:attribute name="android:colorBackground" type="xs:string" />
<xs:attribute name="android:colorBackgroundCacheHint" type="xs:string" />
<xs:attribute name="android:colorFocusedHighlight" type="xs:string" />
<xs:attribute name="android:colorForeground" type="xs:string" />
<xs:attribute name="android:colorForegroundInverse" type="xs:string" />
<xs:attribute name="android:colorLongPressedHighlight" type="xs:string" />
<xs:attribute name="android:colorMultiSelectHighlight" type="xs:string" />
<xs:attribute name="android:colorPressedHighlight" type="xs:string" />
<xs:attribute name="android:datePickerStyle" type="xs:string" />
<xs:attribute name="android:detailsElementBackground" type="xs:string" />
<xs:attribute name="android:dialogPreferenceStyle" type="xs:string" />
<xs:attribute name="android:dialogTheme" type="xs:string" />
<xs:attribute name="android:disabledAlpha" type="xs:string" />
<xs:attribute name="android:dividerHorizontal" type="xs:string" />
<xs:attribute name="android:dividerVertical" type="xs:string" />
<xs:attribute name="android:dropDownHintAppearance" type="xs:string" />
<xs:attribute name="android:dropDownItemStyle" type="xs:string" />
<xs:attribute name="android:dropDownListViewStyle" type="xs:string" />
<xs:attribute name="android:dropDownSpinnerStyle" type="xs:string" />
<xs:attribute name="android:editTextBackground" type="xs:string" />
<xs:attribute name="android:editTextColor" type="xs:string" />
<xs:attribute name="android:editTextPreferenceStyle" type="xs:string" />
<xs:attribute name="android:editTextStyle" type="xs:string" />
<xs:attribute name="android:expandableListPreferredChildIndicatorLeft" type="xs:string" />
<xs:attribute name="android:expandableListPreferredChildIndicatorRight" type="xs:string" />
<xs:attribute name="android:expandableListPreferredChildPaddingLeft" type="xs:string" />
<xs:attribute name="android:expandableListPreferredItemIndicatorLeft" type="xs:string" />
<xs:attribute name="android:expandableListPreferredItemIndicatorRight" type="xs:string" />
<xs:attribute name="android:expandableListPreferredItemPaddingLeft" type="xs:string" />
<xs:attribute name="android:expandableListViewStyle" type="xs:string" />
<xs:attribute name="android:expandableListViewWhiteStyle" type="xs:string" />
<xs:attribute name="android:fastScrollOverlayPosition" type="xs:string" />
<xs:attribute name="android:fastScrollPreviewBackgroundLeft" type="xs:string" />
<xs:attribute name="android:fastScrollPreviewBackgroundRight" type="xs:string" />
<xs:attribute name="android:fastScrollTextColor" type="xs:string" />
<xs:attribute name="android:fastScrollThumbDrawable" type="xs:string" />
<xs:attribute name="android:fastScrollTrackDrawable" type="xs:string" />
<xs:attribute name="android:galleryItemBackground" type="xs:string" />
<xs:attribute name="android:galleryStyle" type="xs:string" />
<xs:attribute name="android:gridViewStyle" type="xs:string" />
<xs:attribute name="android:homeAsUpIndicator" type="xs:string" />
<xs:attribute name="android:horizontalScrollViewStyle" type="xs:string" />
<xs:attribute name="android:imageButtonStyle" type="xs:string" />
<xs:attribute name="android:imageWellStyle" type="xs:string" />
<xs:attribute name="android:listChoiceBackgroundIndicator" type="xs:string" />
<xs:attribute name="android:listChoiceIndicatorMultiple" type="xs:string" />
<xs:attribute name="android:listChoiceIndicatorSingle" type="xs:string" />
<xs:attribute name="android:listDivider" type="xs:string" />
<xs:attribute name="android:listDividerAlertDialog" type="xs:string" />
<xs:attribute name="android:listPopupWindowStyle" type="xs:string" />
<xs:attribute name="android:listPreferredItemHeight" type="xs:string" />
<xs:attribute name="android:listPreferredItemHeightLarge" type="xs:string" />
<xs:attribute name="android:listPreferredItemHeightSmall" type="xs:string" />
<xs:attribute name="android:listPreferredItemPaddingLeft" type="xs:string" />
<xs:attribute name="android:listPreferredItemPaddingRight" type="xs:string" />
<xs:attribute name="android:listSeparatorTextViewStyle" type="xs:string" />
<xs:attribute name="android:listViewStyle" type="xs:string" />
<xs:attribute name="android:listViewWhiteStyle" type="xs:string" />
<xs:attribute name="android:mapViewStyle" type="xs:string" />
<xs:attribute name="android:panelBackground" type="xs:string" />
<xs:attribute name="android:panelColorBackground" type="xs:string" />
<xs:attribute name="android:panelColorForeground" type="xs:string" />
<xs:attribute name="android:panelFullBackground" type="xs:string" />
<xs:attribute name="android:panelTextAppearance" type="xs:string" />
<xs:attribute name="android:popupMenuStyle" type="xs:string" />
<xs:attribute name="android:popupWindowStyle" type="xs:string" />
<xs:attribute name="android:preferenceCategoryStyle" type="xs:string" />
<xs:attribute name="android:preferenceInformationStyle" type="xs:string" />
<xs:attribute name="android:preferenceLayoutChild" type="xs:string" />
<xs:attribute name="android:preferenceScreenStyle" type="xs:string" />
<xs:attribute name="android:preferenceStyle" type="xs:string" />
<xs:attribute name="android:progressBarStyleHorizontal" type="xs:string" />
<xs:attribute name="android:progressBarStyleInverse" type="xs:string" />
<xs:attribute name="android:progressBarStyleLarge" type="xs:string" />
<xs:attribute name="android:progressBarStyleLargeInverse" type="xs:string" />
<xs:attribute name="android:progressBarStyleSmall" type="xs:string" />
<xs:attribute name="android:progressBarStyleSmallInverse" type="xs:string" />
<xs:attribute name="android:progressBarStyleSmallTitle" type="xs:string" />
<xs:attribute name="android:quickContactBadgeStyleSmallWindowLarge" type="xs:string" />
<xs:attribute name="android:quickContactBadgeStyleSmallWindowMedium" type="xs:string" />
<xs:attribute name="android:quickContactBadgeStyleSmallWindowSmall" type="xs:string" />
<xs:attribute name="android:quickContactBadgeStyleWindowLarge" type="xs:string" />
<xs:attribute name="android:quickContactBadgeStyleWindowMedium" type="xs:string" />
<xs:attribute name="android:quickContactBadgeStyleWindowSmall" type="xs:string" />
<xs:attribute name="android:radioButtonStyle" type="xs:string" />
<xs:attribute name="android:ratingBarStyle" type="xs:string" />
<xs:attribute name="android:ratingBarStyleIndicator" type="xs:string" />
<xs:attribute name="android:ratingBarStyleSmall" type="xs:string" />
<xs:attribute name="android:ringtonePreferenceStyle" type="xs:string" />
<xs:attribute name="android:scrollViewStyle" type="xs:string" />
<xs:attribute name="android:seekBarStyle" type="xs:string" />
<xs:attribute name="android:segmentedButtonStyle" type="xs:string" />
<xs:attribute name="android:selectableItemBackground" type="xs:string" />
<xs:attribute name="android:spinnerDropDownItemStyle" type="xs:string" />
<xs:attribute name="android:spinnerItemStyle" type="xs:string" />
<xs:attribute name="android:spinnerStyle" type="xs:string" />
<xs:attribute name="android:starStyle" type="xs:string" />
<xs:attribute name="android:switchPreferenceStyle" type="xs:string" />
<xs:attribute name="android:tabWidgetStyle" type="xs:string" />
<xs:attribute name="android:textAppearanceButton" type="xs:string" />
<xs:attribute name="android:textAppearanceInverse" type="xs:string" />
<xs:attribute name="android:textAppearanceLarge" type="xs:string" />
<xs:attribute name="android:textAppearanceLargeInverse" type="xs:string" />
<xs:attribute name="android:textAppearanceLargePopupMenu" type="xs:string" />
<xs:attribute name="android:textAppearanceListItem" type="xs:string" />
<xs:attribute name="android:textAppearanceListItemSmall" type="xs:string" />
<xs:attribute name="android:textAppearanceMedium" type="xs:string" />
<xs:attribute name="android:textAppearanceMediumInverse" type="xs:string" />
<xs:attribute name="android:textAppearanceSearchResultSubtitle" type="xs:string" />
<xs:attribute name="android:textAppearanceSearchResultTitle" type="xs:string" />
<xs:attribute name="android:textAppearanceSmall" type="xs:string" />
<xs:attribute name="android:textAppearanceSmallInverse" type="xs:string" />
<xs:attribute name="android:textAppearanceSmallPopupMenu" type="xs:string" />
<xs:attribute name="android:textCheckMark" type="xs:string" />
<xs:attribute name="android:textCheckMarkInverse" type="xs:string" />
<xs:attribute name="android:textColorAlertDialogListItem" type="xs:string" />
<xs:attribute name="android:textColorHighlightInverse" type="xs:string" />
<xs:attribute name="android:textColorHintInverse" type="xs:string" />
<xs:attribute name="android:textColorLinkInverse" type="xs:string" />
<xs:attribute name="android:textColorPrimary" type="xs:string" />
<xs:attribute name="android:textColorPrimaryDisableOnly" type="xs:string" />
<xs:attribute name="android:textColorPrimaryInverse" type="xs:string" />
<xs:attribute name="android:textColorPrimaryInverseDisableOnly" type="xs:string" />
<xs:attribute name="android:textColorPrimaryInverseNoDisable" type="xs:string" />
<xs:attribute name="android:textColorPrimaryNoDisable" type="xs:string" />
<xs:attribute name="android:textColorSecondary" type="xs:string" />
<xs:attribute name="android:textColorSecondaryInverse" type="xs:string" />
<xs:attribute name="android:textColorSecondaryInverseNoDisable" type="xs:string" />
<xs:attribute name="android:textColorSecondaryNoDisable" type="xs:string" />
<xs:attribute name="android:textColorTertiary" type="xs:string" />
<xs:attribute name="android:textColorTertiaryInverse" type="xs:string" />
<xs:attribute name="android:textSelectHandleWindowStyle" type="xs:string" />
<xs:attribute name="android:textSuggestionsWindowStyle" type="xs:string" />
<xs:attribute name="android:textViewStyle" type="xs:string" />
<xs:attribute name="android:webTextViewStyle" type="xs:string" />
<xs:attribute name="android:webViewStyle" type="xs:string" />
<xs:attribute name="android:windowActionBar" type="xs:string" />
<xs:attribute name="android:windowActionBarOverlay" type="xs:string" />
<xs:attribute name="android:windowActionModeOverlay" type="xs:string" />
<xs:attribute name="android:windowBackground" type="xs:string" />
<xs:attribute name="android:windowCloseOnTouchOutside" type="xs:string" />
<xs:attribute name="android:windowContentOverlay" type="xs:string" />
<xs:attribute name="android:windowDisablePreview" type="xs:string" />
<xs:attribute name="android:windowEnableSplitTouch" type="xs:string" />
<xs:attribute name="android:windowFrame" type="xs:string" />
<xs:attribute name="android:windowFullscreen" type="xs:string" />
<xs:attribute name="android:windowIsFloating" type="xs:string" />
<xs:attribute name="android:windowIsTranslucent" type="xs:string" />
<xs:attribute name="android:windowNoDisplay" type="xs:string" />
<xs:attribute name="android:windowNoTitle" type="xs:string" />
<xs:attribute name="android:windowShowWallpaper" type="xs:string" />
<xs:attribute name="android:windowTitleBackgroundStyle" type="xs:string" />
<xs:attribute name="android:windowTitleSize" type="xs:string" />
<xs:attribute name="android:windowTitleStyle" type="xs:string" />
<xs:attribute name="android:yesNoPreferenceStyle" type="xs:string" />
<xs:attribute name="android:fromXDelta" type="xs:string" />
<xs:attribute name="android:fromYDelta" type="xs:string" />
<xs:attribute name="android:toXDelta" type="xs:string" />
<xs:attribute name="android:toYDelta" type="xs:string" />
<xs:attribute name="android:mode" type="xs:string" />
<xs:attribute name="android:layout_scale" type="xs:string" />
<xs:attribute name="android:alpha" type="xs:string" />
<xs:attribute name="android:clickable">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:contentDescription" type="xs:string" />
<xs:attribute name="android:drawingCacheQuality">
  
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="auto" />
        <xs:enumeration value="high" />
        <xs:enumeration value="low" />
      </xs:restriction>
    </xs:simpleType>
  
</xs:attribute>
<xs:attribute name="android:duplicateParentState">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:fadeScrollbars">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:fadingEdge">
  
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="horizontal" />
        <xs:enumeration value="none" />
        <xs:enumeration value="vertical" />
      </xs:restriction>
    </xs:simpleType>
  
</xs:attribute>
<xs:attribute name="android:fadingEdgeLength" type="xs:string" />
<xs:attribute name="android:filterTouchesWhenObscured" type="xs:string" />
<xs:attribute name="android:fitsSystemWindows">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:focusable">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:focusableInTouchMode">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:hapticFeedbackEnabled">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:isScrollContainer">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:keepScreenOn">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:layerType" type="xs:string" />
<xs:attribute name="android:longClickable">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:nextFocusDown" type="xs:string" />
<xs:attribute name="android:nextFocusForward" type="xs:string" />
<xs:attribute name="android:nextFocusLeft" type="xs:string" />
<xs:attribute name="android:nextFocusRight" type="xs:string" />
<xs:attribute name="android:nextFocusUp" type="xs:string" />
<xs:attribute name="android:overScrollMode" type="xs:string" />
<xs:attribute name="android:padding" type="xs:string" />
<xs:attribute name="android:paddingBottom" type="xs:string" />
<xs:attribute name="android:paddingLeft" type="xs:string" />
<xs:attribute name="android:paddingRight" type="xs:string" />
<xs:attribute name="android:paddingTop" type="xs:string" />
<xs:attribute name="android:requiresFadingEdge" type="xs:string" />
<xs:attribute name="android:rotation" type="xs:string" />
<xs:attribute name="android:rotationX" type="xs:string" />
<xs:attribute name="android:rotationY" type="xs:string" />
<xs:attribute name="android:saveEnabled">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:scaleX" type="xs:string" />
<xs:attribute name="android:scaleY" type="xs:string" />
<xs:attribute name="android:scrollX" type="xs:string" />
<xs:attribute name="android:scrollY" type="xs:string" />
<xs:attribute name="android:scrollbarAlwaysDrawHorizontalTrack">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:scrollbarAlwaysDrawVerticalTrack">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:scrollbarDefaultDelayBeforeFade" type="xs:string" />
<xs:attribute name="android:scrollbarFadeDuration" type="xs:string" />
<xs:attribute name="android:scrollbarSize" type="xs:string" />
<xs:attribute name="android:scrollbarStyle">
  
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="insideInset" />
        <xs:enumeration value="insideOverlay" />
        <xs:enumeration value="outsideInset" />
        <xs:enumeration value="outsideOverlay" />
      </xs:restriction>
    </xs:simpleType>
  
</xs:attribute>
<xs:attribute name="android:scrollbarThumbHorizontal" type="xs:string" />
<xs:attribute name="android:scrollbarThumbVertical" type="xs:string" />
<xs:attribute name="android:scrollbarTrackHorizontal" type="xs:string" />
<xs:attribute name="android:scrollbarTrackVertical" type="xs:string" />
<xs:attribute name="android:scrollbars">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="horizontal" />
        <xs:enumeration value="none" />
        <xs:enumeration value="vertical" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:soundEffectsEnabled">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:transformPivotX" type="xs:string" />
<xs:attribute name="android:transformPivotY" type="xs:string" />
<xs:attribute name="android:translationX" type="xs:string" />
<xs:attribute name="android:translationY" type="xs:string" />
<xs:attribute name="android:verticalScrollbarPosition" type="xs:string" />
<xs:attribute name="android:visibility">
  
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="gone" />
        <xs:enumeration value="invisible" />
        <xs:enumeration value="visible" />
      </xs:restriction>
    </xs:simpleType>
  
</xs:attribute>
<xs:attribute name="android:addStatesFromChildren">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:alwaysDrawnWithCache">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:animateLayoutChanges" type="xs:string" />
<xs:attribute name="android:animationCache">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:clipChildren">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:clipToPadding">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="true" />
        <xs:enumeration value="false" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:descendantFocusability">
  
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="afterDescendants" />
        <xs:enumeration value="beforeDescendants" />
        <xs:enumeration value="blocksDescendants" />
      </xs:restriction>
    </xs:simpleType>
  
</xs:attribute>
<xs:attribute name="android:layoutAnimation" type="xs:string" />
<xs:attribute name="android:persistentDrawingCache">
  <xs:simpleType><xs:union memberTypes="xs:string">
    <xs:simpleType>
      <xs:restriction base="xs:NMTOKEN">
        <xs:enumeration value="all" />
        <xs:enumeration value="animation" />
        <xs:enumeration value="none" />
        <xs:enumeration value="scrolling" />
      </xs:restriction>
    </xs:simpleType>
  </xs:union></xs:simpleType>
</xs:attribute>
<xs:attribute name="android:splitMotionEvents" type="xs:string" />
<xs:attribute name="android:layout_margin" type="xs:string" />
<xs:attribute name="android:layout_marginBottom" type="xs:string" />
<xs:attribute name="android:layout_marginLeft" type="xs:string" />
<xs:attribute name="android:layout_marginRight" type="xs:string" />
<xs:attribute name="android:layout_marginTop" type="xs:string" />
<xs:attribute name="android:inflatedId" type="xs:string" />
<xs:attribute name="android:streamType" type="xs:string" />
<xs:attribute name="android:author" type="xs:string" />
<xs:attribute name="android:thumbnail" type="xs:string" />
<xs:attribute name="android:staticWallpaperPreview" type="xs:string" />
<xs:attribute name="android:windowMinWidthMajor" type="xs:string" />
<xs:attribute name="android:windowMinWidthMinor" type="xs:string" />
<xs:attribute name="android:activityCloseEnterAnimation" type="xs:string" />
<xs:attribute name="android:activityCloseExitAnimation" type="xs:string" />
<xs:attribute name="android:activityOpenEnterAnimation" type="xs:string" />
<xs:attribute name="android:activityOpenExitAnimation" type="xs:string" />
<xs:attribute name="android:taskCloseEnterAnimation" type="xs:string" />
<xs:attribute name="android:taskCloseExitAnimation" type="xs:string" />
<xs:attribute name="android:taskOpenEnterAnimation" type="xs:string" />
<xs:attribute name="android:taskOpenExitAnimation" type="xs:string" />
<xs:attribute name="android:taskToBackEnterAnimation" type="xs:string" />
<xs:attribute name="android:taskToBackExitAnimation" type="xs:string" />
<xs:attribute name="android:taskToFrontEnterAnimation" type="xs:string" />
<xs:attribute name="android:taskToFrontExitAnimation" type="xs:string" />
<xs:attribute name="android:wallpaperCloseEnterAnimation" type="xs:string" />
<xs:attribute name="android:wallpaperCloseExitAnimation" type="xs:string" />
<xs:attribute name="android:wallpaperIntraCloseEnterAnimation" type="xs:string" />
<xs:attribute name="android:wallpaperIntraCloseExitAnimation" type="xs:string" />
<xs:attribute name="android:wallpaperIntraOpenEnterAnimation" type="xs:string" />
<xs:attribute name="android:wallpaperIntraOpenExitAnimation" type="xs:string" />
<xs:attribute name="android:wallpaperOpenEnterAnimation" type="xs:string" />
<xs:attribute name="android:wallpaperOpenExitAnimation" type="xs:string" />
<xs:attribute name="android:windowEnterAnimation" type="xs:string" />
<xs:attribute name="android:windowExitAnimation" type="xs:string" />
<xs:attribute name="android:windowHideAnimation" type="xs:string" />
<xs:attribute name="android:windowShowAnimation" type="xs:string" />

</xs:schema>
